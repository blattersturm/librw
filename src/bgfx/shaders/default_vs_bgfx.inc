static const uint8_t default_vs_bgfx[45243] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0xf2, 0xe1, 0x0c, 0x00, 0x06, 0x75, // VSH............u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, // _view.........u_
	0x70, 0x72, 0x6f, 0x6a, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, 0x66, // proj..@......u_f
	0x6f, 0x67, 0x45, 0x6e, 0x64, 0x02, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, // ogEnd.........u_
	0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x02, 0x00, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, // fogRange........
	0x0c, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x02, 0x00, 0xa0, // .u_fogDisable...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x00, 0xb0, // ......u_world...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, // ......u_ambLight
	0x02, 0x00, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // .........u_light
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x02, 0x08, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x10, 0x75, // Params.........u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x02, // _lightDirection.
	0x08, 0x80, 0x01, 0x08, 0x00, 0x00, 0x00, 0x0c, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, // ........u_lightC
	0x6f, 0x6c, 0x6f, 0x72, 0x02, 0x08, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6d, // olor.........u_m
	0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x02, 0x00, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x0b, // atColor.........
	0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x02, 0x00, 0x90, 0x02, 0x01, // u_surfProps.....
	0x00, 0x00, 0x00, 0xb8, 0xaf, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xc3, 0xc6, 0x8b, 0x24, 0xd5, // .......DXBC...$.
	0x7a, 0x29, 0x21, 0xdc, 0xd4, 0x47, 0x78, 0x49, 0xd1, 0x5d, 0x4d, 0x01, 0x00, 0x00, 0x00, 0xb8, // z)!..GxI.]M.....
	0xaf, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x34, // .......0.......4
	0x01, 0x00, 0x00, 0xb0, 0x09, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x88, 0x00, 0x00, 0x00, 0x04, // .......ISGN.....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......h........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x6e, // ...............n
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......u........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x7e, // ...............~
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x4e, 0x4f, 0x52, // .......COLOR.NOR
	0x4d, 0x41, 0x4c, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, // MAL.POSITION.TEX
	0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x6c, 0x00, 0x00, 0x00, 0x03, // COORD..OSGNl....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......P........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......b........
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x53, // ...............S
	0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, // V_POSITION.COLOR
	0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x53, 0x48, 0x44, 0x52, 0x74, // .TEXCOORD..SHDRt
	0x08, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x59, 0x08, 0x00, 0x04, 0x46, // ...@.......Y...F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, // . .....*..._....
	0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x01, // ......._...r....
	0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5f, // ..._...r......._
	0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, // ...2.......g....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, //  ..........e....
	0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x02, //  ......e...r ...
	0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...h.......8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // . .........8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...8...........F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // . ..........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ..?...?...?...?.
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // . .........8....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......V.......F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, // .......8........
	0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, // ...8............
	0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // .......F. ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, // ...F. .........8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, // ...........V....
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, // ...F. ..........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......8........
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x36, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x09, 0x10, 0x00, 0x01, // ...6.......6....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // ...6............
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x22, // . .........6..."
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // ......... ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // ...6...B........
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x12, // . .........6....
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ......... ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...6..."........
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x92, // . .........6....
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, // .......V. ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, // ...6...".......*
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x42, // . .........6...B
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // .......*. ......
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, // .......F.......6
	0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, // ...B............
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......".......F
	0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, // .......F........
	0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x03, // ...B............
	0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, // ...F.......6...2
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, // .......F.......6
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, // ...8...r.......F
	0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, // . ........... ..
	0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x04, // ...).......r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, // ...F.......F....
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x01, // ...:...6...r....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x72, // ...F.......6...r
	0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, // ...........6....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, // ........@......6
	0x00, 0x00, 0x05, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, // ...6...........:
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x22, 0x00, 0x00, 0x07, 0x42, // .......0..."...B
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, // ................
	0x40, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x2a, 0x00, 0x10, 0x00, 0x02, // @..........*....
	0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, // .......B........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, // @........ ......
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x2a, // ...............*
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x18, // ................
	0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ...B........@...
	0x00, 0x80, 0x3f, 0x0a, 0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0a, // ..?.. ..........
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...........*....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, // ...6...r.......F
	0x82, 0x20, 0x86, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0a, // . .A............
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, // ...........B....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, // ...F.......F....
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, // ...4...B.......*
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, // ........@......8
	0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, // ...r............
	0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0a, // ...F. ..... ....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x07, // ...V............
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x1e, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, // ............@...
	0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x06, // .......6..."....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, // ...........6...B
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, // .......*.......6
	0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, // ...........:....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, // ...8...r........
	0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, // ......... .....)
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, // .......r.......F
	0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, // .......F.......4
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....@...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, // .......3........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...F........@...
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, // ..?...?...?...?8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x3a, // ...F. .....(...:
	0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ...6............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, // .......6...B....
	0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ..... .A........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, // .......B........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // .......*.......8
	0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...B.......*....
	0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x34, // ..... .........4
	0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...B.......*....
	0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x33, // ..... .........3
	0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...B.......*....
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x36, 0x00, 0x00, 0x05, 0x42, // ....@.....?6...B
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, // .......*.......6
	0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, // ...6.... .......
	0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x01, // .......6.... ...
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, // ...F.......6...2
	0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, //  ......F.......6
	0x00, 0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, // ...B ......*....
	0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x53, 0x50, 0x44, 0x42, 0x00, 0xa6, 0x00, 0x00, 0x4d, // ...>...SPDB....M
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x43, 0x2f, 0x43, 0x2b, 0x2b, 0x20, 0x4d, // icrosoft C/C++ M
	0x53, 0x46, 0x20, 0x37, 0x2e, 0x30, 0x30, 0x0d, 0x0a, 0x1a, 0x44, 0x53, 0x00, 0x00, 0x00, 0x00, // SF 7.00...DS....
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x00, // .......S...h....
	0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...O............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x38, // ...............8
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, // ... ...<........
	0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, // ................
	0x2e, 0x31, 0x01, 0x51, 0xd9, 0xbe, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x50, 0xa8, 0x3a, 0x60, 0x8e, // .1.Q..^....P.:`.
	0x77, 0xdb, 0x41, 0xa7, 0xf4, 0x75, 0x1e, 0x1c, 0x23, 0xbc, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, // w.A..u..#.t.....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ........Q3......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, // ...............f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat2 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint2 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, // _x); }.float3 in
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t3 _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat4 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint4 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x69, 0x6e, // _x); }.float uin
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // t _x) { return a
	0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // sfloat(_x); }.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // oat2 uintBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint2 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x75, 0x69, // _x); }.float3 ui
	0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, // ntBitsToFloat(ui
	0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // nt3 _x) { return
	0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  asfloat(_x); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // float4 uintBitsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, // oFloat(uint4 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, // t(_x); }.uint fl
	0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, // oatBitsToUint(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int2 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float2 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0xc6, // _x); }.uint3 fl.
	0x5a, 0x00, 0x00, 0x4c, 0xe8, 0x03, 0x00, 0x75, 0x83, 0x01, 0x00, 0xe9, 0x50, 0x00, 0x00, 0x83, // Z..L...u....P...
	0xf2, 0x02, 0x00, 0xe2, 0x7b, 0x02, 0x00, 0x6d, 0x18, 0x01, 0x00, 0x30, 0x5b, 0x03, 0x00, 0x2d, // ....{..m...0[..-
	0xf2, 0x03, 0x00, 0x16, 0xe5, 0x03, 0x00, 0xe9, 0xf0, 0x02, 0x00, 0x8f, 0x45, 0x01, 0x00, 0x2a, // ............E..*
	0xe5, 0x01, 0x00, 0x92, 0xe6, 0x03, 0x00, 0x52, 0x9b, 0x03, 0x00, 0x67, 0x9f, 0x01, 0x00, 0x7d, // .......R...g...}
	0xda, 0x01, 0x00, 0x21, 0xb7, 0x01, 0x00, 0xfd, 0xd7, 0x00, 0x00, 0x8c, 0x90, 0x03, 0x00, 0x00, // ...!............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, // .............../
	0x2f, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, // / shaderc comman
	0x64, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x3a, 0x5c, 0x64, 0x65, // d line:.// F:.de
	0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, 0x69, // v.code.bgfx..bui
	0x6c, 0x64, 0x5c, 0x77, 0x69, 0x6e, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x39, 0x5c, // ld.win64_vs2019.
	0x62, 0x69, 0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, // bin.shadercRelea
	0x73, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, // se.exe --debug -
	0x66, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x2d, // f default.vert -
	0x6f, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, // o default_vs_bgf
	0x78, 0x2e, 0x69, 0x6e, 0x63, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, 0x2d, 0x2d, // x.inc --bin2c --
	0x74, 0x79, 0x70, 0x65, 0x20, 0x76, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, // type v --platfor
	0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x2d, 0x70, 0x72, 0x6f, 0x66, // m windows --prof
	0x69, 0x6c, 0x65, 0x20, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ile vs_4_0..stru
	0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ct Output.{.floa
	0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, // t4 gl_Position :
	0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, 0x66, 0x6c, //  SV_POSITION;.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, // oat4 v_color0 : 
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, // COLOR;.float3 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, // texcoord0 : TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // OORD0;.};.float 
	0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, // intBitsToFloat(i
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat2 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint2 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, // _x); }.float3 in
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t3 _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat4 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint4 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x69, 0x6e, // _x); }.float uin
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // t _x) { return a
	0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // sfloat(_x); }.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // oat2 uintBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint2 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x75, 0x69, // _x); }.float3 ui
	0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, // ntBitsToFloat(ui
	0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // nt3 _x) { return
	0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  asfloat(_x); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // float4 uintBitsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, // oFloat(uint4 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, // t(_x); }.uint fl
	0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, // oatBitsToUint(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int2 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float2 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, // _x); }.uint3 flo
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, // atBitsToUint(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int4 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float4 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _x); }.int float
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // BitsToInt(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, // _x) { return asi
	0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, // nt(_x); }.int2 f
	0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, // loatBitsToInt(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat2 _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, // n asint(_x); }.i
	0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, // nt3 floatBitsToI
	0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // nt(float3 _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, // return asint(_x)
	0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, // ; }.int4 floatBi
	0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // tsToInt(float4 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, // x) { return asin
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x69, // t(_x); }.uint bi
	0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, // tfieldReverse(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, // reversebits(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, //  }.uint2 bitfiel
	0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, // dReverse(uint2 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, // x) { return reve
	0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // rsebits(_x); }.u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, // int3 bitfieldRev
	0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // erse(uint3 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, //  return reverseb
	0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, // its(_x); }.uint4
	0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, //  bitfieldReverse
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (uint4 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, // urn reversebits(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, // _x); }.uint pack
	0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // Half2x16(float2 
	0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x66, 0x33, // _x).{.return (f3
	0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x79, 0x29, 0x3c, 0x3c, 0x31, 0x36, // 2tof16(_x.y)<<16
	0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, // ) | f32tof16(_x.
	0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x6e, 0x70, // x);.}.float2 unp
	0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x75, 0x69, 0x6e, 0x74, // ackHalf2x16(uint
	0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x).{.return fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, // oat2(f16tof32(_x
	0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x29, 0x2c, 0x20, 0x66, 0x31, 0x36, 0x74, //  & 0xffff), f16t
	0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x29, // of32(_x >> 16) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, // ;.}.struct BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ampler2D.{.Sampl
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // erState m_sample
	0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, // r;.Texture2D m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // t BgfxISampler2D
	0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x69, 0x6e, 0x74, // .{.Texture2D<int
	0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // 4> m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, // .struct BgfxUSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // pler2D.{.Texture
	0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2D<uint4> m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // gfxSampler2DArra
	0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, // y.{.SamplerState
	0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, //  m_sampler;.Text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ure2DArray m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, // BgfxSampler2DSha
	0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, // dow.{.SamplerCom
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // parisonState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // ampler;.Texture2
	0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // D m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, // er2DArrayShadow.
	0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, // {.SamplerCompari
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // sonState m_sampl
	0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // er;.Texture2DArr
	0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // ay m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // .struct BgfxSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, // ler3D.{.SamplerS
	0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, // tate m_sampler;.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // Texture3D m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, // gfxISampler3D.{.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, // Texture3D<int4> 
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, // m_texture;.};.st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ruct BgfxUSample
	0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, // r3D.{.Texture3D<
	0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // uint4> m_texture
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, // ;.};.struct Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x0a, 0x7b, 0x0a, 0x53, 0x61, // SamplerCube.{.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // mplerState m_sam
	0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, // pler;.TextureCub
	0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // e m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, // erCubeShadow.{.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, // amplerComparison
	0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, // State m_sampler;
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, // .TextureCube m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, // t BgfxSampler2DM
	0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4d, 0x53, 0x3c, // S.{.Texture2DMS<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // float4> m_textur
	0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // e;.};.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // xTexture2D(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ampler2D _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float2 _coord
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // mple(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // sampler, _coord)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, // exture2DBias(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, // rd, float _bias)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // pleBias(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // rd, _bias);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 2DLod(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat2 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at _level).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // level);.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, //  bgfxTexture2DLo
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // dOffset(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float2 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, // loat _level, int
	0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 2 _offset).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, // level, _offset);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, // xture2DProj(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float3 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, // d).{.float2 coor
	0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, // d = _coord.xy * 
	0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // rcp(_coord.z);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // _texture.Sample(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // er, coord);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // 2DProj(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // er2D _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat4 _coord).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, // float2 coord = _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, // coord.xy * rcp(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // coord.w);.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ure.Sample(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, // ler.m_sampler, c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, // bgfxTexture2DGra
	0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // d(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // _sampler, float2
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, //  _coord, float2 
	0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, // _dPdx, float2 _d
	0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // Pdy).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, // .SampleGrad(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x5f, // _coord, _dPdx, _
	0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // dPdy);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // bgfxTexture2DArr
	0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // ay(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // e(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, // pler, _coord);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, // ure2DArrayLod(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // _lod).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x3b, // , _coord, _lod);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x4f, // xture2DArrayLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ffset(BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // r2DArray _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float3 _coord
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, // , float _level, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // int2 _offset).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // Level(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, // , _level, _offse
	0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, // t);.}.float bgfx
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // Shadow2D(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, // pler2DShadow _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, // e.SampleCmpLevel
	0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // Zero(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // sampler, _coord.
	0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, // xy, _coord.z);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, // .float bgfxShado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // w2DProj(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, // ler2DShadow _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, // pler, float4 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, // ord).{.float3 co
	0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, // ord = _coord.xyz
	0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, //  * rcp(_coord.w)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, // leCmpLevelZero(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6f, // r, coord.xy, coo
	0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // rd.z);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // bgfxShadow2DArra
	0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // y(BgfxSampler2DA
	0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // rrayShadow _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float4 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // rd).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, // SampleCmpLevelZe
	0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // ro(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, // mpler, _coord.xy
	0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z, _coord.w);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re3D(BgfxSampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 3D _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at3 _coord).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, // texture.Sample(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // r, _coord);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 3DLod(BgfxSample
	0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r3D _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at _level).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, // level);.}.int4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, // gfxTexture3D(Bgf
	0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // xISampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, // ord).{.uint3 siz
	0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // e;._sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, // xture.GetDimensi
	0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, // ons(size.x, size
	0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // .y, size.z);.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, // exture.Load(int4
	0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, // (_coord * size, 
	0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, // 0) );.}.uint4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, // fxTexture3D(Bgfx
	0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // USampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, // rd).{.uint3 size
	0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ;._sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, // ture.GetDimensio
	0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, // ns(size.x, size.
	0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // y, size.z);.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, // xture.Load(int4(
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, // _coord * size, 0
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // ) );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, // fxTextureCube(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, // fxSamplerCube _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // coord).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // re.Sample(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x42, // bgfxTextureCubeB
	0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, // ias(BgfxSamplerC
	0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // ube _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at _bias).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, // xture.SampleBias
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, // ler, _coord, _bi
	0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // as);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, // fxTextureCubeLod
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, // (BgfxSamplerCube
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _level).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, // ure.SampleLevel(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, // er, _coord, _lev
	0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, // el);.}.float bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, // xShadowCube(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, // SamplerCubeShado
	0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // w _sampler, floa
	0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t4 _coord).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, // exture.SampleCmp
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // LevelZero(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // oord.xyz, _coord
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .w);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, // fxTexelFetch(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ler, int2 _coord
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // , int _lod).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, // texture.Load(int
	0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, // 3(_coord, _lod) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, // TexelFetchOffset
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, // sampler, int2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, // oord, int _lod, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // int2 _offset).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, // m_texture.Load(i
	0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // nt3(_coord, _lod
	0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ), _offset );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float2 bgfxTextu
	0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // reSize(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, // er2D _sampler, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // nt _lod).{.float
	0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // 2 result;._sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, // er.m_texture.Get
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, // Dimensions(resul
	0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // t.x, result.y);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, // return result;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ureGather(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // , float2 _coord)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, // er.m_texture.Gat
	0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // herRed(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // d );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, // fxTextureGatherO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ffset(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // oat2 _coord, int
	0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 2 _offset).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, // exture.GatherRed
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6f, 0x66, // ler, _coord, _of
	0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // fset );.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, //  bgfxTextureGath
	0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // er(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, // .m_texture.Gathe
	0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // rRed(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, // sampler, _coord 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // );.}.int4 bgfxTe
	0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, // xelFetch(BgfxISa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, // , int2 _coord, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // nt _lod).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, // ture.Load(int3(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, // coord, _lod) );.
	0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, // }.uint4 bgfxTexe
	0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, // lFetch(BgfxUSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _lod).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, // re.Load(int3(_co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ord, _lod) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, // float4 bgfxTexel
	0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Fetch(BgfxSample
	0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // r2DMS _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _sampleIdx).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x5f, 0x63, // _texture.Load(_c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, // oord, _sampleIdx
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // TexelFetch(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, // ampler2DArray _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // ampler, int3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ord, int _lod).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, // int4(_coord, _lo
	0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // d) );.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, // gfxTexelFetch(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // pler, int3 _coor
	0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // d, int _lod).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, // _texture.Load(in
	0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // t4(_coord, _lod)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x67, 0x66, //  );.}.float3 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, // xTextureSize(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ler, int _lod).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, // .float3 result;.
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, // re.GetDimensions
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // (result.x, resul
	0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // t.y, result.z);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, // return result;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // .float3 instMul(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // float3 _vec, flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at3x3 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, // turn mul(_mtx, _
	0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, // vec); }.float3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, // nstMul(float3x3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, // _mtx, float3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, // c) { return mul(
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // _vec, _mtx); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, // loat4 instMul(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat4 _vec, float
	0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // 4x4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, // rn mul(_mtx, _ve
	0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, // c); }.float4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, // tMul(float4x4 _m
	0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // tx, float4 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, //  { return mul(_v
	0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // ec, _mtx); }.boo
	0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, // l2 lessThan(floa
	0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, // t2 _a, float2 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, // ) { return _a < 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool3 less
	0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, // Than(float3 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float3 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // urn _a < _b; }.b
	0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, // ool4 lessThan(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _a, float4 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, // < _b; }.bool2 le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ssThanEqual(floa
	0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, // t2 _a, float2 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, // ) { return _a <=
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, //  _b; }.bool3 les
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sThanEqual(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, // 3 _a, float3 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, //  { return _a <= 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool4 less
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ThanEqual(float4
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float4 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, // { return _a <= _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, // b; }.bool2 great
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // erThan(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a > _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // .bool3 greaterTh
	0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // an(float3 _a, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // n _a > _b; }.boo
	0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, // l4 greaterThan(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _a, float4
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, //  > _b; }.bool2 g
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, // reaterThanEqual(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // a >= _b; }.bool3
	0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, //  greaterThanEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float3 _a, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a >= _b; }.boo
	0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, // l4 greaterThanEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat4 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a >= _b; }.b
	0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, // ool2 notEqual(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 _a, float2 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6e, // != _b; }.bool3 n
	0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // otEqual(float3 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float3 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, // return _a != _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, //  }.bool4 notEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float4 _a, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a != _b; }.boo
	0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // l2 equal(float2 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float2 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, //  return _a == _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, // ; }.bool3 equal(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _a, float
	0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 3 _b) { return _
	0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, // a == _b; }.bool4
	0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, //  equal(float4 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float4 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, // eturn _a == _b; 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, // }.float mix(floa
	0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x2c, 0x20, // t _a, float _b, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _t) { retu
	0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, // rn lerp(_a, _b, 
	0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x69, // _t); }.float2 mi
	0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // x(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // at2 _b, float2 _
	0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, // t) { return lerp
	0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_a, _b, _t); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 mix(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x2c, // 3 _a, float3 _b,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _t) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, // turn lerp(_a, _b
	0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // , _t); }.float4 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // mix(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _b, float4
	0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, //  _t) { return le
	0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, // rp(_a, _b, _t); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, // }.float mod(floa
	0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x29, 0x20, // t _a, float _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, // { return _a - _b
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, //  * floor(_a / _b
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x6f, 0x64, 0x28, // ); }.float2 mod(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, // a - _b * floor(_
	0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // a / _b); }.float
	0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, // 3 mod(float3 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, // turn _a - _b * f
	0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, // loor(_a / _b); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, // .float4 mod(floa
	0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // t4 _a, float4 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, // ) { return _a - 
	0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, // _b * floor(_a / 
	0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x65, // _b); }.float2 ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c2_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // x) { return floa
	0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // t2(_x, _x); }.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // oat3 vec3_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // rn float3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // , _x); }.float4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x) { return fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // oat4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x75, 0x76, //  _x); }.uint2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, // x) { return uint
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // 2(_x, _x); }.uin
	0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // t3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uint3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uint4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x28, //  { return uint4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, //  }.float4x4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // romRows(float4 _
	0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, // 0, float4 _1, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _2, float4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, // _3).{.return flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at4x4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // , _3);.}.float4x
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, // 4 mtxFromCols(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _0, float4 
	0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, // _1, float4 _2, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // loat4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, // rn transpose(flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at4x4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // , _3) );.}.float
	0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // 3x3 mtxFromRows(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _0, float
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, // 3 _1, float3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // .{.return float3
	0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // x3(_0, _1, _2);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // }.float3x3 mtxFr
	0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, // omCols(float3 _0
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // , float3 _1, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _2).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  transpose(float
	0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // 3x3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // );.}.static floa
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x73, // t4 u_viewRect;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // tatic float4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // m float4x4 u_vie
	0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // w;.static float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // x4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // iform float4x4 u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // _proj;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // oat4x4 u_invProj
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // ;.static float4x
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, // 4 u_viewProj;.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // atic float4x4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, // invViewProj;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, // tic float4x4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // odel[32];.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // lView;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // oat4x4 u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ewProj;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, // loat4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 4;.static float2
	0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x3b, 0x0a, 0x73, 0x74, 0x61, //  u_alphaRef;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, // tic float4 u_fog
	0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, // Start;.uniform f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x3b, 0x0a, // loat4 u_fogEnd;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // uniform float4 u
	0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _fogRange;.unifo
	0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, // rm float4 u_fogD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // isable;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // loat4 u_fogColor
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // x4 u_world;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, // orm float4 u_amb
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, // Light;.uniform f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // loat4 u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ams[8];.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, // loat4 u_lightPos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ition[8];.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // m float4 u_light
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // Direction[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // iform float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // ightColor[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // iform float4 u_m
	0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // atColor;.uniform
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, //  float4 u_surfPr
	0x6f, 0x70, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x44, 0x6f, 0x44, 0x79, // ops;.float3 DoDy
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // namicLight(float
	0x33, 0x20, 0x56, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x29, 0x0a, 0x7b, // 3 V, float3 N).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // .float3 color = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // float3(0.0, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0);.for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, //  = 0; i < 8; i++
	0x29, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // ){.if(u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ams[i].x == 0.0)
	0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, // .break;.if(u_lig
	0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // htParams[i].x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, //  1.0){.float l =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, //  max(0.0, dot(N,
	0x20, 0x2d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, //  -u_lightDirecti
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, // on[i].xyz));.col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6c, 0x2a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, // or += l*u_lightC
	0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x69, 0x5d, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x65, 0x6c, // olor[i].rgb;.}el
	0x73, 0x65, 0x0a, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // se.;.}.return co
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x44, 0x6f, 0x46, // lor;.}.float DoF
	0x6f, 0x67, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // og(float w).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x77, 0x20, 0x2d, 0x20, // turn clamp((w - 
	0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x2e, 0x78, 0x29, 0x2a, 0x75, 0x5f, 0x66, 0x6f, // u_fogEnd.x)*u_fo
	0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, // gRange.x, u_fogD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // isable.x, 1.0);.
	0x7d, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20, 0x66, // }.Output main( f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, // loat4 a_color0 :
	0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  COLOR0 , float4
	0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3a, 0x20, 0x4e, 0x4f, 0x52, 0x4d, //  a_normal : NORM
	0x41, 0x4c, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, // AL , float3 a_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, // sition : POSITIO
	0x4e, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // N , float2 a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, // coord0 : TEXCOOR
	0x44, 0x30, 0x29, 0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, 0x61, // D0) { Output _va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // rying_; _varying
	0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // _.v_color0 = flo
	0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // at4(1.0, 0.0, 0.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // 0, 1.0);; _varyi
	0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // ng_.v_texcoord0 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // = float3(0.0, 0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 0, 0.0);;.{.floa
	0x74, 0x34, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, // t4 V = mul(u_wor
	0x6c, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, // ld, float4(a_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // ition, 1.0));.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, // oat4 position = 
	0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x6d, 0x75, 0x6c, 0x28, // mul(u_proj, mul(
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2c, 0x20, 0x56, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // u_view, V));.flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, // at3x3 otherWorld
	0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x29, 0x75, 0x5f, 0x77, //  = (float3x3)u_w
	0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x20, 0x3d, // orld;.float3 N =
	0x20, 0x6d, 0x75, 0x6c, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2c, //  mul(otherWorld,
	0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, //  a_normal).xyz;.
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // _varying_.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // oord0.xy = a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // coord0;._varying
	0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, // _.v_color0 = a_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, // olor0;._varying_
	0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, // .v_color0.rgb +=
	0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x72, 0x67, 0x62, 0x2a, //  u_ambLight.rgb*
	0x28, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x78, 0x29, 0x3b, // (u_surfProps.x);
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, // ._varying_.v_col
	0x6f, 0x72, 0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x44, 0x79, 0x6e, // or0.rgb += DoDyn
	0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x56, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // amicLight(V.xyz,
	0x20, 0x4e, 0x29, 0x2a, 0x28, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, //  N)*(u_surfProps
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, // .z);._varying_.v
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, // _color0 = clamp(
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // _varying_.v_colo
	0x72, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // r0, 0.0f, 1.0);.
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // _varying_.v_colo
	0x72, 0x30, 0x20, 0x2a, 0x3d, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // r0 *= u_matColor
	0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, // ;._varying_.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x46, 0x6f, // xcoord0.z = DoFo
	0x67, 0x28, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x5f, // g(position.w);._
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, // varying_.gl_Posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // tion = position;
	0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // .} return _varyi
	0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ng_;.}..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, // ................
	0xef, 0xfe, 0xef, 0x01, 0x00, 0x00, 0x00, 0xfd, 0x2f, 0x00, 0x00, 0x00, 0x46, 0x3a, 0x5c, 0x64, // ......../...F:.d
	0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, // ev.code.re3-upst
	0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, // ream.librw.src.b
	0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x64, 0x65, 0x66, 0x61, // gfx.shaders.defa
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, // ult_vs_bgfx.inc.
	0x68, 0x6c, 0x73, 0x6c, 0x00, 0x00, 0x66, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, // hlsl..f:.dev.cod
	0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, // e.re3-upstream.l
	0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, // ibrw.src.bgfx.sh
	0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x73, // aders.default_vs
	0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x2f, // _bgfx.inc.hlsl./
	0x2f, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, // / shaderc comman
	0x64, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x3a, 0x5c, 0x64, 0x65, // d line:.// F:.de
	0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, 0x69, // v.code.bgfx..bui
	0x6c, 0x64, 0x5c, 0x77, 0x69, 0x6e, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x39, 0x5c, // ld.win64_vs2019.
	0x62, 0x69, 0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, // bin.shadercRelea
	0x73, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, // se.exe --debug -
	0x66, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x2d, // f default.vert -
	0x6f, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, // o default_vs_bgf
	0x78, 0x2e, 0x69, 0x6e, 0x63, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, 0x2d, 0x2d, // x.inc --bin2c --
	0x74, 0x79, 0x70, 0x65, 0x20, 0x76, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, // type v --platfor
	0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x2d, 0x70, 0x72, 0x6f, 0x66, // m windows --prof
	0x69, 0x6c, 0x65, 0x20, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ile vs_4_0..stru
	0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ct Output.{.floa
	0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, // t4 gl_Position :
	0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, 0x66, 0x6c, //  SV_POSITION;.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, // oat4 v_color0 : 
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, // COLOR;.float3 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, // texcoord0 : TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // OORD0;.};.float 
	0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, // intBitsToFloat(i
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x1b, // asfloat(_x); }..
	0xe2, 0x30, 0x01, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x0c, 0x19, 0x10, 0xe3, 0x2a, 0xd6, 0x01, 0x01, // .0..........*...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x1b, 0xe2, 0x30, 0x01, 0x27, // ...K...(.....0.'
	0x06, 0x30, 0x08, 0x68, 0x2f, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x4b, // .0.h/......J...K
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x42, 0x00, 0x3c, 0x11, 0x10, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x01, // ...B.<..........
	0x00, 0x01, 0x00, 0xac, 0x4c, 0x0a, 0x00, 0x01, 0x00, 0x01, 0x00, 0xac, 0x4c, 0x4d, 0x69, 0x63, // ....L.......LMic
	0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, // rosoft (R) HLSL 
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, // Shader Compiler 
	0x31, 0x30, 0x2e, 0x31, 0x00, 0x00, 0x00, 0x36, 0x00, 0x3d, 0x11, 0x01, 0x68, 0x6c, 0x73, 0x6c, // 10.1...6.=..hlsl
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x00, 0x30, 0x78, 0x31, 0x30, 0x30, 0x35, 0x00, 0x68, 0x6c, 0x73, // Flags.0x1005.hls
	0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x00, 0x68, // lTarget.vs_4_0.h
	0x6c, 0x73, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x2a, // lslEntry.main..*
	0x00, 0x10, 0x11, 0x00, 0x00, 0x00, 0x00, 0x94, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, // ................
	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x78, // ...............x
	0x00, 0x00, 0x00, 0x01, 0x00, 0xa0, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, // ......main...>..
	0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x00, 0x00, // .....a_color0...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x00, // .......x........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x78, // .....P.........x
	0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .............P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x08, // .......x........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x78, // .....P.........x
	0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x0c, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, // .............>..
	0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, // .....a_normal...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x10, // .......x........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x78, // .....P.........x
	0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .............P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x18, // .......x........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x78, // .....P.........x
	0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x1c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x01, // ...........2.>..
	0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, // .....a_position.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xfc, 0x07, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, // ... .....P......
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x24, 0x00, 0x00, 0x00, 0x16, // ...x.......$....
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xfc, 0x07, 0x28, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x02, 0x10, 0x00, 0x00, 0x09, // ...(...2.>......
	0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x00, // .a_texcoord0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x30, // .......x.......0
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x78, // .....P.........x
	0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x34, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x06, // .......4...:.>..
	0x10, 0x00, 0x00, 0x88, 0x00, 0x3c, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // .....<main retur
	0x6e, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // n value>........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x20, // .........P..... 
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x20, 0x00, 0x00, 0x00, 0x16, // ...x....... ....
	0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x24, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.....$...x....
	0x00, 0xfc, 0x07, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x28, // ...$.....P.....(
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x28, 0x00, 0x00, 0x00, 0x16, // ...x.......(....
	0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xfc, 0x07, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x14, // .........P......
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x14, 0x00, 0x00, 0x00, 0x16, // ...x............
	0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xfc, 0x07, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x1c, // .........P......
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x1c, 0x00, 0x00, 0x00, 0x16, // ...x............
	0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xfc, 0x07, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x04, // .........P......
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x04, 0x00, 0x00, 0x00, 0x16, // ...x............
	0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xfc, 0x07, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x0c, // .........P......
	0x00, 0x04, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0xfc, 0x07, 0x0c, 0x00, 0x00, 0x00, 0x32, // ...x...........2
	0x00, 0x3e, 0x11, 0x05, 0x10, 0x00, 0x00, 0x08, 0x00, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // .>......._varyin
	0x67, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // g_..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0x3c, // .....P..... ...<
	0x04, 0x00, 0x00, 0x01, 0x00, 0x38, 0x04, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....8. .....P..
	0x00, 0x05, 0x00, 0x24, 0x00, 0x04, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x01, 0x00, 0x38, 0x04, 0x24, // ...$...<.....8.$
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x50, // .....P.........P
	0x04, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x02, 0x40, 0x00, 0x4c, 0x02, 0x30, 0x00, 0x00, 0x00, 0x1a, // .......@.L.0....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0x50, 0x04, 0x00, 0x00, 0x01, // .P.........P....
	0x00, 0xdc, 0x02, 0x40, 0x00, 0x4c, 0x02, 0x34, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x50, 0x11, 0x00, // ...@.L.4.....P..
	0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x50, 0x04, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x02, 0x40, // .......P.......@
	0x00, 0x4c, 0x02, 0x38, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x1c, // .L.8.....P......
	0x00, 0x04, 0x00, 0x50, 0x04, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x02, 0x3c, 0x00, 0x00, 0x00, 0x16, // ...P.......<....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x90, 0x04, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x4c, 0x02, 0x40, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x14, // .L.@.....P......
	0x00, 0x04, 0x00, 0x90, 0x04, 0x00, 0x00, 0x01, 0x00, 0x4c, 0x02, 0x44, 0x00, 0x00, 0x00, 0x16, // .........L.D....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x90, 0x04, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x4c, 0x02, 0x48, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, // .L.H.....P......
	0x00, 0x04, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x01, 0x00, 0x48, 0x01, 0x10, 0x00, 0x00, 0x00, 0x16, // ...,.....H......
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x01, // .P.........,....
	0x00, 0x48, 0x01, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, // .H.......P......
	0x00, 0x04, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x01, 0x00, 0x48, 0x01, 0x18, 0x00, 0x00, 0x00, 0x16, // ...,.....H......
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x01, // .P.........,....
	0x00, 0x48, 0x01, 0x1c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x28, // .H.......P.....(
	0x00, 0x04, 0x00, 0x0c, 0x08, 0x00, 0x00, 0x01, 0x00, 0x68, 0x00, 0x28, 0x00, 0x00, 0x00, 0x16, // .........h.(....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x20, 0x08, 0x00, 0x00, 0x01, // .P......... ....
	0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, // .T.......P......
	0x00, 0x04, 0x00, 0x20, 0x08, 0x00, 0x00, 0x01, 0x00, 0x54, 0x00, 0x04, 0x00, 0x00, 0x00, 0x16, // ... .....T......
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x20, 0x08, 0x00, 0x00, 0x01, // .P......... ....
	0x00, 0x54, 0x00, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, // .T.......P......
	0x00, 0x04, 0x00, 0x20, 0x08, 0x00, 0x00, 0x01, 0x00, 0x54, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2a, // ... .....T.....*
	0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x08, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .>.......V......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x58, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x00, // .......X........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x58, // .....P.........X
	0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x58, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x08, // .......X........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x58, // .....P.........X
	0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, // .............>..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, // .....position...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x74, 0x05, 0x00, // .............t..
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .....P..........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x74, 0x05, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....t.......P..
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x74, 0x05, 0x08, // .............t..
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, // .....P..........
	0x03, 0x00, 0x00, 0x01, 0x00, 0x74, 0x05, 0x0c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x08, // .....t.....2.>..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x00, // .....otherWorld.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x18, 0x03, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xc4, 0x00, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, // .........P......
	0x00, 0x04, 0x00, 0x30, 0x03, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x00, 0x14, 0x00, 0x00, 0x00, 0x16, // ...0............
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x48, 0x03, 0x00, 0x00, 0x01, // .P.........H....
	0x00, 0xe0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, // .........P......
	0x00, 0x04, 0x00, 0x60, 0x03, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x00, 0x20, 0x00, 0x00, 0x00, 0x16, // ...`....... ....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x78, 0x03, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0xc4, 0x00, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x1c, // ...$.....P......
	0x00, 0x04, 0x00, 0x90, 0x03, 0x00, 0x00, 0x01, 0x00, 0xc0, 0x00, 0x30, 0x00, 0x00, 0x00, 0x16, // ...........0....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0x90, 0x03, 0x00, 0x00, 0x01, // .P..... ........
	0x00, 0xc0, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, // ...<.....P......
	0x00, 0x04, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x01, 0x00, 0xa8, 0x00, 0x34, 0x00, 0x00, 0x00, 0x16, // ...........4....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x90, 0x00, 0x38, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x08, // ...8...*.>......
	0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .N..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xdc, // .....P..........
	0x03, 0x00, 0x00, 0x01, 0x00, 0xe4, 0x02, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x01, 0x00, 0xb4, 0x02, 0x14, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x28, // .....P.........(
	0x04, 0x00, 0x00, 0x01, 0x00, 0x98, 0x02, 0x18, 0x00, 0x00, 0x00, 0xda, 0x00, 0x4d, 0x11, 0x80, // .............M..
	0x00, 0x00, 0x00, 0xbc, 0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x00, 0x09, 0x01, 0x0d, // ................
	0x25, 0x06, 0x02, 0x03, 0x84, 0x30, 0x0d, 0x1a, 0x06, 0x02, 0x03, 0x20, 0x0d, 0x1d, 0x06, 0x02, // %....0..... ....
	0x03, 0x68, 0x0d, 0x06, 0x06, 0x02, 0x03, 0x34, 0x09, 0x06, 0x03, 0x04, 0x09, 0x01, 0x0d, 0x1d, // .h.....4........
	0x0b, 0x24, 0x0d, 0x35, 0x06, 0x02, 0x03, 0x34, 0x0d, 0x1f, 0x06, 0x02, 0x03, 0x5c, 0x0d, 0x01, // .$.5...4........
	0x06, 0x02, 0x03, 0x44, 0x09, 0x17, 0x0d, 0x19, 0x06, 0x0d, 0x03, 0x04, 0x09, 0x01, 0x0d, 0x01, // ...D............
	0x06, 0x10, 0x03, 0x1c, 0x0d, 0x0d, 0x0b, 0x24, 0x04, 0x3c, 0x08, 0x00, 0x09, 0x08, 0x0d, 0x24, // .......$.<.....$
	0x01, 0x84, 0xa8, 0x06, 0x15, 0x03, 0x00, 0x09, 0x09, 0x0d, 0x0d, 0x06, 0x02, 0x03, 0x20, 0x09, // .............. .
	0x01, 0x0d, 0x1a, 0x03, 0x14, 0x09, 0x10, 0x0d, 0x14, 0x03, 0x2c, 0x09, 0x04, 0x0d, 0x1c, 0x06, // ..........,.....
	0x02, 0x03, 0x28, 0x09, 0x01, 0x0d, 0x1d, 0x03, 0x28, 0x0d, 0x06, 0x0b, 0x2c, 0x09, 0x06, 0x03, // ..(.....(...,...
	0x04, 0x09, 0x04, 0x0d, 0x1c, 0x0b, 0x24, 0x09, 0x01, 0x0d, 0x1d, 0x03, 0x28, 0x09, 0x1b, 0x0d, // ......$.....(...
	0x32, 0x0b, 0x2c, 0x09, 0x14, 0x0d, 0x33, 0x03, 0x24, 0x09, 0x0b, 0x0d, 0x34, 0x03, 0x1c, 0x09, // 2.,...3.$...4...
	0x0a, 0x0d, 0x1e, 0x06, 0x02, 0x03, 0x1c, 0x09, 0x01, 0x03, 0x28, 0x0d, 0x01, 0x06, 0x02, 0x03, // ..........(.....
	0x1c, 0x09, 0x17, 0x0d, 0x19, 0x06, 0x0d, 0x03, 0x04, 0x09, 0x01, 0x0d, 0x01, 0x06, 0x10, 0x03, // ................
	0x1c, 0x0d, 0x0d, 0x0b, 0x24, 0x04, 0x3c, 0x46, 0x00, 0x3e, 0x11, 0x0a, 0x10, 0x00, 0x00, 0x88, // ....$.<F.>......
	0x00, 0x3c, 0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, // .<DoDynamicLight
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, //  return value>..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x78, 0x06, 0x00, 0x00, 0x01, // .P.........x....
	0x00, 0x48, 0x00, 0x64, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, // .H.d.....P......
	0x00, 0x04, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x01, 0x00, 0x34, 0x00, 0x68, 0x00, 0x00, 0x00, 0x16, // .........4.h....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x20, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x09, // . .l...*.>......
	0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .N..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xa8, // .....P..........
	0x04, 0x00, 0x00, 0x01, 0x00, 0x18, 0x02, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xa8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x18, 0x02, 0x14, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xa8, // .....P..........
	0x04, 0x00, 0x00, 0x01, 0x00, 0x18, 0x02, 0x18, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x01, // .............>..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....color......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x50, // .............(.P
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xc8, // .....P..........
	0x04, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x54, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....(.T.....P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x58, // .............(.X
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xf0, // .....P..........
	0x04, 0x00, 0x00, 0x01, 0x00, 0xd0, 0x01, 0x64, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .......d.....P..
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xf0, 0x04, 0x00, 0x00, 0x01, 0x00, 0xd0, 0x01, 0x68, // ...............h
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xf0, // .....P..........
	0x04, 0x00, 0x00, 0x01, 0x00, 0xd0, 0x01, 0x6c, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x74, // .......l...*.>.t
	0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....i..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x16, // .........(......
	0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x05, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xbc, 0x01, 0x60, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x40, 0x00, 0x00, 0x00, 0x00, // ...`...*.>.@....
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .l..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0xfc, // .....P..........
	0x05, 0x00, 0x00, 0x01, 0x00, 0x48, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x4e, 0x11, 0x36, // .....H.(.....N.6
	0x00, 0x4d, 0x11, 0x80, 0x00, 0x00, 0x00, 0x90, 0x0c, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x07, // .M..............
	0x00, 0x09, 0x01, 0x0d, 0x41, 0x06, 0x02, 0x0c, 0x80, 0x94, 0x86, 0xec, 0x08, 0x00, 0x09, 0x0f, // ....A...........
	0x0d, 0x1c, 0x01, 0x87, 0x64, 0x03, 0x00, 0x09, 0x0e, 0x0d, 0x2a, 0x03, 0x38, 0x09, 0x08, 0x0d, // ....d.....*.8...
	0x40, 0x0c, 0x3c, 0x20, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x0d, 0x10, 0x00, 0x00, 0x80, // @.< ...:.>......
	0x00, 0x3c, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, // .<DoFog return v
	0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // alue>...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0xf8, // .....P..........
	0x07, 0x00, 0x00, 0x01, 0x00, 0x14, 0x00, 0x28, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x40, // .......(...*.>.@
	0x00, 0x00, 0x00, 0x01, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....w..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0x64, 0x07, 0x00, 0x00, 0x01, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ...d............
	0x00, 0x4e, 0x11, 0x02, 0x00, 0x06, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, // .N..............
	0x00, 0x00, 0x00, 0x10, 0x01, 0x58, 0xc7, 0x22, 0x7f, 0xcf, 0x4a, 0x5f, 0xa4, 0xab, 0x5b, 0xc7, // .....X."..J_..[.
	0xc9, 0x37, 0xc7, 0xf5, 0xde, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0xc8, 0x07, 0x00, 0x00, 0x00, // .7..............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x74, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, // .......t........
	0x00, 0x00, 0x00, 0xbc, 0x07, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0x78, // .......x...N...x
	0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0x98, // ...N.......N....
	0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0xb8, // ...N.......N....
	0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0xd4, // ...N.......N....
	0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0xf4, // ...N.......N....
	0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0x10, // ...N.......N....
	0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x80, 0x3c, // ...N...<...N...<
	0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x58, // ...N...X...O...X
	0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x78, // ...O...x...O...x
	0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x98, // ...O.......O....
	0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0xb4, // ...O.......O....
	0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xd4, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0xd4, // ...O.......O....
	0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0xf0, // ...O.......O....
	0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x10, // ...O.......O....
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x2c, // ...O...,...O...,
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x4c, // ...O...L...O...L
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x6c, // ...O...l...O...l
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0x88, // ...O.......O....
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xa8, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0xa8, // ...O.......O....
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0xc4, // ...O.......O....
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x80, 0xe4, // ...O.......O....
	0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x00, // ...O.......P....
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x18, // ...P.......P....
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x30, // ...P...0...P...0
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x48, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x48, // ...P...H...P...H
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x60, // ...P...`...P...`
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x78, // ...P...x...P...x
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x90, // ...P.......P....
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0xa8, // ...P.......P....
	0x03, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xc0, // ...P.......Q....
	0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xdc, // ...Q.......Q....
	0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xf0, // ...Q.......Q....
	0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x0c, // ...Q.......Q....
	0x04, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x28, 0x04, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x28, // ...Q...(...R...(
	0x04, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 0x53, 0x01, 0x00, 0x80, 0x3c, // ...R...<...S...<
	0x04, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x80, 0x50, // ...S...P...T...P
	0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x80, 0x74, // ...T...t...T...t
	0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x90, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x90, // ...T.......U....
	0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x94, // ...U.......U....
	0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xa8, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xa8, // ...U.......U....
	0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xc8, // ...U.......U....
	0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xdc, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xdc, // ...U.......U....
	0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xf0, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xf0, // ...U.......U....
	0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x04, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x08, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x24, // ...U...$...U...$
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x30, // ...U...0...U...0
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x58, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x58, // ...U...X...U...X
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x64, // ...U...d...U...d
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x68, // ...U...h...U...h
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x6c, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x6c, // ...U...l...U...l
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x94, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xa0, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xc4, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xe0, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xe0, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xfc, // ...U.......U....
	0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x24, // ...U...$...U...$
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x40, // ...U...@...U...@
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x44, // ...U...D...U...D
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x60, // ...U...`...U...`
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x64, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x64, // ...U...d...U...d
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x78, // ...U...x...U...x
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x8c, // ...U.......U....
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xa0, // ...U.......U....
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xc0, 0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xc0, // ...U.......U....
	0x06, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0xdc, 0x06, 0x00, 0x00, 0x56, 0x01, 0x00, 0x80, 0xdc, // ...U.......V....
	0x06, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00, 0x04, 0x07, 0x00, 0x00, 0x56, 0x01, 0x00, 0x80, 0x04, // ...V.......V....
	0x07, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x57, 0x01, 0x00, 0x80, 0x2c, // ...V...,...W...,
	0x07, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00, 0x4c, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x4c, // ...W...L...X...L
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x50, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x50, // ...X...P...X...P
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x64, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x64, // ...X...d...X...d
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x80, // ...X.......X....
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x9c, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x9c, // ...X.......X....
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0xbc, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xbc, // ...X.......X....
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0xdc, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xdc, // ...X.......X....
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xf8, // ...X.......X....
	0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x0c, 0x08, 0x00, 0x00, 0x59, 0x01, 0x00, 0x80, 0x0c, // ...X.......Y....
	0x08, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x80, 0x20, // ...Y... ...Z... 
	0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0x34, 0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x80, 0x34, // ...Z...4...Z...4
	0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0x48, 0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x80, 0x48, // ...Z...H...Z...H
	0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0x5c, 0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x80, 0x5c, // ...Z.......Z....
	0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0x70, 0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x80, 0x70, // ...Z...p...Z...p
	0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, // ...Z.....1...0..
	0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, // .1...0...1...0..
	0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, // .1...0...1...0..
	0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, // .1...0...1...0..
	0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, // .....,.......,..
	0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, // .....,.......,..
	0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, // .....,.......,..
	0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, // .....,.......-..
	0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, // .....-.......-..
	0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, // .....-.......-..
	0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, // .....-.......-..
	0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, // .(...'...(...'..
	0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, // .(...'...(...'..
	0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, // .(...'...(...'..
	0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, // .(...'...(...'..
	0x00, 0x29, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x01, 0x00, 0x29, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x01, // .)...$...)...$..
	0x00, 0x29, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x01, 0x00, 0x29, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x01, // .)...$...)...$..
	0x00, 0x27, 0x00, 0x01, 0x00, 0x26, 0x00, 0x01, 0x00, 0x1e, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x01, // .'...&..........
	0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, // .9...8...9...8..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, // .C...2...C...2..
	0x00, 0x43, 0x00, 0x1b, 0x00, 0x42, 0x00, 0x01, 0x00, 0x43, 0x00, 0x01, 0x00, 0x42, 0x00, 0x01, // .C...B...C...B..
	0x00, 0x3a, 0x00, 0x16, 0x00, 0x39, 0x00, 0x01, 0x00, 0x3a, 0x00, 0x16, 0x00, 0x39, 0x00, 0x01, // .:...9...:...9..
	0x00, 0x21, 0x00, 0x01, 0x00, 0x20, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, // .!... ...,...+..
	0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, // .,...+...,...+..
	0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, // .,...+...,...+..
	0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, // .,...+...,...+..
	0x00, 0x2c, 0x00, 0x01, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x21, 0x00, 0x01, 0x00, 0x20, 0x00, 0x03, // .,...+...!... ..
	0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, // ................
	0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, // ................
	0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x01, 0x00, 0x00, 0x01, // ...........;....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, // .......I...4....
	0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x6c, // .......0...L...l
	0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xec, // ................
	0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x7c, // .......8.......|
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ................
	0xca, 0x31, 0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x14, 0x10, 0x00, 0x00, 0xb0, // .1.8............
	0x01, 0x00, 0x00, 0x0a, 0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x58, // ...P...P.......X
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x04, // ...........@....
	0x00, 0x00, 0x00, 0x10, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x00, 0xf3, 0xf2, 0xf1, 0x16, // .....float4.....
	0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x66, 0x6c, 0x6f, // ...@.........flo
	0x61, 0x74, 0x33, 0x00, 0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x02, // at3........@....
	0x00, 0x00, 0x00, 0x08, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x00, 0xf3, 0xf2, 0xf1, 0x16, // .....float2.....
	0x00, 0x01, 0x12, 0x04, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, // ................
	0x10, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x46, 0x00, 0x03, 0x12, 0x0d, 0x15, 0x03, 0x00, 0x00, // .......F........
	0x10, 0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // .....gl_Position
	0x00, 0xf2, 0xf1, 0x0d, 0x15, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x76, 0x5f, 0x63, // .............v_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0xf1, 0x0d, 0x15, 0x03, 0x00, 0x01, 0x10, 0x00, 0x00, 0x20, // olor0.......... 
	0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0xf2, 0xf1, 0x1e, // .v_texcoord0....
	0x00, 0x05, 0x15, 0x03, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x00, 0xf3, 0xf2, 0xf1, 0x0a, // ...,.Output.....
	0x00, 0x18, 0x15, 0x05, 0x10, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, 0x00, 0x08, 0x10, 0x06, // ................
	0x10, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x03, 0x10, 0x00, 0x00, 0x1e, 0x00, 0x1c, 0x15, 0x40, // ...............@
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, // ................
	0x24, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x00, 0x0e, 0x00, 0x01, 0x12, 0x02, // $.float3x3......
	0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x0a, 0x00, 0x18, 0x15, 0x01, // ................
	0x10, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, 0x00, 0x08, 0x10, 0x0a, 0x10, 0x00, 0x00, 0x17, // ................
	0x00, 0x02, 0x00, 0x09, 0x10, 0x00, 0x00, 0x0a, 0x00, 0x01, 0x12, 0x01, 0x00, 0x00, 0x00, 0x40, // ...............@
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x18, 0x15, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, // .......@........
	0x00, 0x08, 0x10, 0x0d, 0x10, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00, 0x0c, 0x10, 0x00, 0x00, 0x1e, // ................
	0x00, 0x1c, 0x15, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, // ...@............
	0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x00, 0x0a, // ....@.float4x4..
	0x00, 0x18, 0x15, 0x0f, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x0a, 0x00, 0x18, 0x15, 0x00, // ................
	0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x12, 0x00, 0x16, 0x15, 0x00, 0x10, 0x00, 0x00, 0x22, // ..............."
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xf1, 0x0a, 0x00, 0x18, 0x15, 0x12, // ................
	0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ................
	0x77, 0x01, 0x00, 0xad, 0x3f, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // w...?...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, // ...............o
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, // atBitsToUint(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int4 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float4 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _x); }.int float
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // BitsToInt(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, // _x) { return asi
	0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, // nt(_x); }.int2 f
	0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, // loatBitsToInt(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat2 _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, // n asint(_x); }.i
	0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, // nt3 floatBitsToI
	0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // nt(float3 _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, // return asint(_x)
	0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, // ; }.int4 floatBi
	0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // tsToInt(float4 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, // x) { return asin
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x69, // t(_x); }.uint bi
	0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, // tfieldReverse(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, // reversebits(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, //  }.uint2 bitfiel
	0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, // dReverse(uint2 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, // x) { return reve
	0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // rsebits(_x); }.u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, // int3 bitfieldRev
	0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // erse(uint3 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, //  return reverseb
	0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, // its(_x); }.uint4
	0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, //  bitfieldReverse
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (uint4 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, // urn reversebits(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, // _x); }.uint pack
	0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // Half2x16(float2 
	0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x66, 0x33, // _x).{.return (f3
	0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x79, 0x29, 0x3c, 0x3c, 0x31, 0x36, // 2tof16(_x.y)<<16
	0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, // ) | f32tof16(_x.
	0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x6e, 0x70, // x);.}.float2 unp
	0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x75, 0x69, 0x6e, 0x74, // ackHalf2x16(uint
	0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x).{.return fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, // oat2(f16tof32(_x
	0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x29, 0x2c, 0x20, 0x66, 0x31, 0x36, 0x74, //  & 0xffff), f16t
	0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x29, // of32(_x >> 16) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, // ;.}.struct BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ampler2D.{.Sampl
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // erState m_sample
	0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, // r;.Texture2D m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // t BgfxISampler2D
	0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x69, 0x6e, 0x74, // .{.Texture2D<int
	0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // 4> m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, // .struct BgfxUSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // pler2D.{.Texture
	0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2D<uint4> m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // gfxSampler2DArra
	0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, // y.{.SamplerState
	0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, //  m_sampler;.Text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ure2DArray m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, // BgfxSampler2DSha
	0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, // dow.{.SamplerCom
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // parisonState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // ampler;.Texture2
	0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // D m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, // er2DArrayShadow.
	0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, // {.SamplerCompari
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // sonState m_sampl
	0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // er;.Texture2DArr
	0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // ay m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // .struct BgfxSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, // ler3D.{.SamplerS
	0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, // tate m_sampler;.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // Texture3D m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, // gfxISampler3D.{.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, // Texture3D<int4> 
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, // m_texture;.};.st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ruct BgfxUSample
	0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, // r3D.{.Texture3D<
	0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // uint4> m_texture
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, // ;.};.struct Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x0a, 0x7b, 0x0a, 0x53, 0x61, // SamplerCube.{.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // mplerState m_sam
	0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, // pler;.TextureCub
	0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // e m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, // erCubeShadow.{.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, // amplerComparison
	0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, // State m_sampler;
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, // .TextureCube m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, // t BgfxSampler2DM
	0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4d, 0x53, 0x3c, // S.{.Texture2DMS<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // float4> m_textur
	0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // e;.};.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // xTexture2D(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ampler2D _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float2 _coord
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // mple(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // sampler, _coord)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, // exture2DBias(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, // rd, float _bias)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // pleBias(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // rd, _bias);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 2DLod(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat2 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at _level).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // level);.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, //  bgfxTexture2DLo
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // dOffset(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float2 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, // loat _level, int
	0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 2 _offset).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, // level, _offset);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, // xture2DProj(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float3 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, // d).{.float2 coor
	0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, // d = _coord.xy * 
	0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // rcp(_coord.z);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // _texture.Sample(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // er, coord);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // 2DProj(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // er2D _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat4 _coord).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, // float2 coord = _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, // coord.xy * rcp(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // coord.w);.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ure.Sample(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, // ler.m_sampler, c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, // bgfxTexture2DGra
	0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // d(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // _sampler, float2
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, //  _coord, float2 
	0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, // _dPdx, float2 _d
	0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // Pdy).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, // .SampleGrad(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x5f, // _coord, _dPdx, _
	0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // dPdy);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // bgfxTexture2DArr
	0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // ay(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // e(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, // pler, _coord);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, // ure2DArrayLod(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // _lod).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x3b, // , _coord, _lod);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x4f, // xture2DArrayLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ffset(BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // r2DArray _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float3 _coord
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, // , float _level, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // int2 _offset).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // Level(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, // , _level, _offse
	0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, // t);.}.float bgfx
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // Shadow2D(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, // pler2DShadow _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, // e.SampleCmpLevel
	0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // Zero(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // sampler, _coord.
	0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, // xy, _coord.z);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, // .float bgfxShado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // w2DProj(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, // ler2DShadow _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, // pler, float4 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, // ord).{.float3 co
	0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, // ord = _coord.xyz
	0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, //  * rcp(_coord.w)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, // leCmpLevelZero(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6f, // r, coord.xy, coo
	0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // rd.z);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // bgfxShadow2DArra
	0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // y(BgfxSampler2DA
	0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // rrayShadow _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float4 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // rd).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, // SampleCmpLevelZe
	0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // ro(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, // mpler, _coord.xy
	0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z, _coord.w);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re3D(BgfxSampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 3D _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at3 _coord).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, // texture.Sample(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // r, _coord);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 3DLod(BgfxSample
	0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r3D _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at _level).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, // level);.}.int4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, // gfxTexture3D(Bgf
	0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // xISampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, // ord).{.uint3 siz
	0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // e;._sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, // xture.GetDimensi
	0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, // ons(size.x, size
	0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // .y, size.z);.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, // exture.Load(int4
	0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, // (_coord * size, 
	0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, // 0) );.}.uint4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, // fxTexture3D(Bgfx
	0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // USampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, // rd).{.uint3 size
	0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ;._sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, // ture.GetDimensio
	0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, // ns(size.x, size.
	0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // y, size.z);.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, // xture.Load(int4(
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, // _coord * size, 0
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // ) );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, // fxTextureCube(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, // fxSamplerCube _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // coord).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // re.Sample(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x42, // bgfxTextureCubeB
	0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, // ias(BgfxSamplerC
	0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // ube _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at _bias).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, // xture.SampleBias
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, // ler, _coord, _bi
	0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // as);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, // fxTextureCubeLod
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, // (BgfxSamplerCube
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _level).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, // ure.SampleLevel(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, // er, _coord, _lev
	0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, // el);.}.float bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, // xShadowCube(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, // SamplerCubeShado
	0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // w _sampler, floa
	0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t4 _coord).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, // exture.SampleCmp
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // LevelZero(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // oord.xyz, _coord
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .w);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, // fxTexelFetch(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ler, int2 _coord
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // , int _lod).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, // texture.Load(int
	0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, // 3(_coord, _lod) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, // TexelFetchOffset
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, // sampler, int2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, // oord, int _lod, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // int2 _offset).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, // m_texture.Load(i
	0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // nt3(_coord, _lod
	0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ), _offset );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float2 bgfxTextu
	0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // reSize(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, // er2D _sampler, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // nt _lod).{.float
	0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // 2 result;._sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, // er.m_texture.Get
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, // Dimensions(resul
	0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // t.x, result.y);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, // return result;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ureGather(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // , float2 _coord)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, // er.m_texture.Gat
	0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // herRed(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // d );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, // fxTextureGatherO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ffset(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // oat2 _coord, int
	0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 2 _offset).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, // exture.GatherRed
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6f, 0x66, // ler, _coord, _of
	0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // fset );.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, //  bgfxTextureGath
	0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // er(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, // .m_texture.Gathe
	0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // rRed(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, // sampler, _coord 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // );.}.int4 bgfxTe
	0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, // xelFetch(BgfxISa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, // , int2 _coord, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // nt _lod).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, // ture.Load(int3(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, // coord, _lod) );.
	0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, // }.uint4 bgfxTexe
	0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, // lFetch(BgfxUSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _lod).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, // re.Load(int3(_co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ord, _lod) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, // float4 bgfxTexel
	0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Fetch(BgfxSample
	0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // r2DMS _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _sampleIdx).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x5f, 0x63, // _texture.Load(_c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, // oord, _sampleIdx
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // TexelFetch(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, // ampler2DArray _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // ampler, int3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ord, int _lod).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, // int4(_coord, _lo
	0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // d) );.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, // gfxTexelFetch(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // pler, int3 _coor
	0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // d, int _lod).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, // _texture.Load(in
	0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // t4(_coord, _lod)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x67, 0x66, //  );.}.float3 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, // xTextureSize(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ler, int _lod).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, // .float3 result;.
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, // re.GetDimensions
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // (result.x, resul
	0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // t.y, result.z);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, // return result;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // .float3 instMul(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // float3 _vec, flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at3x3 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, // turn mul(_mtx, _
	0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, // vec); }.float3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, // nstMul(float3x3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, // _mtx, float3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, // c) { return mul(
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // _vec, _mtx); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, // loat4 instMul(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat4 _vec, float
	0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // 4x4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, // rn mul(_mtx, _ve
	0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, // c); }.float4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, // tMul(float4x4 _m
	0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // tx, float4 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, //  { return mul(_v
	0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // ec, _mtx); }.boo
	0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, // l2 lessThan(floa
	0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, // t2 _a, float2 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, // ) { return _a < 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool3 less
	0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, // Than(float3 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float3 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // urn _a < _b; }.b
	0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, // ool4 lessThan(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _a, float4 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, // < _b; }.bool2 le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ssThanEqual(floa
	0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, // t2 _a, float2 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, // ) { return _a <=
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, //  _b; }.bool3 les
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sThanEqual(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, // 3 _a, float3 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, //  { return _a <= 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool4 less
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ThanEqual(float4
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float4 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, // { return _a <= _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, // b; }.bool2 great
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // erThan(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a > _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // .bool3 greaterTh
	0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // an(float3 _a, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // n _a > _b; }.boo
	0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, // l4 greaterThan(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _a, float4
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, //  > _b; }.bool2 g
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, // reaterThanEqual(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // a >= _b; }.bool3
	0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, //  greaterThanEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float3 _a, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a >= _b; }.boo
	0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, // l4 greaterThanEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat4 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a >= _b; }.b
	0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, // ool2 notEqual(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 _a, float2 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6e, // != _b; }.bool3 n
	0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // otEqual(float3 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float3 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, // return _a != _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, //  }.bool4 notEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float4 _a, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a != _b; }.boo
	0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // l2 equal(float2 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float2 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, //  return _a == _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, // ; }.bool3 equal(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _a, float
	0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 3 _b) { return _
	0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, // a == _b; }.bool4
	0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, //  equal(float4 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float4 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, // eturn _a == _b; 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, // }.float mix(floa
	0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x2c, 0x20, // t _a, float _b, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _t) { retu
	0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, // rn lerp(_a, _b, 
	0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x69, // _t); }.float2 mi
	0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // x(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // at2 _b, float2 _
	0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, // t) { return lerp
	0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_a, _b, _t); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 mix(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x2c, // 3 _a, float3 _b,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _t) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, // turn lerp(_a, _b
	0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // , _t); }.float4 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // mix(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _b, float4
	0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, //  _t) { return le
	0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, // rp(_a, _b, _t); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, // }.float mod(floa
	0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x29, 0x20, // t _a, float _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, // { return _a - _b
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, //  * floor(_a / _b
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x6f, 0x64, 0x28, // ); }.float2 mod(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, // a - _b * floor(_
	0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // a / _b); }.float
	0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, // 3 mod(float3 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, // turn _a - _b * f
	0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, // loor(_a / _b); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, // .float4 mod(floa
	0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // t4 _a, float4 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, // ) { return _a - 
	0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, // _b * floor(_a / 
	0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x65, // _b); }.float2 ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c2_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // x) { return floa
	0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // t2(_x, _x); }.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // oat3 vec3_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // rn float3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // , _x); }.float4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x) { return fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // oat4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x75, 0x76, //  _x); }.uint2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, // x) { return uint
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // 2(_x, _x); }.uin
	0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // t3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uint3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uint4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x28, //  { return uint4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, //  }.float4x4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // romRows(float4 _
	0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, // 0, float4 _1, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _2, float4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, // _3).{.return flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at4x4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // , _3);.}.float4x
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, // 4 mtxFromCols(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _0, float4 
	0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, // _1, float4 _2, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // loat4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, // rn transpose(flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at4x4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // , _3) );.}.float
	0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // 3x3 mtxFromRows(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _0, float
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, // 3 _1, float3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // .{.return float3
	0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // x3(_0, _1, _2);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // }.float3x3 mtxFr
	0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, // omCols(float3 _0
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // , float3 _1, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _2).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  transpose(float
	0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // 3x3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // );.}.static floa
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x73, // t4 u_viewRect;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // tatic float4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // m float4x4 u_vie
	0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // w;.static float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // x4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // iform float4x4 u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // _proj;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // oat4x4 u_invProj
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // ;.static float4x
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, // 4 u_viewProj;.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // atic float4x4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, // invViewProj;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, // tic float4x4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // odel[32];.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // lView;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // oat4x4 u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ewProj;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, // loat4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 4;.static float2
	0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x3b, 0x0a, 0x73, 0x74, 0x61, //  u_alphaRef;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, // tic float4 u_fog
	0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, // Start;.uniform f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x3b, 0x0a, // loat4 u_fogEnd;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // uniform float4 u
	0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _fogRange;.unifo
	0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, // rm float4 u_fogD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // isable;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // loat4 u_fogColor
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // x4 u_world;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, // orm float4 u_amb
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, // Light;.uniform f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // loat4 u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ams[8];.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, // loat4 u_lightPos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ition[8];.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // m float4 u_light
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // Direction[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // iform float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // ightColor[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // iform float4 u_m
	0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // atColor;.uniform
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, //  float4 u_surfPr
	0x6f, 0x70, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x44, 0x6f, 0x44, 0x79, // ops;.float3 DoDy
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // namicLight(float
	0x33, 0x20, 0x56, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x29, 0x0a, 0x7b, // 3 V, float3 N).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // .float3 color = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // float3(0.0, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0);.for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, //  = 0; i < 8; i++
	0x29, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // ){.if(u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ams[i].x == 0.0)
	0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, // .break;.if(u_lig
	0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // htParams[i].x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, //  1.0){.float l =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, //  max(0.0, dot(N,
	0x20, 0x2d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, //  -u_lightDirecti
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, // on[i].xyz));.col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6c, 0x2a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, // or += l*u_lightC
	0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x69, 0x5d, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x65, 0x6c, // olor[i].rgb;.}el
	0x73, 0x65, 0x0a, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // se.;.}.return co
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x44, 0x6f, 0x46, // lor;.}.float DoF
	0x6f, 0x67, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // og(float w).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x77, 0x20, 0x2d, 0x20, // turn clamp((w - 
	0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x2e, 0x78, 0x29, 0x2a, 0x75, 0x5f, 0x66, 0x6f, // u_fogEnd.x)*u_fo
	0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, // gRange.x, u_fogD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // isable.x, 1.0);.
	0x7d, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20, 0x66, // }.Output main( f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, // loat4 a_color0 :
	0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  COLOR0 , float4
	0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3a, 0x20, 0x4e, 0x4f, 0x52, 0x4d, //  a_normal : NORM
	0x41, 0x4c, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, // AL , float3 a_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, // sition : POSITIO
	0x4e, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // N , float2 a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, // coord0 : TEXCOOR
	0x44, 0x30, 0x29, 0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, 0x61, // D0) { Output _va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // rying_; _varying
	0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // _.v_color0 = flo
	0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // at4(1.0, 0.0, 0.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // 0, 1.0);; _varyi
	0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // ng_.v_texcoord0 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // = float3(0.0, 0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 0, 0.0);;.{.floa
	0x74, 0x34, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, // t4 V = mul(u_wor
	0x6c, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, // ld, float4(a_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, // ition, 1.0));.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, // oat4 position = 
	0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x6d, 0x75, 0x6c, 0x28, // mul(u_proj, mul(
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2c, 0x20, 0x56, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // u_view, V));.flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, // at3x3 otherWorld
	0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x29, 0x75, 0x5f, 0x77, //  = (float3x3)u_w
	0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x20, 0x3d, // orld;.float3 N =
	0x20, 0x6d, 0x75, 0x6c, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2c, //  mul(otherWorld,
	0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, //  a_normal).xyz;.
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // _varying_.v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, // oord0.xy = a_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // coord0;._varying
	0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, // _.v_color0 = a_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, // olor0;._varying_
	0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, // .v_color0.rgb +=
	0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x72, 0x67, 0x62, 0x2a, //  u_ambLight.rgb*
	0x28, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x78, 0x29, 0x3b, // (u_surfProps.x);
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, // ._varying_.v_col
	0x6f, 0x72, 0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x44, 0x79, 0x6e, // or0.rgb += DoDyn
	0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x56, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // amicLight(V.xyz,
	0x20, 0x4e, 0x29, 0x2a, 0x28, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, //  N)*(u_surfProps
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, // .z);._varying_.v
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, // _color0 = clamp(
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // _varying_.v_colo
	0x72, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // r0, 0.0f, 1.0);.
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // _varying_.v_colo
	0x72, 0x30, 0x20, 0x2a, 0x3d, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // r0 *= u_matColor
	0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, // ;._varying_.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x46, 0x6f, // xcoord0.z = DoFo
	0x67, 0x28, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x5f, // g(position.w);._
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, // varying_.gl_Posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // tion = position;
	0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // .} return _varyi
	0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ng_;.}..........
	0x4a, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, // J...........K...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ................
	0xca, 0x31, 0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x30, // .1.8...........0
	0x00, 0x00, 0x00, 0x0b, 0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0b, // ................
	0x10, 0x00, 0x00, 0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, // ...DoDynamicLigh
	0x74, 0x00, 0xf1, 0x12, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x00, 0x44, // t..............D
	0x6f, 0x46, 0x6f, 0x67, 0x00, 0xf2, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // oFog............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, // ...............D
	0x33, 0x44, 0x53, 0x48, 0x44, 0x52, 0x00, 0x74, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3DSHDR.t........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, // ... ..`.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0b, // ................
	0x10, 0x00, 0x00, 0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, // ...DoDynamicLigh
	0x74, 0x00, 0xf1, 0x12, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x00, 0x44, // t..............D
	0x6f, 0x46, 0x6f, 0x67, 0x00, 0xf2, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // oFog............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, // ................
	0xff, 0xff, 0xff, 0x1a, 0x09, 0x2f, 0xf1, 0x68, 0x00, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x01, // ...../.h...8....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4d, // ...............M
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcd, // .......]........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, // .......1........
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8d, // .......}........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x39, // .......m.......9
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, // ........... ....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..@.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x10, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........@.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x3c, // .......$...0...<
	0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x6c, // ...H...T...`...l
	0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, // ...x............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, // ................
	0x00, 0x25, 0x11, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x6d, 0x61, 0x69, // .%...........mai
	0x6e, 0x00, 0x00, 0x1a, 0x00, 0x51, 0x11, 0x10, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, // n....Q..........
	0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x00, 0x00, 0x1a, // .......u_view...
	0x00, 0x51, 0x11, 0x10, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0xff, 0xff, 0xff, // .Q.........@....
	0xff, 0xff, 0xff, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, // ...u_proj....Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, // _fogEnd......Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x90, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x11, // _fogRange..".Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x00, 0x00, 0x00, 0x1a, // _fogDisable.....
	0x00, 0x51, 0x11, 0x10, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb0, 0x00, 0xff, 0xff, 0xff, // .Q..............
	0xff, 0xff, 0xff, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, // ...u_world...Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x13, // _ambLight..".Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x00, 0x00, 0x00, 0x26, // _lightParams...&
	0x00, 0x51, 0x11, 0x13, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, // .Q..............
	0xff, 0xff, 0xff, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, // ...u_lightDirect
	0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x13, 0x10, 0x00, 0x00, 0x08, // ion....".Q......
	0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ...........u_lig
	0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, // htColor......Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, // _matColor....Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x90, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _surfProps......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x1a, // ................
	0x09, 0x2f, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ./..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, // ................
	0xff, 0xff, 0xff, 0x77, 0x09, 0x31, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x14, 0x8e, 0x0e, // ...w.1..........
	0x00, 0x14, 0x6b, 0x0f, 0x00, 0x01, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x2c, // ..k....L... ...,
	0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ...X............
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x00, 0x00, 0x20, // ...........t... 
	0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // ..`.............
	0x00, 0x09, 0x00, 0x98, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x6e, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x2d, 0xba, 0x2e, 0xf1, 0x01, // ain.none...-....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, // .......t... ..`.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x07, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x74, // ...............t
	0x08, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, // ................
	0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, // ...F:.dev.code.r
	0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, // e3-upstream.libr
	0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, // w.src.bgfx.shade
	0x72, 0x73, 0x5c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, // rs.default_vs_bg
	0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x00, 0x00, 0x00, 0xfe, // fx.inc.hlsl.....
	0xef, 0xfe, 0xef, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0x0c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, // ................
	0x2e, 0x31, 0x01, 0x51, 0xd9, 0xbe, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x50, 0xa8, 0x3a, 0x60, 0x8e, // .1.Q..^....P.:`.
	0x77, 0xdb, 0x41, 0xa7, 0xf4, 0x75, 0x1e, 0x1c, 0x23, 0xbc, 0x74, 0x76, 0x00, 0x00, 0x00, 0x2f, // w.A..u..#.tv.../
	0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x00, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x00, // LinkInfo./names.
	0x2f, 0x73, 0x72, 0x63, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, // /src/headerblock
	0x00, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x66, 0x3a, 0x5c, 0x64, // ./src/files/f:.d
	0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, // ev.code.re3-upst
	0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, // ream.librw.src.b
	0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x64, 0x65, 0x66, 0x61, // gfx.shaders.defa
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, // ult_vs_bgfx.inc.
	0x68, 0x6c, 0x73, 0x6c, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // hlsl............
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x22, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // ."..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, // ..............Q3
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0xe8, 0x01, 0x00, 0x00, 0x5f, // ... ..........._
	0x01, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x30, 0x00, 0x00, 0x80, // ...h.......-0...
	0x00, 0x00, 0x00, 0x68, 0x2f, 0x00, 0x00, 0xe4, 0x14, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x10, // ...h/......X....
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xb0, 0x02, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x9c, // ...(.......,....
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x4c, // .......M...-...L
	0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2f, // ...F... ......./
	0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x33, // ...0...1...2...3
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, // ...4...5...6...7
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3b, // ...8...9...:...;
	0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3f, // ...<...=...>...?
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, // ...@...A...B...C
	0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x08, // ...D...E...!....
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, // ................
	0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, // ................
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x18, // ................
	0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1c, // ................
	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x22, // ..............."
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, // ...#...$...%...&
	0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, // ...'...(...)...*
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2e, // ...+...,........
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4b, // ...G...H...I...K
	0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...J............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4e, // ...............N
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x04, 0x05, 0x00, 0x02, 0x00, 0x01, 0x00, 0x10, 0x00, 0xa0, 0x02,                               // ...........
};
