static const uint8_t matfx_env_vs_bgfx[45543] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x45, 0x98, 0x49, 0x0d, 0x00, 0x06, 0x75, // VSH.....OE.I...u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, // _view.........u_
	0x70, 0x72, 0x6f, 0x6a, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, 0x66, // proj..@......u_f
	0x6f, 0x67, 0x45, 0x6e, 0x64, 0x02, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, // ogEnd.........u_
	0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x02, 0x00, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, // fogRange........
	0x0c, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x02, 0x00, 0xa0, // .u_fogDisable...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x00, 0xb0, // ......u_world...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, // ......u_ambLight
	0x02, 0x00, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // .........u_light
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x02, 0x08, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x10, 0x75, // Params.........u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x02, // _lightDirection.
	0x08, 0x80, 0x01, 0x08, 0x00, 0x00, 0x00, 0x0c, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, // ........u_lightC
	0x6f, 0x6c, 0x6f, 0x72, 0x02, 0x08, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6d, // olor.........u_m
	0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x02, 0x00, 0x80, 0x02, 0x01, 0x00, 0x00, 0x00, 0x0b, // atColor.........
	0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x02, 0x00, 0x90, 0x02, 0x01, // u_surfProps.....
	0x00, 0x00, 0x00, 0x0b, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x04, // ....u_texMatrix.
	0x00, 0xa0, 0x02, 0x04, 0x00, 0x00, 0x00, 0xd0, 0xb0, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xeb, // ...........DXBC.
	0x3e, 0x9b, 0xa6, 0xd0, 0x13, 0x20, 0x06, 0x57, 0x85, 0x21, 0xfd, 0x09, 0xeb, 0x92, 0xad, 0x01, // >.... .W.!......
	0x00, 0x00, 0x00, 0xd0, 0xb0, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xc0, // ...........0....
	0x00, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0xc8, 0x0a, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x88, // ...L.......ISGN.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, // ...........h....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // ................
	0x0f, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ...n............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, // ...........u....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ................
	0x07, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ...~............
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, // ...........COLOR
	0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, // .NORMAL.POSITION
	0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x84, // .TEXCOORD..OSGN.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, // ...........h....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ...t............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x00, // ...........z....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, // ................
	0x08, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // ...z............
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, // ...........SV_PO
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, // SITION.COLOR.TEX
	0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x53, 0x48, 0x44, 0x52, 0x74, 0x09, 0x00, 0x00, 0x40, // COORD..SHDRt...@
	0x00, 0x01, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x59, 0x08, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...]...Y...F. ..
	0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x00, // ......._........
	0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5f, // ..._...r......._
	0x00, 0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, // ...r......._...2
	0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, // .......g.... ...
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x01, // .......e.... ...
	0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, // ...e...r ......e
	0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x08, // ...2 ......h....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ...8............
	0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // .......F. ......
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, // ...8...........V
	0x15, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // .......F. ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, // ...F. ..........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, // .......F. ......
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, // ..?...?.........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, // ...8............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......F. ......
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, // ...8...........V
	0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // .......F. ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, // ...F. ..........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, // ...F.......8....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, // . ..............
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, // .......8........
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, // .......8........
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...V.......F. ..
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, // ...F.......F....
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, // ...8............
	0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // .......F. ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, // .......F.......8
	0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, // ...F. ..........
	0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x09, 0x10, 0x00, 0x00, // ...........6....
	0x00, 0x00, 0x00, 0x36, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x12, // ...6.......6....
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // ......... ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, // ...6..."........
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x42, // . .........6...B
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, // ......... ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, // ...6............
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x22, // . .........6..."
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // ......... ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x92, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, // ...6...........V
	0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x22, // . .........6..."
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // .......*. ......
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, // ...6...B.......*
	0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, // . ..............
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x02, // .......6...B....
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x22, // ..............."
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, // ...........B....
	0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...6...2.......F
	0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xc2, 0x00, 0x10, 0x00, 0x02, // .......8........
	0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x84, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x03, // ...*...8...2....
	0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, // ...V.......F. ..
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc2, 0x00, 0x10, 0x00, 0x02, // ...+............
	0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xa6, // ...8...2........
	0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, // .......F. .....,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, // ................
	0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, // ...............8
	0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, // ...2.......F. ..
	0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, // ...-....@.....?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc2, // ..?.............
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, // ................
	0x04, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x03, // .......6........
	0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x09, 0x72, // ...F.......8...r
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, // .......F. ......
	0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, // ..... .....)....
	0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, // ...r.......F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x01, 0x36, // ...F.......:...6
	0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...r.......F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, // ...6...r........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // @...............
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ...6............
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xe2, 0x00, 0x10, 0x00, 0x06, // @......6........
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, // ...........6....
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, // .......:.......0
	0x00, 0x00, 0x01, 0x22, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, // ..."............
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, // ........@.......
	0x00, 0x00, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x0a, 0x82, // ...:............
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ........@.......
	0x80, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, // . ..............
	0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, // .......:........
	0x00, 0x00, 0x01, 0x15, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x0a, 0x82, 0x00, 0x10, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x0a, 0x80, 0x20, 0x06, 0x00, // ....@.....?.. ..
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1f, // ................
	0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x09, 0x72, // ...:.......6...r
	0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x86, 0x41, 0x00, 0x00, 0x00, 0x00, // .......F. .A....
	0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x07, 0x82, // ...F.......4....
	0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, // .......:........
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, // @......8...r....
	0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x06, 0x00, // ...........F. ..
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, // ... ............
	0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x0e, 0x10, 0x00, 0x06, // ...........V....
	0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x1e, // ................
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x36, // ....@..........6
	0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x06, // ..."............
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2a, // ...6...B.......*
	0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x06, // .......6........
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, // ...:.......8...r
	0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa6, // ................
	0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x72, // . .....).......r
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, // .......F.......F
	0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, // .......4........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, // ...F........@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, // ...............3
	0x00, 0x00, 0x0a, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // ...........F....
	0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, // ....@.....?...?.
	0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, // ..?...?8........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, // ...F.......F. ..
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x12, // ...(...:...6....
	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, // ...............6
	0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x80, 0x41, // ............. .A
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, // ................
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, // ................
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x03, // .......8........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x03, // .......4........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x03, // .......3........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x80, 0x3f, 0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, // ..?6............
	0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x00, // .......6........
	0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, // ...F.......6....
	0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, //  ..............6
	0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, // .... ......F....
	0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, // ...6...2 ......F
	0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x02, // .......6...B ...
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, // ...........6...2
	0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3e, //  ..............>
	0x00, 0x00, 0x01, 0x53, 0x50, 0x44, 0x42, 0x00, 0xa6, 0x00, 0x00, 0x4d, 0x69, 0x63, 0x72, 0x6f, // ...SPDB....Micro
	0x73, 0x6f, 0x66, 0x74, 0x20, 0x43, 0x2f, 0x43, 0x2b, 0x2b, 0x20, 0x4d, 0x53, 0x46, 0x20, 0x37, // soft C/C++ MSF 7
	0x2e, 0x30, 0x30, 0x0d, 0x0a, 0x1a, 0x44, 0x53, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, // .00...DS........
	0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...S...p.......Q
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x00, 0x00, 0x00, 0x00, // ...........8....
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, // ...<............
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x2e, 0x31, 0x01, 0x51, // .............1.Q
	0xd9, 0xbe, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x4d, 0xb2, 0x43, 0x1e, 0xfc, 0x95, 0x8c, 0x42, 0x8e, // ..^....M.C....B.
	0x38, 0xcd, 0xef, 0xc4, 0x22, 0x84, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // 8..."...........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....Q3..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x6f, 0x46, 0x6c, 0x6f, // ...........ToFlo
	0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // at(int _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, // urn asfloat(_x);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, //  }.float2 intBit
	0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, // sToFloat(uint2 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, // x) { return asfl
	0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat(_x); }.float
	0x33, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, // 3 intBitsToFloat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (uint3 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, // urn asfloat(_x);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, //  }.float4 intBit
	0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, // sToFloat(uint4 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, // x) { return asfl
	0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat(_x); }.float
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, //  uintBitsToFloat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // rn asfloat(_x); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, // }.float2 uintBit
	0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, // sToFloat(uint2 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, // x) { return asfl
	0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat(_x); }.float
	0x33, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, // 3 uintBitsToFloa
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(uint3 _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, // turn asfloat(_x)
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, // ; }.float4 uintB
	0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, // itsToFloat(uint4
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, //  _x) { return as
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // float(_x); }.uin
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, // t floatBitsToUin
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, // turn asuint(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, //  }.uint2 floatBi
	0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0xc6, 0x5a, 0x00, 0x00, 0x4c, // tsToUint(fl.Z..L
	0xe8, 0x03, 0x00, 0x75, 0x83, 0x01, 0x00, 0xe9, 0x50, 0x00, 0x00, 0x43, 0x62, 0x03, 0x00, 0xe2, // ...u....P..Cb...
	0x7b, 0x02, 0x00, 0x6d, 0x18, 0x01, 0x00, 0x30, 0x5b, 0x03, 0x00, 0x2d, 0xf2, 0x03, 0x00, 0x16, // {..m...0[..-....
	0xe5, 0x03, 0x00, 0xe9, 0xf0, 0x02, 0x00, 0x8f, 0x45, 0x01, 0x00, 0x2a, 0xe5, 0x01, 0x00, 0x92, // ........E..*....
	0xe6, 0x03, 0x00, 0x52, 0x9b, 0x03, 0x00, 0x67, 0x9f, 0x01, 0x00, 0x7d, 0xda, 0x01, 0x00, 0x21, // ...R...g...}...!
	0xb7, 0x01, 0x00, 0xfd, 0xd7, 0x00, 0x00, 0x8c, 0x90, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x2f, 0x20, 0x73, 0x68, // ...........// sh
	0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x69, // aderc command li
	0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, // ne:.// F:.dev.co
	0x64, 0x65, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5c, 0x77, // de.bgfx..build.w
	0x69, 0x6e, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x39, 0x5c, 0x62, 0x69, 0x6e, 0x5c, // in64_vs2019.bin.
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x65, // shadercRelease.e
	0x78, 0x65, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, 0x66, 0x20, 0x6d, 0x61, // xe --debug -f ma
	0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x2d, 0x6f, 0x20, // tfx_env.vert -o 
	0x6d, 0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, // matfx_env_vs_bgf
	0x78, 0x2e, 0x69, 0x6e, 0x63, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, 0x2d, 0x2d, // x.inc --bin2c --
	0x74, 0x79, 0x70, 0x65, 0x20, 0x76, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, // type v --platfor
	0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x2d, 0x70, 0x72, 0x6f, 0x66, // m windows --prof
	0x69, 0x6c, 0x65, 0x20, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ile vs_4_0..stru
	0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ct Output.{.floa
	0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, // t4 gl_Position :
	0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, 0x66, 0x6c, //  SV_POSITION;.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, // oat4 v_color0 : 
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, // COLOR;.float3 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, // texcoord0 : TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, // OORD0;.float2 v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, // texcoord1 : TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x31, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // OORD1;.};.float 
	0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, // intBitsToFloat(i
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat2 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint2 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, // _x); }.float3 in
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t3 _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat4 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint4 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x69, 0x6e, // _x); }.float uin
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // t _x) { return a
	0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // sfloat(_x); }.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // oat2 uintBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint2 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x75, 0x69, // _x); }.float3 ui
	0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, // ntBitsToFloat(ui
	0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // nt3 _x) { return
	0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  asfloat(_x); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // float4 uintBitsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, // oFloat(uint4 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, // t(_x); }.uint fl
	0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, // oatBitsToUint(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int2 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float2 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, // _x); }.uint3 flo
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, // atBitsToUint(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int4 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float4 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _x); }.int float
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // BitsToInt(float 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, // _x) { return asi
	0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, // nt(_x); }.int2 f
	0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, // loatBitsToInt(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat2 _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, // n asint(_x); }.i
	0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, // nt3 floatBitsToI
	0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // nt(float3 _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, // return asint(_x)
	0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, // ; }.int4 floatBi
	0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // tsToInt(float4 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, // x) { return asin
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x69, // t(_x); }.uint bi
	0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, // tfieldReverse(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, // reversebits(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, //  }.uint2 bitfiel
	0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, // dReverse(uint2 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, // x) { return reve
	0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // rsebits(_x); }.u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, // int3 bitfieldRev
	0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // erse(uint3 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, //  return reverseb
	0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, // its(_x); }.uint4
	0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, //  bitfieldReverse
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (uint4 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, // urn reversebits(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, // _x); }.uint pack
	0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // Half2x16(float2 
	0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x66, 0x33, // _x).{.return (f3
	0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x79, 0x29, 0x3c, 0x3c, 0x31, 0x36, // 2tof16(_x.y)<<16
	0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, // ) | f32tof16(_x.
	0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x6e, 0x70, // x);.}.float2 unp
	0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x75, 0x69, 0x6e, 0x74, // ackHalf2x16(uint
	0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x).{.return fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, // oat2(f16tof32(_x
	0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x29, 0x2c, 0x20, 0x66, 0x31, 0x36, 0x74, //  & 0xffff), f16t
	0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x29, // of32(_x >> 16) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, // ;.}.struct BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ampler2D.{.Sampl
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // erState m_sample
	0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, // r;.Texture2D m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // t BgfxISampler2D
	0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x69, 0x6e, 0x74, // .{.Texture2D<int
	0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // 4> m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, // .struct BgfxUSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // pler2D.{.Texture
	0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2D<uint4> m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // gfxSampler2DArra
	0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, // y.{.SamplerState
	0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, //  m_sampler;.Text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ure2DArray m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, // BgfxSampler2DSha
	0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, // dow.{.SamplerCom
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // parisonState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // ampler;.Texture2
	0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // D m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, // er2DArrayShadow.
	0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, // {.SamplerCompari
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // sonState m_sampl
	0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // er;.Texture2DArr
	0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // ay m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // .struct BgfxSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, // ler3D.{.SamplerS
	0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, // tate m_sampler;.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // Texture3D m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, // gfxISampler3D.{.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, // Texture3D<int4> 
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, // m_texture;.};.st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ruct BgfxUSample
	0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, // r3D.{.Texture3D<
	0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // uint4> m_texture
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, // ;.};.struct Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x0a, 0x7b, 0x0a, 0x53, 0x61, // SamplerCube.{.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // mplerState m_sam
	0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, // pler;.TextureCub
	0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // e m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, // erCubeShadow.{.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, // amplerComparison
	0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, // State m_sampler;
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, // .TextureCube m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, // t BgfxSampler2DM
	0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4d, 0x53, 0x3c, // S.{.Texture2DMS<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // float4> m_textur
	0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // e;.};.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // xTexture2D(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ampler2D _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float2 _coord
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // mple(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // sampler, _coord)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, // exture2DBias(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, // rd, float _bias)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // pleBias(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // rd, _bias);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 2DLod(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat2 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at _level).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // level);.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, //  bgfxTexture2DLo
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // dOffset(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float2 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, // loat _level, int
	0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 2 _offset).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, // level, _offset);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, // xture2DProj(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float3 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, // d).{.float2 coor
	0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, // d = _coord.xy * 
	0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // rcp(_coord.z);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // _texture.Sample(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // er, coord);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // 2DProj(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // er2D _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat4 _coord).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, // float2 coord = _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, // coord.xy * rcp(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // coord.w);.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ure.Sample(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, // ler.m_sampler, c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, // bgfxTexture2DGra
	0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // d(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // _sampler, float2
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, //  _coord, float2 
	0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, // _dPdx, float2 _d
	0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // Pdy).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, // .SampleGrad(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x5f, // _coord, _dPdx, _
	0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // dPdy);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // bgfxTexture2DArr
	0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // ay(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // e(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, // pler, _coord);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, // ure2DArrayLod(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // _lod).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x3b, // , _coord, _lod);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x4f, // xture2DArrayLodO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ffset(BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // r2DArray _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float3 _coord
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, // , float _level, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // int2 _offset).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // Level(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, // , _level, _offse
	0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, // t);.}.float bgfx
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // Shadow2D(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, // pler2DShadow _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, // e.SampleCmpLevel
	0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // Zero(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // sampler, _coord.
	0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, // xy, _coord.z);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, // .float bgfxShado
	0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // w2DProj(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, // ler2DShadow _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, // pler, float4 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, // ord).{.float3 co
	0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, // ord = _coord.xyz
	0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, //  * rcp(_coord.w)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, // leCmpLevelZero(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6f, // r, coord.xy, coo
	0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // rd.z);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // bgfxShadow2DArra
	0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // y(BgfxSampler2DA
	0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // rrayShadow _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float4 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // rd).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, // SampleCmpLevelZe
	0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // ro(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, // mpler, _coord.xy
	0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z, _coord.w);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re3D(BgfxSampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 3D _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at3 _coord).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, // texture.Sample(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // r, _coord);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 3DLod(BgfxSample
	0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r3D _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at _level).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, // exture.SampleLev
	0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // el(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, // level);.}.int4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, // gfxTexture3D(Bgf
	0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // xISampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, // ord).{.uint3 siz
	0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // e;._sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, // xture.GetDimensi
	0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, // ons(size.x, size
	0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // .y, size.z);.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, // exture.Load(int4
	0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, // (_coord * size, 
	0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, // 0) );.}.uint4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, // fxTexture3D(Bgfx
	0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // USampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, // rd).{.uint3 size
	0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ;._sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, // ture.GetDimensio
	0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, // ns(size.x, size.
	0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // y, size.z);.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, // xture.Load(int4(
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, // _coord * size, 0
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // ) );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, // fxTextureCube(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, // fxSamplerCube _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // coord).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // re.Sample(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x42, // bgfxTextureCubeB
	0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, // ias(BgfxSamplerC
	0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // ube _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at _bias).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, // xture.SampleBias
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, // ler, _coord, _bi
	0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // as);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, // fxTextureCubeLod
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, // (BgfxSamplerCube
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _level).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, // ure.SampleLevel(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, // er, _coord, _lev
	0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, // el);.}.float bgf
	0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, // xShadowCube(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, // SamplerCubeShado
	0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // w _sampler, floa
	0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t4 _coord).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, // exture.SampleCmp
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // LevelZero(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // oord.xyz, _coord
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .w);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, // fxTexelFetch(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ler, int2 _coord
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // , int _lod).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, // texture.Load(int
	0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, // 3(_coord, _lod) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, // TexelFetchOffset
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, // sampler, int2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, // oord, int _lod, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, // int2 _offset).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, // m_texture.Load(i
	0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // nt3(_coord, _lod
	0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ), _offset );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float2 bgfxTextu
	0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // reSize(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, // er2D _sampler, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // nt _lod).{.float
	0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // 2 result;._sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, // er.m_texture.Get
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, // Dimensions(resul
	0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // t.x, result.y);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, // return result;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ureGather(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // , float2 _coord)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, // er.m_texture.Gat
	0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // herRed(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // d );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, // fxTextureGatherO
	0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ffset(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // oat2 _coord, int
	0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // 2 _offset).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, // exture.GatherRed
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6f, 0x66, // ler, _coord, _of
	0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // fset );.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, //  bgfxTextureGath
	0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // er(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, // .m_texture.Gathe
	0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // rRed(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, // sampler, _coord 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // );.}.int4 bgfxTe
	0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, // xelFetch(BgfxISa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, // , int2 _coord, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // nt _lod).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, // ture.Load(int3(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, // coord, _lod) );.
	0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, // }.uint4 bgfxTexe
	0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, // lFetch(BgfxUSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _lod).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, // re.Load(int3(_co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ord, _lod) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, // float4 bgfxTexel
	0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Fetch(BgfxSample
	0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // r2DMS _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  _sampleIdx).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x5f, 0x63, // _texture.Load(_c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, // oord, _sampleIdx
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // TexelFetch(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, // ampler2DArray _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // ampler, int3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ord, int _lod).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, // int4(_coord, _lo
	0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // d) );.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, // gfxTexelFetch(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // pler, int3 _coor
	0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // d, int _lod).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, // _texture.Load(in
	0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // t4(_coord, _lod)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x67, 0x66, //  );.}.float3 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, // xTextureSize(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ler, int _lod).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, // .float3 result;.
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, // re.GetDimensions
	0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // (result.x, resul
	0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // t.y, result.z);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, // return result;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // .float3 instMul(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // float3 _vec, flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at3x3 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, // turn mul(_mtx, _
	0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, // vec); }.float3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, // nstMul(float3x3 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, // _mtx, float3 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, // c) { return mul(
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // _vec, _mtx); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, // loat4 instMul(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat4 _vec, float
	0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // 4x4 _mtx) { retu
	0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, // rn mul(_mtx, _ve
	0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, // c); }.float4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, // tMul(float4x4 _m
	0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, // tx, float4 _vec)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, //  { return mul(_v
	0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // ec, _mtx); }.boo
	0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, // l2 lessThan(floa
	0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, // t2 _a, float2 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, // ) { return _a < 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool3 less
	0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, // Than(float3 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float3 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // urn _a < _b; }.b
	0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, // ool4 lessThan(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _a, float4 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, // < _b; }.bool2 le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ssThanEqual(floa
	0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, // t2 _a, float2 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, // ) { return _a <=
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, //  _b; }.bool3 les
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sThanEqual(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, // 3 _a, float3 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, //  { return _a <= 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool4 less
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ThanEqual(float4
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float4 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, // { return _a <= _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, // b; }.bool2 great
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // erThan(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a > _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // .bool3 greaterTh
	0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // an(float3 _a, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // n _a > _b; }.boo
	0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, // l4 greaterThan(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _a, float4
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, //  > _b; }.bool2 g
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, // reaterThanEqual(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // a >= _b; }.bool3
	0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, //  greaterThanEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float3 _a, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a >= _b; }.boo
	0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, // l4 greaterThanEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat4 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a >= _b; }.b
	0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, // ool2 notEqual(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 _a, float2 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6e, // != _b; }.bool3 n
	0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // otEqual(float3 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float3 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, // return _a != _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, //  }.bool4 notEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float4 _a, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a != _b; }.boo
	0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // l2 equal(float2 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float2 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, //  return _a == _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, // ; }.bool3 equal(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _a, float
	0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 3 _b) { return _
	0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, // a == _b; }.bool4
	0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, //  equal(float4 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float4 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, // eturn _a == _b; 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, // }.float mix(floa
	0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x2c, 0x20, // t _a, float _b, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _t) { retu
	0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, // rn lerp(_a, _b, 
	0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x69, // _t); }.float2 mi
	0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // x(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // at2 _b, float2 _
	0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, // t) { return lerp
	0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_a, _b, _t); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 mix(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x2c, // 3 _a, float3 _b,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _t) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, // turn lerp(_a, _b
	0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // , _t); }.float4 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // mix(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _b, float4
	0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, //  _t) { return le
	0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, // rp(_a, _b, _t); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, // }.float mod(floa
	0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x29, 0x20, // t _a, float _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, // { return _a - _b
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, //  * floor(_a / _b
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x6f, 0x64, 0x28, // ); }.float2 mod(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, // a - _b * floor(_
	0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // a / _b); }.float
	0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, // 3 mod(float3 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, // turn _a - _b * f
	0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, // loor(_a / _b); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, // .float4 mod(floa
	0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // t4 _a, float4 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, // ) { return _a - 
	0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, // _b * floor(_a / 
	0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x65, // _b); }.float2 ve
	0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // c2_splat(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // x) { return floa
	0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // t2(_x, _x); }.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // oat3 vec3_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // rn float3(_x, _x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // , _x); }.float4 
	0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec4_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x) { return fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // oat4(_x, _x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x75, 0x76, //  _x); }.uint2 uv
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec2_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, // x) { return uint
	0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // 2(_x, _x); }.uin
	0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // t3 uvec3_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uint3(_x, _x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, // x); }.uint4 uvec
	0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // 4_splat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x28, //  { return uint4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, //  }.float4x4 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // romRows(float4 _
	0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, // 0, float4 _1, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _2, float4 
	0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, // _3).{.return flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at4x4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // , _3);.}.float4x
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, // 4 mtxFromCols(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _0, float4 
	0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, // _1, float4 _2, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // loat4 _3).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, // rn transpose(flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at4x4(_0, _1, _2
	0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // , _3) );.}.float
	0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // 3x3 mtxFromRows(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _0, float
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, // 3 _1, float3 _2)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // .{.return float3
	0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // x3(_0, _1, _2);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // }.float3x3 mtxFr
	0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, // omCols(float3 _0
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // , float3 _1, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _2).{.return
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  transpose(float
	0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, // 3x3(_0, _1, _2) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // );.}.static floa
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x73, // t4 u_viewRect;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // tatic float4 u_v
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // iewTexel;.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // m float4x4 u_vie
	0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // w;.static float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // x4 u_invView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // iform float4x4 u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // _proj;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, // oat4x4 u_invProj
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // ;.static float4x
	0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, // 4 u_viewProj;.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // atic float4x4 u_
	0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, // invViewProj;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, // tic float4x4 u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // odel[32];.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // lView;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // oat4x4 u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ewProj;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, // loat4 u_alphaRef
	0x34, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 4;.static float2
	0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x3b, 0x0a, 0x73, 0x74, 0x61, //  u_alphaRef;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, // tic float4 u_fog
	0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, // Start;.uniform f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x3b, 0x0a, // loat4 u_fogEnd;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // uniform float4 u
	0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _fogRange;.unifo
	0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, // rm float4 u_fogD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // isable;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // loat4 u_fogColor
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // x4 u_world;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, // orm float4 u_amb
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, // Light;.uniform f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // loat4 u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ams[8];.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, // loat4 u_lightPos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // ition[8];.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // m float4 u_light
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // Direction[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // iform float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // ightColor[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, // iform float4 u_m
	0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // atColor;.uniform
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, //  float4 u_surfPr
	0x6f, 0x70, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x44, 0x6f, 0x44, 0x79, // ops;.float3 DoDy
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // namicLight(float
	0x33, 0x20, 0x56, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x29, 0x0a, 0x7b, // 3 V, float3 N).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, // .float3 color = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // float3(0.0, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, //  0.0);.for(int i
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, //  = 0; i < 8; i++
	0x29, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // ){.if(u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ams[i].x == 0.0)
	0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, // .break;.if(u_lig
	0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, // htParams[i].x ==
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, //  1.0){.float l =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, //  max(0.0, dot(N,
	0x20, 0x2d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, //  -u_lightDirecti
	0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, // on[i].xyz));.col
	0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6c, 0x2a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, // or += l*u_lightC
	0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x69, 0x5d, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x65, 0x6c, // olor[i].rgb;.}el
	0x73, 0x65, 0x0a, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // se.;.}.return co
	0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x44, 0x6f, 0x46, // lor;.}.float DoF
	0x6f, 0x67, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // og(float w).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x77, 0x20, 0x2d, 0x20, // turn clamp((w - 
	0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x2e, 0x78, 0x29, 0x2a, 0x75, 0x5f, 0x66, 0x6f, // u_fogEnd.x)*u_fo
	0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, // gRange.x, u_fogD
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // isable.x, 1.0);.
	0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // }.uniform float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x3b, 0x0a, // x4 u_texMatrix;.
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20, 0x66, 0x6c, 0x6f, // Output main( flo
	0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, 0x43, // at4 a_color0 : C
	0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, // OLOR0 , float4 a
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3a, 0x20, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, // _normal : NORMAL
	0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, //  , float3 a_posi
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x20, // tion : POSITION 
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // , float2 a_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, // ord0 : TEXCOORD0
	0x29, 0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, // ) { Output _vary
	0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, // ing_; _varying_.
	0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // v_color0 = float
	0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // 4(1.0, 0.0, 0.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, //  1.0);; _varying
	0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, // _.v_texcoord0 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // float3(0.0, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, //  0.0);; _varying
	0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, // _.v_texcoord1 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // float2(0.0, 0.0)
	0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x56, 0x20, 0x3d, 0x20, // ;;.{.float4 V = 
	0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // mul(u_world, flo
	0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, // at4(a_position, 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x6f, // 1.0));.float4 po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x70, // sition = mul(u_p
	0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2c, // roj, mul(u_view,
	0x20, 0x56, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6f, //  V));.float3x3 o
	0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6c, 0x6f, // therWorld = (flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x29, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x66, // at3x3)u_world;.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x6f, 0x74, // loat3 N = mul(ot
	0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2c, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // herWorld, a_norm
	0x61, 0x6c, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // al).xyz;._varyin
	0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, // g_.v_texcoord0.x
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // y = a_texcoord0;
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // ._varying_.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, // coord1 = (mul(u_
	0x74, 0x65, 0x78, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // texMatrix, float
	0x34, 0x28, 0x4e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x3b, 0x0a, // 4(N, 1.0))).xy;.
	0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // _varying_.v_colo
	0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x5f, // r0 = a_color0;._
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // varying_.v_color
	0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, 0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, // 0.rgb += u_ambLi
	0x67, 0x68, 0x74, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, // ght.rgb*(u_surfP
	0x72, 0x6f, 0x70, 0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // rops.x);._varyin
	0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, // g_.v_color0.rgb 
	0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, // += DoDynamicLigh
	0x74, 0x28, 0x56, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x29, 0x2a, 0x28, 0x75, 0x5f, 0x73, // t(V.xyz, N)*(u_s
	0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, // urfProps.z);._va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, // rying_.v_color0 
	0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // = clamp(_varying
	0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x66, // _.v_color0, 0.0f
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, // , 1.0);._varying
	0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x2a, 0x3d, 0x20, 0x75, 0x5f, // _.v_color0 *= u_
	0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // matColor;._varyi
	0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, // ng_.v_texcoord0.
	0x7a, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x28, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // z = DoFog(positi
	0x6f, 0x6e, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, // on.w);._varying_
	0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x70, // .gl_Position = p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // osition;.} retur
	0x6e, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, // n _varying_;.}..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xef, 0xfe, 0xef, 0x01, // ................
	0x00, 0x00, 0x00, 0xad, 0x30, 0x00, 0x00, 0x00, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, // ....0...F:.dev.c
	0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, // ode.re3-upstream
	0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, // .librw.src.bgfx.
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, // shaders.matfx_en
	0x76, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, // v_vs_bgfx.inc.hl
	0x73, 0x6c, 0x00, 0x00, 0x66, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, // sl..f:.dev.code.
	0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, // re3-upstream.lib
	0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, // rw.src.bgfx.shad
	0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x73, // ers.matfx_env_vs
	0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x2f, // _bgfx.inc.hlsl./
	0x2f, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, // / shaderc comman
	0x64, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x3a, 0x5c, 0x64, 0x65, // d line:.// F:.de
	0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, 0x69, // v.code.bgfx..bui
	0x6c, 0x64, 0x5c, 0x77, 0x69, 0x6e, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x39, 0x5c, // ld.win64_vs2019.
	0x62, 0x69, 0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, // bin.shadercRelea
	0x73, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, // se.exe --debug -
	0x66, 0x20, 0x6d, 0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x2e, 0x76, 0x65, 0x72, 0x74, // f matfx_env.vert
	0x20, 0x2d, 0x6f, 0x20, 0x6d, 0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x73, //  -o matfx_env_vs
	0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, // _bgfx.inc --bin2
	0x63, 0x20, 0x2d, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x20, 0x76, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, // c --type v --pla
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x2d, // tform windows --
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x0a, 0x0a, // profile vs_4_0..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, // struct Output.{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, // float4 gl_Positi
	0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, // on : SV_POSITION
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // ;.float4 v_color
	0x30, 0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0 : COLOR;.float
	0x33, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, // 3 v_texcoord0 : 
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // TEXCOORD0;.float
	0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3a, 0x20, // 2 v_texcoord1 : 
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x31, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, // TEXCOORD1;.};.fl
	0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x1b, 0xe2, 0x30, 0x01, 0x80, // oat intBits..0..
	0x00, 0x00, 0x00, 0xe5, 0xd4, 0x29, 0x10, 0xe3, 0x2a, 0xd6, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, // .....)..*.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, // ...............M
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x1b, 0xe2, 0x30, 0x01, 0x6b, 0xdf, 0xb9, 0xb7, 0x14, // ...(.....0.k....
	0x30, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, // 0......L...M....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x42, // ...............B
	0x00, 0x3c, 0x11, 0x10, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x01, 0x00, 0x01, 0x00, 0xac, // .<..............
	0x4c, 0x0a, 0x00, 0x01, 0x00, 0x01, 0x00, 0xac, 0x4c, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, // L.......LMicroso
	0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, // ft (R) HLSL Shad
	0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, // er Compiler 10.1
	0x00, 0x00, 0x00, 0x36, 0x00, 0x3d, 0x11, 0x01, 0x68, 0x6c, 0x73, 0x6c, 0x46, 0x6c, 0x61, 0x67, // ...6.=..hlslFlag
	0x73, 0x00, 0x30, 0x78, 0x31, 0x30, 0x30, 0x35, 0x00, 0x68, 0x6c, 0x73, 0x6c, 0x54, 0x61, 0x72, // s.0x1005.hlslTar
	0x67, 0x65, 0x74, 0x00, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x00, 0x68, 0x6c, 0x73, 0x6c, 0x45, // get.vs_4_0.hlslE
	0x6e, 0x74, 0x72, 0x79, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x11, 0x00, // ntry.main..*....
	0x00, 0x00, 0x00, 0xf4, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xf0, 0x08, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0xa0, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, // ..main...>......
	0x00, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .a_color0.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, // .........P......
	0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x08, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xf0, 0x08, 0x0c, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, // .........>......
	0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .a_normal.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x10, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xf0, 0x08, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, // .........P......
	0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x18, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xf0, 0x08, 0x1c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x09, // .......2.>......
	0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, // .a_position.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x84, // .....P..........
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, // .......$.....P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x28, // ...............(
	0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x02, 0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x74, // ...2.>.......a_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // excoord0........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x30, 0x00, 0x00, 0x00, 0x16, // ...........0....
	0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xf0, 0x08, 0x34, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x06, 0x10, 0x00, 0x00, 0x88, // ...4...:.>......
	0x00, 0x3c, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x61, // .<main return va
	0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // lue>............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x04, 0x00, 0x84, // .....P.....,....
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x30, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, // .......0.....P..
	0x00, 0x05, 0x00, 0x30, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x34, // ...0...........4
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0x84, // .....P..... ....
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, // ....... .....P..
	0x00, 0x05, 0x00, 0x24, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x24, // ...$...........$
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x28, 0x00, 0x04, 0x00, 0x84, // .....P.....(....
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x28, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, // .......(.....P..
	0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x10, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0x84, // .....P..........
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, // .............P..
	0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x18, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x84, // .....P..........
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x1c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x84, // .....P..........
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, // .............P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x08, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x84, // .....P..........
	0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x08, 0x0c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x05, // ...........2.>..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x00, 0x00, // ....._varying_..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0x48, 0x04, 0x00, 0x00, 0x01, // .P..... ...H....
	0x00, 0x2c, 0x05, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x24, // .,. .....P.....$
	0x00, 0x04, 0x00, 0x48, 0x04, 0x00, 0x00, 0x01, 0x00, 0x2c, 0x05, 0x24, 0x00, 0x00, 0x00, 0x16, // ...H.....,.$....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x04, 0x00, 0x28, 0x05, 0x00, 0x00, 0x01, // .P.....,...(....
	0x00, 0x4c, 0x04, 0x28, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x30, // .L.(.....P.....0
	0x00, 0x04, 0x00, 0x28, 0x05, 0x00, 0x00, 0x01, 0x00, 0x4c, 0x04, 0x2c, 0x00, 0x00, 0x00, 0x1a, // ...(.....L.,....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x01, // .P.........<....
	0x00, 0xdc, 0x02, 0x40, 0x00, 0x4c, 0x02, 0x30, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x50, 0x11, 0x00, // ...@.L.0.....P..
	0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x02, 0x40, // .......<.......@
	0x00, 0x4c, 0x02, 0x34, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, // .L.4.....P......
	0x00, 0x04, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x02, 0x40, 0x00, 0x4c, 0x02, 0x38, // ...<.......@.L.8
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x3c, // .....P.........<
	0x05, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x02, 0x3c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .......<.....P..
	0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x01, 0x00, 0x4c, 0x02, 0x40, // .......|.....L.@
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0x7c, // .....P.........|
	0x05, 0x00, 0x00, 0x01, 0x00, 0x4c, 0x02, 0x44, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....L.D.....P..
	0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x01, 0x00, 0x4c, 0x02, 0x48, // .......|.....L.H
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x18, // .....P..........
	0x08, 0x00, 0x00, 0x01, 0x00, 0x5c, 0x01, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0x18, 0x08, 0x00, 0x00, 0x01, 0x00, 0x5c, 0x01, 0x14, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x18, // .....P..........
	0x08, 0x00, 0x00, 0x01, 0x00, 0x5c, 0x01, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x18, 0x08, 0x00, 0x00, 0x01, 0x00, 0x5c, 0x01, 0x1c, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x28, 0x00, 0x04, 0x00, 0xf8, // .....P.....(....
	0x08, 0x00, 0x00, 0x01, 0x00, 0x7c, 0x00, 0x30, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....|.0.....P..
	0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x0c, 0x09, 0x00, 0x00, 0x01, 0x00, 0x68, 0x00, 0x00, // .............h..
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x0c, // .....P..........
	0x09, 0x00, 0x00, 0x01, 0x00, 0x68, 0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....h.......P..
	0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x0c, 0x09, 0x00, 0x00, 0x01, 0x00, 0x68, 0x00, 0x08, // .............h..
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x0c, // .....P..........
	0x09, 0x00, 0x00, 0x01, 0x00, 0x68, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x00, // .....h.....*.>..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....V..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0x64, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ...d............
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x64, 0x01, 0x00, 0x00, 0x01, // .P.........d....
	0x00, 0xb8, 0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, // .........P......
	0x00, 0x04, 0x00, 0x64, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x08, 0x00, 0x00, 0x00, 0x16, // ...d............
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x64, 0x01, 0x00, 0x00, 0x01, // .P.........d....
	0x00, 0xb8, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x08, // .........>......
	0x00, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .position.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, // .........P......
	0x00, 0x04, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x01, 0x00, 0x68, 0x06, 0x00, 0x00, 0x00, 0x00, 0x16, // .........h......
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x68, 0x06, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, // .h.......P......
	0x00, 0x04, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x01, 0x00, 0x68, 0x06, 0x08, 0x00, 0x00, 0x00, 0x16, // .........h......
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x68, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x08, 0x10, 0x00, 0x00, 0x08, // .h.....2.>......
	0x00, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, // .otherWorld.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x24, 0x03, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x00, 0x10, // .......$........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x3c, // .....P.........<
	0x03, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x00, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x54, 0x03, 0x00, 0x00, 0x01, 0x00, 0xe0, 0x00, 0x18, // .......T........
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x6c, // .....P.........l
	0x03, 0x00, 0x00, 0x01, 0x00, 0xdc, 0x00, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // ....... .....P..
	0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x84, 0x03, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x00, 0x24, // ...............$
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x9c, // .....P..........
	0x03, 0x00, 0x00, 0x01, 0x00, 0xec, 0x00, 0x30, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .......0.....P..
	0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x01, 0x00, 0xa0, 0x01, 0x3c, // ... ...........<
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xb4, // .....P..........
	0x03, 0x00, 0x00, 0x01, 0x00, 0xd4, 0x00, 0x34, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .......4.....P..
	0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0xcc, 0x03, 0x00, 0x00, 0x01, 0x00, 0x70, 0x01, 0x38, // .............p.8
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x08, 0x00, 0x4e, 0x00, 0x00, // ...*.>.......N..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x03, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xc4, 0x03, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, // .........P......
	0x00, 0x04, 0x00, 0x18, 0x04, 0x00, 0x00, 0x01, 0x00, 0x94, 0x03, 0x14, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x34, 0x04, 0x00, 0x00, 0x01, // .P.........4....
	0x00, 0x78, 0x03, 0x18, 0x00, 0x00, 0x00, 0xda, 0x00, 0x4d, 0x11, 0x80, 0x00, 0x00, 0x00, 0x1c, // .x.......M......
	0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x00, 0x09, 0x01, 0x0d, 0x25, 0x06, 0x02, 0x03, // ............%...
	0x85, 0x10, 0x0d, 0x1a, 0x06, 0x02, 0x03, 0x20, 0x0d, 0x1d, 0x06, 0x02, 0x03, 0x68, 0x0d, 0x06, // ....... .....h..
	0x06, 0x02, 0x03, 0x34, 0x09, 0x06, 0x03, 0x04, 0x09, 0x01, 0x0d, 0x1d, 0x0b, 0x24, 0x0d, 0x35, // ...4.........$.5
	0x06, 0x02, 0x03, 0x34, 0x0d, 0x1f, 0x06, 0x02, 0x03, 0x5c, 0x0d, 0x01, 0x06, 0x02, 0x03, 0x44, // ...4...........D
	0x09, 0x17, 0x0d, 0x19, 0x06, 0x0d, 0x03, 0x04, 0x09, 0x01, 0x0d, 0x01, 0x06, 0x10, 0x03, 0x1c, // ................
	0x0d, 0x0d, 0x0b, 0x24, 0x04, 0x3c, 0x08, 0x00, 0x09, 0x08, 0x0d, 0x24, 0x01, 0x85, 0x94, 0x06, // ...$.<.....$....
	0x15, 0x03, 0x00, 0x09, 0x09, 0x0d, 0x0d, 0x06, 0x02, 0x03, 0x20, 0x09, 0x01, 0x0d, 0x1a, 0x03, // .......... .....
	0x14, 0x09, 0x10, 0x0d, 0x14, 0x03, 0x2c, 0x09, 0x04, 0x0d, 0x1c, 0x06, 0x02, 0x03, 0x28, 0x09, // ......,.......(.
	0x01, 0x0d, 0x1d, 0x03, 0x28, 0x0d, 0x06, 0x0b, 0x2c, 0x09, 0x06, 0x03, 0x04, 0x09, 0x04, 0x0d, // ....(...,.......
	0x1c, 0x0b, 0x24, 0x09, 0x01, 0x0d, 0x1d, 0x03, 0x28, 0x09, 0x1b, 0x0d, 0x32, 0x0b, 0x2c, 0x09, // ..$.....(...2.,.
	0x14, 0x0d, 0x33, 0x03, 0x24, 0x09, 0x0b, 0x0d, 0x34, 0x03, 0x1c, 0x09, 0x0a, 0x0d, 0x1e, 0x06, // ..3.$...4.......
	0x02, 0x03, 0x1c, 0x09, 0x01, 0x03, 0x28, 0x0d, 0x01, 0x06, 0x02, 0x03, 0x1c, 0x09, 0x17, 0x0d, // ......(.........
	0x19, 0x06, 0x0d, 0x03, 0x04, 0x09, 0x01, 0x0d, 0x01, 0x06, 0x10, 0x03, 0x1c, 0x0d, 0x0d, 0x0b, // ................
	0x24, 0x04, 0x3c, 0x46, 0x00, 0x3e, 0x11, 0x0a, 0x10, 0x00, 0x00, 0x88, 0x00, 0x3c, 0x44, 0x6f, // $.<F.>.......<Do
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x72, 0x65, 0x74, // DynamicLight ret
	0x75, 0x72, 0x6e, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // urn value>......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .............P..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x64, 0x07, 0x00, 0x00, 0x01, 0x00, 0x48, 0x00, 0x64, // .......d.....H.d
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x78, // .....P.........x
	0x07, 0x00, 0x00, 0x01, 0x00, 0x34, 0x00, 0x68, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....4.h.....P..
	0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x8c, 0x07, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x6c, // ............. .l
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x09, 0x00, 0x4e, 0x00, 0x00, // ...*.>.......N..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x18, 0x02, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, // .........P......
	0x00, 0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, 0x00, 0x18, 0x02, 0x14, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x18, 0x02, 0x18, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x08, // .........>......
	0x00, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .color..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, // .........P......
	0x00, 0x04, 0x00, 0xb4, 0x05, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x50, 0x00, 0x00, 0x00, 0x16, // .........(.P....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xb4, 0x05, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x28, 0x00, 0x54, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, // .(.T.....P......
	0x00, 0x04, 0x00, 0xb4, 0x05, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x58, 0x00, 0x00, 0x00, 0x16, // .........(.X....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xd0, 0x01, 0x64, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, // ...d.....P......
	0x00, 0x04, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x01, 0x00, 0xd0, 0x01, 0x68, 0x00, 0x00, 0x00, 0x16, // ...........h....
	0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x01, // .P..............
	0x00, 0xd0, 0x01, 0x6c, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x74, 0x00, 0x00, 0x00, 0x00, // ...l...*.>.t....
	0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .i..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0xc8, // .....P..........
	0x05, 0x00, 0x00, 0x01, 0x00, 0x28, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, // .....(.......P..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x01, 0x00, 0xbc, 0x01, 0x60, // ...............`
	0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, // ...*.>.@.....l..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x06, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x48, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x4e, 0x11, 0x36, 0x00, 0x4d, 0x11, 0x80, // .H.L.....N.6.M..
	0x00, 0x00, 0x00, 0xf0, 0x0c, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x07, 0x00, 0x09, 0x01, 0x0d, // ................
	0x41, 0x06, 0x02, 0x0c, 0x80, 0x94, 0x87, 0xcc, 0x08, 0x00, 0x09, 0x0f, 0x0d, 0x1c, 0x01, 0x88, // A...............
	0x50, 0x03, 0x00, 0x09, 0x0e, 0x0d, 0x2a, 0x03, 0x38, 0x09, 0x08, 0x0d, 0x40, 0x0c, 0x3c, 0x20, // P.....*.8...@.< 
	0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x0d, 0x10, 0x00, 0x00, 0x80, 0x00, 0x3c, 0x44, 0x6f, // ...:.>.......<Do
	0x46, 0x6f, 0x67, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, // Fog return value
	0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // >...............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // ................
	0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe4, 0x08, 0x00, 0x00, 0x01, // .P..............
	0x00, 0x14, 0x00, 0x30, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x40, 0x00, 0x00, 0x00, 0x01, // ...0...*.>.@....
	0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .w..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x50, // .....P.........P
	0x08, 0x00, 0x00, 0x01, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x4e, 0x11, 0x02, // .............N..
	0x00, 0x06, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, // ................
	0x01, 0x8c, 0x55, 0x9a, 0x87, 0x29, 0x10, 0x30, 0x54, 0x0d, 0x44, 0x38, 0x12, 0xa6, 0x0a, 0x75, // ..U..).0T.D8...u
	0xe7, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x88, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x01, 0x00, 0x74, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x7c, // ...t...........|
	0x08, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x84, 0x00, 0x00, 0x00, 0x50, // .......P.......P
	0x01, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0xa4, 0x00, 0x00, 0x00, 0x50, // .......P.......P
	0x01, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0xc4, 0x00, 0x00, 0x00, 0x50, // .......P.......P
	0x01, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0xe0, 0x00, 0x00, 0x00, 0x50, // .......P.......P
	0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x50, // .......P.......P
	0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x1c, 0x01, 0x00, 0x00, 0x50, // .......P.......P
	0x01, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x50, 0x01, 0x00, 0x80, 0x48, 0x01, 0x00, 0x00, 0x50, // ...H...P...H...P
	0x01, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x64, 0x01, 0x00, 0x00, 0x51, // ...d...Q...d...Q
	0x01, 0x00, 0x00, 0x84, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x84, 0x01, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xa4, 0x01, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xc0, 0x01, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xe0, 0x01, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xfc, 0x01, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x1c, 0x02, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x38, 0x02, 0x00, 0x00, 0x51, // ...8...Q...8...Q
	0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x58, 0x02, 0x00, 0x00, 0x51, // ...X...Q...X...Q
	0x01, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x78, 0x02, 0x00, 0x00, 0x51, // ...x...Q...x...Q
	0x01, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0x94, 0x02, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xb4, 0x02, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xd0, 0x02, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0xf0, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x80, 0xf0, 0x02, 0x00, 0x00, 0x51, // .......Q.......Q
	0x01, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x0c, 0x03, 0x00, 0x00, 0x52, // .......R.......R
	0x01, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x24, 0x03, 0x00, 0x00, 0x52, // ...$...R...$...R
	0x01, 0x00, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x3c, 0x03, 0x00, 0x00, 0x52, // ...<...R...<...R
	0x01, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x54, 0x03, 0x00, 0x00, 0x52, // ...T...R...T...R
	0x01, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x6c, 0x03, 0x00, 0x00, 0x52, // ...l...R...l...R
	0x01, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x84, 0x03, 0x00, 0x00, 0x52, // .......R.......R
	0x01, 0x00, 0x00, 0x9c, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0x9c, 0x03, 0x00, 0x00, 0x52, // .......R.......R
	0x01, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x80, 0xb4, 0x03, 0x00, 0x00, 0x52, // .......R.......R
	0x01, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x80, 0xcc, 0x03, 0x00, 0x00, 0x53, // .......S.......S
	0x01, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x80, 0xe8, 0x03, 0x00, 0x00, 0x53, // .......S.......S
	0x01, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x80, 0xfc, 0x03, 0x00, 0x00, 0x53, // .......S.......S
	0x01, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x53, 0x01, 0x00, 0x80, 0x18, 0x04, 0x00, 0x00, 0x53, // .......S.......S
	0x01, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x80, 0x34, 0x04, 0x00, 0x00, 0x54, // ...4...T...4...T
	0x01, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x48, 0x04, 0x00, 0x00, 0x55, // ...H...U...H...U
	0x01, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x68, 0x04, 0x00, 0x00, 0x55, // ...h...U...h...U
	0x01, 0x00, 0x00, 0x88, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x88, 0x04, 0x00, 0x00, 0x55, // .......U.......U
	0x01, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xa4, 0x04, 0x00, 0x00, 0x55, // .......U.......U
	0x01, 0x00, 0x00, 0xc4, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xc4, 0x04, 0x00, 0x00, 0x55, // .......U.......U
	0x01, 0x00, 0x00, 0xe0, 0x04, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0xe0, 0x04, 0x00, 0x00, 0x55, // .......U.......U
	0x01, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x55, 0x01, 0x00, 0x80, 0x0c, 0x05, 0x00, 0x00, 0x55, // .......U.......U
	0x01, 0x00, 0x00, 0x28, 0x05, 0x00, 0x00, 0x56, 0x01, 0x00, 0x80, 0x28, 0x05, 0x00, 0x00, 0x56, // ...(...V...(...V
	0x01, 0x00, 0x00, 0x3c, 0x05, 0x00, 0x00, 0x57, 0x01, 0x00, 0x80, 0x3c, 0x05, 0x00, 0x00, 0x57, // ...<...W...<...W
	0x01, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x57, 0x01, 0x00, 0x80, 0x60, 0x05, 0x00, 0x00, 0x57, // ...`...W...`...W
	0x01, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x7c, 0x05, 0x00, 0x00, 0x58, // ...|...X...|...X
	0x01, 0x00, 0x00, 0x80, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x80, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x94, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xb4, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xb4, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xc8, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xdc, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xf0, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xf4, 0x05, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x10, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x1c, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x1c, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x44, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x44, 0x06, 0x00, 0x00, 0x58, // ...D...X...D...X
	0x01, 0x00, 0x00, 0x50, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x50, 0x06, 0x00, 0x00, 0x58, // ...P...X...P...X
	0x01, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x54, 0x06, 0x00, 0x00, 0x58, // ...T...X...T...X
	0x01, 0x00, 0x00, 0x58, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x58, 0x06, 0x00, 0x00, 0x58, // ...X...X...X...X
	0x01, 0x00, 0x00, 0x80, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x80, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x8c, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x8c, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xb0, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xb0, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xcc, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xcc, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xe8, 0x06, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xe8, 0x06, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x10, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x10, 0x07, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x2c, 0x07, 0x00, 0x00, 0x58, // ...,...X...,...X
	0x01, 0x00, 0x00, 0x30, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x30, 0x07, 0x00, 0x00, 0x58, // ...0...X...0...X
	0x01, 0x00, 0x00, 0x4c, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x4c, 0x07, 0x00, 0x00, 0x58, // ...L...X...L...X
	0x01, 0x00, 0x00, 0x50, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x50, 0x07, 0x00, 0x00, 0x58, // ...P...X...P...X
	0x01, 0x00, 0x00, 0x64, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x64, 0x07, 0x00, 0x00, 0x58, // ...d...X...d...X
	0x01, 0x00, 0x00, 0x78, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x78, 0x07, 0x00, 0x00, 0x58, // ...x...X...x...X
	0x01, 0x00, 0x00, 0x8c, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0x8c, 0x07, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xac, 0x07, 0x00, 0x00, 0x58, 0x01, 0x00, 0x80, 0xac, 0x07, 0x00, 0x00, 0x58, // .......X.......X
	0x01, 0x00, 0x00, 0xc8, 0x07, 0x00, 0x00, 0x59, 0x01, 0x00, 0x80, 0xc8, 0x07, 0x00, 0x00, 0x59, // .......Y.......Y
	0x01, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x59, 0x01, 0x00, 0x80, 0xf0, 0x07, 0x00, 0x00, 0x59, // .......Y.......Y
	0x01, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x80, 0x18, 0x08, 0x00, 0x00, 0x5a, // .......Z.......Z
	0x01, 0x00, 0x00, 0x38, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0x38, 0x08, 0x00, 0x00, 0x5b, // ...8...[...8...[
	0x01, 0x00, 0x00, 0x3c, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0x3c, 0x08, 0x00, 0x00, 0x5b, // ...<...[...<...[
	0x01, 0x00, 0x00, 0x50, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0x50, 0x08, 0x00, 0x00, 0x5b, // ...P...[...P...[
	0x01, 0x00, 0x00, 0x6c, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0x6c, 0x08, 0x00, 0x00, 0x5b, // ...l...[...l...[
	0x01, 0x00, 0x00, 0x88, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0x88, 0x08, 0x00, 0x00, 0x5b, // .......[.......[
	0x01, 0x00, 0x00, 0xa8, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0xa8, 0x08, 0x00, 0x00, 0x5b, // .......[.......[
	0x01, 0x00, 0x00, 0xc8, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0xc8, 0x08, 0x00, 0x00, 0x5b, // .......[.......[
	0x01, 0x00, 0x00, 0xe4, 0x08, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x80, 0xe4, 0x08, 0x00, 0x00, 0x5b, // .......[.......[
	0x01, 0x00, 0x00, 0xf8, 0x08, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x80, 0xf8, 0x08, 0x00, 0x00, 0x5c, // ................
	0x01, 0x00, 0x00, 0x0c, 0x09, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x80, 0x0c, 0x09, 0x00, 0x00, 0x5d, // .......].......]
	0x01, 0x00, 0x00, 0x20, 0x09, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x80, 0x20, 0x09, 0x00, 0x00, 0x5d, // ... ...]... ...]
	0x01, 0x00, 0x00, 0x34, 0x09, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x80, 0x34, 0x09, 0x00, 0x00, 0x5d, // ...4...]...4...]
	0x01, 0x00, 0x00, 0x48, 0x09, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x80, 0x48, 0x09, 0x00, 0x00, 0x5d, // ...H...]...H...]
	0x01, 0x00, 0x00, 0x5c, 0x09, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x80, 0x5c, 0x09, 0x00, 0x00, 0x5d, // .......].......]
	0x01, 0x00, 0x00, 0x70, 0x09, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x80, 0x70, 0x09, 0x00, 0x00, 0x5d, // ...p...]...p...]
	0x01, 0x00, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, // .....1...0...1..
	0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, // .0...1...0...1..
	0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, // .0...1...0...1..
	0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, // .0...1...0......
	0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, // .,.......,......
	0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, // .,.......,......
	0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x1f, // .,.......,......
	0x00, 0x2c, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, // .,.......-......
	0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, // .-.......-......
	0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, // .-.......-......
	0x00, 0x2d, 0x00, 0x01, 0x00, 0x2e, 0x00, 0x13, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, // .-.......-...(..
	0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, // .'...(...'...(..
	0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, // .'...(...'...(..
	0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, // .'...(...'...(..
	0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x27, 0x00, 0x01, 0x00, 0x29, 0x00, 0x0c, // .'...(...'...)..
	0x00, 0x24, 0x00, 0x01, 0x00, 0x29, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x01, 0x00, 0x29, 0x00, 0x0c, // .$...)...$...)..
	0x00, 0x24, 0x00, 0x01, 0x00, 0x29, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x01, 0x00, 0x27, 0x00, 0x01, // .$...)...$...'..
	0x00, 0x26, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, 0x00, 0x39, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, // .&...>...9...>..
	0x00, 0x39, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, 0x00, 0x39, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, // .9...>...9...>..
	0x00, 0x39, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, 0x00, 0x39, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, // .9...>...9...>..
	0x00, 0x39, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x1a, 0x00, 0x39, 0x00, 0x01, 0x00, 0x1e, 0x00, 0x01, // .9...>...9......
	0x00, 0x1d, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x01, // .....9...8...9..
	0x00, 0x38, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .8...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, // .2...C...2...C..
	0x00, 0x32, 0x00, 0x01, 0x00, 0x43, 0x00, 0x1b, 0x00, 0x42, 0x00, 0x01, 0x00, 0x43, 0x00, 0x01, // .2...C...B...C..
	0x00, 0x42, 0x00, 0x01, 0x00, 0x3a, 0x00, 0x16, 0x00, 0x39, 0x00, 0x01, 0x00, 0x3a, 0x00, 0x16, // .B...:...9...:..
	0x00, 0x39, 0x00, 0x01, 0x00, 0x21, 0x00, 0x01, 0x00, 0x20, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, // .9...!... ...,..
	0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, // .+...,...+...,..
	0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, // .+...,...+...,..
	0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x1b, // .+...,...+...,..
	0x00, 0x2b, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x21, 0x00, 0x01, // .+...,...+...!..
	0x00, 0x20, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, // . ..............
	0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, // ................
	0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, // ................
	0x00, 0x13, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, // .......<........
	0x00, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, // ...J...8........
	0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x8c, // ...0...L...l....
	0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x10, // ................
	0x01, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x7c, 0x01, 0x00, 0x00, 0x9c, // ...8.......|....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xca, 0x31, 0x01, 0x38, // .............1.8
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x14, 0x10, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00, 0x0a, // ................
	0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, // ...P.......X....
	0x00, 0x00, 0x00, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, // .......@........
	0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x00, 0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x1b, 0x15, 0x40, // .float4........@
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x00, // .........float3.
	0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, // .......@........
	0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x00, 0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x01, 0x12, 0x04, // .float2.........
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x02, // ................
	0x10, 0x00, 0x00, 0x5e, 0x00, 0x03, 0x12, 0x0d, 0x15, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // ...^............
	0x00, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0xf2, 0xf1, 0x0d, // .gl_Position....
	0x15, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // .........v_color
	0x30, 0x00, 0xf1, 0x0d, 0x15, 0x03, 0x00, 0x01, 0x10, 0x00, 0x00, 0x20, 0x00, 0x76, 0x5f, 0x74, // 0.......... .v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0xf2, 0xf1, 0x0d, 0x15, 0x03, 0x00, 0x02, // excoord0........
	0x10, 0x00, 0x00, 0x2c, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, // ...,.v_texcoord1
	0x00, 0xf2, 0xf1, 0x1e, 0x00, 0x05, 0x15, 0x04, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x00, // .......4.Output.
	0xf3, 0xf2, 0xf1, 0x0a, 0x00, 0x18, 0x15, 0x05, 0x10, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, // ................
	0x00, 0x08, 0x10, 0x06, 0x10, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x03, 0x10, 0x00, 0x00, 0x1e, // ................
	0x00, 0x1c, 0x15, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, // ...@............
	0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x00, 0x0e, // ....$.float3x3..
	0x00, 0x01, 0x12, 0x02, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x0a, // ................
	0x00, 0x18, 0x15, 0x01, 0x10, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, 0x00, 0x08, 0x10, 0x0a, // ................
	0x10, 0x00, 0x00, 0x17, 0x00, 0x02, 0x00, 0x09, 0x10, 0x00, 0x00, 0x0a, 0x00, 0x01, 0x12, 0x01, // ................
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x18, 0x15, 0x40, 0x00, 0x00, 0x00, 0x01, // ...@.......@....
	0x00, 0x01, 0x00, 0x0e, 0x00, 0x08, 0x10, 0x0d, 0x10, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00, 0x0c, // ................
	0x10, 0x00, 0x00, 0x1e, 0x00, 0x1c, 0x15, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, // .......@........
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ........@.float4
	0x78, 0x34, 0x00, 0x0a, 0x00, 0x18, 0x15, 0x0f, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x0a, // x4..............
	0x00, 0x18, 0x15, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x12, 0x00, 0x16, 0x15, 0x00, // ................
	0x10, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xf1, 0x0a, // ..."............
	0x00, 0x18, 0x15, 0x12, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x03, 0x77, 0x01, 0x00, 0xad, // ............w...
	0x3f, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ?...............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x61, 0x74, 0x32, 0x20, // ...........oat2 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, // _x) { return asu
	0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, // int(_x); }.uint3
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, //  floatBitsToUint
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // (float3 _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, // turn asuint(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, //  }.uint4 floatBi
	0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // tsToUint(float4 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, // _x) { return asu
	0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x66, // int(_x); }.int f
	0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, // loatBitsToInt(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, //  asint(_x); }.in
	0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, // t2 floatBitsToIn
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // t(float2 _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, // eturn asint(_x);
	0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, //  }.int3 floatBit
	0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, // sToInt(float3 _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, // ) { return asint
	0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, // (_x); }.int4 flo
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // atBitsToInt(floa
	0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _x) { return 
	0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // asint(_x); }.uin
	0x74, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, // t bitfieldRevers
	0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // e(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, // urn reversebits(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x62, 0x69, 0x74, // _x); }.uint2 bit
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, // fieldReverse(uin
	0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t2 _x) { return 
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, // reversebits(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, //  }.uint3 bitfiel
	0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, // dReverse(uint3 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, // x) { return reve
	0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // rsebits(_x); }.u
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, // int4 bitfieldRev
	0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // erse(uint4 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, //  return reverseb
	0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, // its(_x); }.uint 
	0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x66, 0x6c, 0x6f, // packHalf2x16(flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at2 _x).{.return
	0x20, 0x28, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x79, 0x29, //  (f32tof16(_x.y)
	0x3c, 0x3c, 0x31, 0x36, 0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, // <<16) | f32tof16
	0x28, 0x5f, 0x78, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_x.x);.}.float2
	0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, //  unpackHalf2x16(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x).{.retur
	0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, // n float2(f16tof3
	0x32, 0x28, 0x5f, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x29, 0x2c, 0x20, // 2(_x & 0xffff), 
	0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, // f16tof32(_x >> 1
	0x36, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // 6) );.}.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x53, // gfxSampler2D.{.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, // amplerState m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // mpler;.Texture2D
	0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, //  m_texture;.};.s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, // truct BgfxISampl
	0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // er2D.{.Texture2D
	0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // <int4> m_texture
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, // ;.};.struct Bgfx
	0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, // USampler2D.{.Tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, // ture2D<uint4> m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, // texture;.};.stru
	0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // ct BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, // Array.{.SamplerS
	0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, // tate m_sampler;.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, // Texture2DArray m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, // _texture;.};.str
	0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uct BgfxSampler2
	0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // DShadow.{.Sample
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, // rComparisonState
	0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, //  m_sampler;.Text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, // ure2D m_texture;
	0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, // .};.struct BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, // ampler2DArraySha
	0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, // dow.{.SamplerCom
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // parisonState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // ampler;.Texture2
	0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // DArray m_texture
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, // ;.};.struct Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, // Sampler3D.{.Samp
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // lerState m_sampl
	0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x6d, 0x5f, // er;.Texture3D m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, // texture;.};.stru
	0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, // ct BgfxISampler3
	0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x69, 0x6e, // D.{.Texture3D<in
	0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, // t4> m_texture;.}
	0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, // ;.struct BgfxUSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // mpler3D.{.Textur
	0x65, 0x33, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // e3D<uint4> m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x0a, // BgfxSamplerCube.
	0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, // {.SamplerState m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // _sampler;.Textur
	0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, // eCube m_texture;
	0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, // .};.struct BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, // amplerCubeShadow
	0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, // .{.SamplerCompar
	0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // isonState m_samp
	0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, // ler;.TextureCube
	0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, //  m_texture;.};.s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // truct BgfxSample
	0x72, 0x32, 0x44, 0x4d, 0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // r2DMS.{.Texture2
	0x44, 0x4d, 0x53, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, // DMS<float4> m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // xture;.};.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x42, //  bgfxTexture2D(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, // mpler, float2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // e.Sample(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // ord);.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x69, 0x61, 0x73, // gfxTexture2DBias
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // sampler, float2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, // _coord, float _b
	0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // ias).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, // .SampleBias(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, // _coord, _bias);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ture2DLod(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float2 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, //  float _level).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // eLevel(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // d, _level);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, // 2DLodOffset(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float2 _coor
	0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, // d, float _level,
	0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, //  int2 _offset).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // eLevel(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, // d, _level, _offs
	0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // et);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // fxTexture2DProj(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, // BgfxSampler2D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // coord).{.float2 
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, // coord = _coord.x
	0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, // y * rcp(_coord.z
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // );.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, // ple(_sampler.m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, // ampler, coord);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // ture2DProj(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ampler2D _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float4 _coord
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ).{.float2 coord
	0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, //  = _coord.xy * r
	0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, // cp(_coord.w);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, // texture.Sample(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // r, coord);.}.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // at4 bgfxTexture2
	0x44, 0x47, 0x72, 0x61, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // DGrad(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat2 _coord, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // at2 _dPdx, float
	0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 2 _dPdy).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x28, // ture.SampleGrad(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, // er, _coord, _dPd
	0x78, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // x, _dPdy);.}.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // at4 bgfxTexture2
	0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // DArray(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // er2DArray _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float3 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // ample(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, // Texture2DArrayLo
	0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // d(BgfxSampler2DA
	0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // rray _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, // loat3 _coord, fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // oat _lod).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, // xture.SampleLeve
	0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // l(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, // pler, _coord, _l
	0x6f, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // od);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxTexture2DArray
	0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // LodOffset(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, // mpler2DArray _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, // oord, float _lev
	0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, // el, int2 _offset
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // mpleLevel(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, // oord, _level, _o
	0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ffset);.}.float 
	0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, // bgfxShadow2D(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, // xSampler2DShadow
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 _coord).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, // xture.SampleCmpL
	0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // evelZero(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, // ord.xy, _coord.z
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, // );.}.float bgfxS
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, // hadow2DProj(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, // Sampler2DShadow 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // _sampler, float4
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _coord).{.float
	0x33, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 3 coord = _coord
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // .xyz * rcp(_coor
	0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // d.w);.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, // SampleCmpLevelZe
	0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // ro(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, // mpler, coord.xy,
	0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  coord.z);.}.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, // at4 bgfxShadow2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Array(BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, // r2DArrayShadow _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // sampler, float4 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _coord).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, // ure.SampleCmpLev
	0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // elZero(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, // d.xyz, _coord.w)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // exture3D(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler3D _sampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, //  float3 _coord).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // le(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, // mpler, _coord);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ture3DLod(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler3D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float3 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, //  float _level).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // eLevel(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, // d, _level);.}.in
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, // t4 bgfxTexture3D
	0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, // (BgfxISampler3D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _sampler, float3
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, //  _coord).{.uint3
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, //  size;._sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, // m_texture.GetDim
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, // ensions(size.x, 
	0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, // size.y, size.z);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, // int4(_coord * si
	0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, // ze, 0) );.}.uint
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, // 4 bgfxTexture3D(
	0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, // BgfxUSampler3D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // sampler, float3 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, // _coord).{.uint3 
	0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // size;._sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, // _texture.GetDime
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, // nsions(size.x, s
	0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, // ize.y, size.z);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, // m_texture.Load(i
	0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, // nt4(_coord * siz
	0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // e, 0) );.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, // 4 bgfxTextureCub
	0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, // e(BgfxSamplerCub
	0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // e _sampler, floa
	0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t3 _coord).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, // exture.Sample(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _coord);.}.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, // at4 bgfxTextureC
	0x75, 0x62, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // ubeBias(BgfxSamp
	0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // lerCube _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float3 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, //  float _bias).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // Bias(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // sampler, _coord,
	0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _bias);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, // 4 bgfxTextureCub
	0x65, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // eLod(BgfxSampler
	0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // Cube _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, // loat3 _coord, fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // oat _level).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, // texture.SampleLe
	0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, // vel(_sampler.m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, // ampler, _coord, 
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _level);.}.float
	0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x75, 0x62, 0x65, 0x28, //  bgfxShadowCube(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, // BgfxSamplerCubeS
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // hadow _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float4 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, // eCmpLevelZero(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, // , _coord.xyz, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oord.w);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, // 4 bgfxTexelFetch
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, // sampler, int2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, // oord, int _lod).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, // r.m_texture.Load
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, // (int3(_coord, _l
	0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // od) );.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x66, // bgfxTexelFetchOf
	0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // fset(BgfxSampler
	0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, // 2D _sampler, int
	0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, // 2 _coord, int _l
	0x6f, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, // od, int2 _offset
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, // ler.m_texture.Lo
	0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, // ad(int3(_coord, 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, // _lod), _offset )
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float2 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // extureSize(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ampler2D _sample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // r, int _lod).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, // loat2 result;._s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, // .GetDimensions(r
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, // esult.x, result.
	0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // y);.return resul
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // t;.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, // TextureGather(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, // pler, float2 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // ord).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // .GatherRed(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ler.m_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // coord );.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, // 4 bgfxTextureGat
	0x68, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // herOffset(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float2 _coord,
	0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, //  int2 _offset).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, // .m_texture.Gathe
	0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // rRed(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // sampler, _coord,
	0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, //  _offset );.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // Gather(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // er2DArray _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float3 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, // pler.m_texture.G
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // atherRed(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, // ord );.}.int4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, // fxTexelFetch(Bgf
	0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // xISampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // pler, int2 _coor
	0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // d, int _lod).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, // _texture.Load(in
	0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // t3(_coord, _lod)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, //  );.}.uint4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, // TexelFetch(BgfxU
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // er, int2 _coord,
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, //  int _lod).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, // exture.Load(int3
	0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, // (_coord, _lod) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // exelFetch(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // mpler2DMS _sampl
	0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // er, int2 _coord,
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, //  int _sampleIdx)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, // er.m_texture.Loa
	0x64, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // d(_coord, _sampl
	0x65, 0x49, 0x64, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // eIdx);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, // bgfxTexelFetch(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // gfxSampler2DArra
	0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, // y _sampler, int3
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, //  _coord, int _lo
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, // pler.m_texture.L
	0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // oad(int4(_coord,
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  _lod) );.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, // t4 bgfxTexelFetc
	0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, // h(BgfxSampler3D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, // _sampler, int3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // coord, int _lod)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, // er.m_texture.Loa
	0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // d(int4(_coord, _
	0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // lod) );.}.float3
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, //  bgfxTextureSize
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, // (BgfxSampler3D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, // sampler, int _lo
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, // d).{.float3 resu
	0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // lt;._sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, // exture.GetDimens
	0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, // ions(result.x, r
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, // esult.y, result.
	0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, // z);.return resul
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // t;.}.float3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, // Mul(float3 _vec,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, //  float3x3 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, // { return mul(_mt
	0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // x, _vec); }.floa
	0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t3 instMul(float
	0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 3x3 _mtx, float3
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _vec) { return 
	0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, // mul(_vec, _mtx);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, //  }.float4 instMu
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, // l(float4 _vec, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // loat4x4 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, // return mul(_mtx,
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  _vec); }.float4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, //  instMul(float4x
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // 4 _mtx, float4 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, // vec) { return mu
	0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, // l(_vec, _mtx); }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, // .bool2 lessThan(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, // a < _b; }.bool3 
	0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // lessThan(float3 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float3 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, //  return _a < _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, //  }.bool4 lessTha
	0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // n(float4 _a, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, //  _a < _b; }.bool
	0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, // 2 lessThanEqual(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // a <= _b; }.bool3
	0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, //  lessThanEqual(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // loat3 _a, float3
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, //  <= _b; }.bool4 
	0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, // lessThanEqual(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _a, float4 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, // <= _b; }.bool2 g
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // reaterThan(float
	0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, // 2 _a, float2 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, //  { return _a > _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, // b; }.bool3 great
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, // erThan(float3 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float3 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a > _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // .bool4 greaterTh
	0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // an(float4 _a, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat4 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // n _a > _b; }.boo
	0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, // l2 greaterThanEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float2 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat2 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a >= _b; }.b
	0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, // ool3 greaterThan
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, // Equal(float3 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // turn _a >= _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // .bool4 greaterTh
	0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // anEqual(float4 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float4 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, // return _a >= _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, //  }.bool2 notEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at2 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a != _b; }.boo
	0x6c, 0x33, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // l3 notEqual(floa
	0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, // t3 _a, float3 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, // ) { return _a !=
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6e, 0x6f, 0x74, //  _b; }.bool4 not
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, // Equal(float4 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float4 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // turn _a != _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, // .bool2 equal(flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // at2 _a, float2 _
	0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, // b) { return _a =
	0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x65, 0x71, // = _b; }.bool3 eq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float3 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat3 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a == _b; }.b
	0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ool4 equal(float
	0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, // 4 _a, float4 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, //  { return _a == 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x28, // _b; }.float mix(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float _a, float 
	0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, // _b, float _t) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, // return lerp(_a, 
	0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _b, _t); }.float
	0x32, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, // 2 mix(float2 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  float2 _b, floa
	0x74, 0x32, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t2 _t) { return 
	0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, // lerp(_a, _b, _t)
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, // ; }.float3 mix(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // loat3 _a, float3
	0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x74, 0x29, 0x20, //  _b, float3 _t) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, // { return lerp(_a
	0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _b, _t); }.flo
	0x61, 0x74, 0x34, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // at4 mix(float4 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, // a, float4 _b, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat4 _t) { retur
	0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, // n lerp(_a, _b, _
	0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x28, // t); }.float mod(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // float _a, float 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, // - _b * floor(_a 
	0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // / _b); }.float2 
	0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // mod(float2 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat2 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // rn _a - _b * flo
	0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // or(_a / _b); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // loat3 mod(float3
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float3 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, // { return _a - _b
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, //  * floor(_a / _b
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x28, // ); }.float4 mod(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 _a, float
	0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 4 _b) { return _
	0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, // a - _b * floor(_
	0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // a / _b); }.float
	0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 2 vec2_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, // float2(_x, _x); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // }.float3 vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, // return float3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _x, _x); }.flo
	0x61, 0x74, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, // at4 vec4_splat(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // loat _x) { retur
	0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // n float4(_x, _x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, //  _x, _x); }.uint
	0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, // 2 uvec2_splat(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x) { return 
	0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // uint2(_x, _x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // .uint3 uvec3_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uint3(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, // x, _x); }.uint4 
	0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec4_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, //  _x) { return ui
	0x6e, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // nt4(_x, _x, _x, 
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // _x); }.float4x4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, // mtxFromRows(floa
	0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, // t4 _0, float4 _1
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // , float4 _2, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _3).{.return
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, //  float4x4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _2, _3);.}.flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // at4x4 mtxFromCol
	0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // s(float4 _0, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // at4 _1, float4 _
	0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, // 2, float4 _3).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, // return transpose
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, // (float4x4(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , _2, _3) );.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // loat3x3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, // ows(float3 _0, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // loat3 _1, float3
	0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _2).{.return fl
	0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // oat3x3(_0, _1, _
	0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, // 2);.}.float3x3 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // txFromCols(float
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, // 3 _0, float3 _1,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  float3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, // turn transpose(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // loat3x3(_0, _1, 
	0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, // _2) );.}.static 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, // float4 u_viewRec
	0x74, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // t;.static float4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, //  u_viewTexel;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // iform float4x4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // _view;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, // oat4x4 u_invView
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, // x4 u_proj;.stati
	0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // c float4x4 u_inv
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, // Proj;.static flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // at4x4 u_viewProj
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // ;.static float4x
	0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // 4 u_invViewProj;
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // .static float4x4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x73, 0x74, //  u_model[32];.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // atic float4x4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, // modelView;.stati
	0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // c float4x4 u_mod
	0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // elViewProj;.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, // ic float4 u_alph
	0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // aRef4;.static fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x3b, // oat2 u_alphaRef;
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // .static float4 u
	0x5f, 0x66, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _fogStart;.unifo
	0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, // rm float4 u_fogE
	0x6e, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // nd;.uniform floa
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, // t4 u_fogRange;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // niform float4 u_
	0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // fogDisable;.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x43, // ic float4 u_fogC
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, // olor;.uniform fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, // oat4x4 u_world;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // uniform float4 u
	0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // _ambLight;.unifo
	0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // rm float4 u_ligh
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // tParams[8];.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ic float4 u_ligh
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // tPosition[8];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // iform float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, // ightDirection[8]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x38, 0x5d, //  u_lightColor[8]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_matColor;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x75, // form float4 u_su
	0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // rfProps;.float3 
	0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x66, // DoDynamicLight(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // loat3 V, float3 
	0x4e, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // N).{.float3 colo
	0x72, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // r = float3(0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, // 0.0, 0.0);.for(i
	0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x38, 0x3b, // nt i = 0; i < 8;
	0x20, 0x69, 0x2b, 0x2b, 0x29, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  i++){.if(u_ligh
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, // tParams[i].x == 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x75, // 0.0).break;.if(u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, // _lightParams[i].
	0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // x == 1.0){.float
	0x20, 0x6c, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x64, 0x6f, //  l = max(0.0, do
	0x74, 0x28, 0x4e, 0x2c, 0x20, 0x2d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, // t(N, -u_lightDir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, // ection[i].xyz));
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6c, 0x2a, 0x75, 0x5f, 0x6c, 0x69, // .color += l*u_li
	0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x69, 0x5d, 0x2e, 0x72, 0x67, 0x62, 0x3b, // ghtColor[i].rgb;
	0x0a, 0x7d, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // .}else.;.}.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n color;.}.float
	0x20, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x29, 0x0a, //  DoFog(float w).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, // {.return clamp((
	0x77, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x2e, 0x78, 0x29, 0x2a, // w - u_fogEnd.x)*
	0x75, 0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x75, 0x5f, // u_fogRange.x, u_
	0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // fogDisable.x, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, // 0);.}.uniform fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x4d, 0x61, 0x74, 0x72, // oat4x4 u_texMatr
	0x69, 0x78, 0x3b, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, // ix;.Output main(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, //  float4 a_color0
	0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  : COLOR0 , floa
	0x74, 0x34, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3a, 0x20, 0x4e, 0x4f, // t4 a_normal : NO
	0x52, 0x4d, 0x41, 0x4c, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, // RMAL , float3 a_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, // position : POSIT
	0x49, 0x4f, 0x4e, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, // ION , float2 a_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, // excoord0 : TEXCO
	0x4f, 0x52, 0x44, 0x30, 0x29, 0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, // ORD0) { Output _
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // varying_; _varyi
	0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, // ng_.v_color0 = f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // loat4(1.0, 0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, // 0.0, 1.0);; _var
	0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ying_.v_texcoord
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 0 = float3(0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, // 0.0, 0.0);; _var
	0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // ying_.v_texcoord
	0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 1 = float2(0.0, 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // 0.0);;.{.float4 
	0x56, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2c, // V = mul(u_world,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float4(a_positi
	0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // on, 1.0));.float
	0x34, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, // 4 position = mul
	0x28, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x76, // (u_proj, mul(u_v
	0x69, 0x65, 0x77, 0x2c, 0x20, 0x56, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // iew, V));.float3
	0x78, 0x33, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, // x3 otherWorld = 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x29, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // (float3x3)u_worl
	0x64, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x20, 0x3d, 0x20, 0x6d, 0x75, // d;.float3 N = mu
	0x6c, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2c, 0x20, 0x61, 0x5f, // l(otherWorld, a_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x5f, 0x76, 0x61, // normal).xyz;._va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // rying_.v_texcoor
	0x64, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // d0.xy = a_texcoo
	0x72, 0x64, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, // rd0;._varying_.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x6d, 0x75, // _texcoord1 = (mu
	0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2c, 0x20, 0x66, // l(u_texMatrix, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x4e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, // loat4(N, 1.0))).
	0x78, 0x79, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, // xy;._varying_.v_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // color0 = a_color
	0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, // 0;._varying_.v_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, 0x20, 0x75, 0x5f, 0x61, // olor0.rgb += u_a
	0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x75, 0x5f, 0x73, // mbLight.rgb*(u_s
	0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, // urfProps.x);._va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, // rying_.v_color0.
	0x72, 0x67, 0x62, 0x20, 0x2b, 0x3d, 0x20, 0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, // rgb += DoDynamic
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x56, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x4e, 0x29, 0x2a, // Light(V.xyz, N)*
	0x28, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x7a, 0x29, 0x3b, // (u_surfProps.z);
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, // ._varying_.v_col
	0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x5f, 0x76, 0x61, 0x72, // or0 = clamp(_var
	0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2c, 0x20, // ying_.v_color0, 
	0x30, 0x2e, 0x30, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, // 0.0f, 1.0);._var
	0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x2a, // ying_.v_color0 *
	0x3d, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x5f, 0x76, // = u_matColor;._v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // arying_.v_texcoo
	0x72, 0x64, 0x30, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x28, 0x70, 0x6f, // rd0.z = DoFog(po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, // sition.w);._vary
	0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // ing_.gl_Position
	0x20, 0x3d, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x7d, 0x20, 0x72, //  = position;.} r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, // eturn _varying_;
	0x0a, 0x7d, 0x0a, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, // .}..........L...
	0x01, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....M...........
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xca, 0x31, 0x01, 0x38, // .............1.8
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0b, // ...........0....
	0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ................
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x10, 0x00, 0x00, 0x44, // ...............D
	0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x00, 0xf1, 0x12, // oDynamicLight...
	0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x00, 0x44, 0x6f, 0x46, 0x6f, 0x67, // ...........DoFog
	0x00, 0xf2, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x33, 0x44, 0x53, 0x48, // ...........D3DSH
	0x44, 0x52, 0x00, 0x74, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // DR.t............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x60, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ..`.............
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x10, 0x00, 0x00, 0x44, // ...............D
	0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x00, 0xf1, 0x12, // oDynamicLight...
	0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x00, 0x44, 0x6f, 0x46, 0x6f, 0x67, // ...........DoFog
	0x00, 0xf2, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x1a, // ................
	0x09, 0x2f, 0xf1, 0x70, 0x00, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // ./.p...<........
	0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x01, // ...........M....
	0x00, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x01, // ...]............
	0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x01, // ...1............
	0x00, 0x00, 0x00, 0x7d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x01, // ...}............
	0x00, 0x00, 0x00, 0x9d, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x01, // ...........m....
	0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x01, // ...9............
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......@.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ............@...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x30, // ...........$...0
	0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x60, // ...<...H...T...`
	0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x90, // ...l...x........
	0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x25, 0x11, 0x00, // .............%..
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x1a, // .........main...
	0x00, 0x51, 0x11, 0x10, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, // .Q..............
	0xff, 0xff, 0xff, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x00, 0x00, 0x1a, 0x00, 0x51, 0x11, 0x10, // ...u_view....Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // .......@.......u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, 0x10, 0x00, 0x00, 0x08, // _proj....Q......
	0x00, 0x00, 0x00, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x66, 0x6f, 0x67, // ...........u_fog
	0x45, 0x6e, 0x64, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, 0x10, 0x00, 0x00, 0x08, // End......Q......
	0x00, 0x00, 0x00, 0x90, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x66, 0x6f, 0x67, // ...........u_fog
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x11, 0x10, 0x00, 0x00, 0x08, // Range..".Q......
	0x00, 0x00, 0x00, 0xa0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x66, 0x6f, 0x67, // ...........u_fog
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x51, 0x11, 0x10, // Disable......Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, 0x10, 0x00, 0x00, 0x08, // _world...Q......
	0x00, 0x00, 0x00, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x61, 0x6d, 0x62, // ...........u_amb
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x13, 0x10, 0x00, 0x00, 0x08, // Light..".Q......
	0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ...........u_lig
	0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x00, 0x00, 0x00, 0x26, 0x00, 0x51, 0x11, 0x13, // htParams...&.Q..
	0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, // ...............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, // _lightDirection.
	0x00, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x13, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, // ...".Q..........
	0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, // .......u_lightCo
	0x6c, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, 0x10, 0x00, 0x00, 0x08, // lor......Q......
	0x00, 0x00, 0x00, 0x80, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x6d, 0x61, 0x74, // ...........u_mat
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x11, 0x10, 0x00, 0x00, 0x08, // Color....Q......
	0x00, 0x00, 0x00, 0x90, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x73, 0x75, 0x72, // ...........u_sur
	0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x10, 0x10, 0x00, 0x00, 0x08, // fProps...Q......
	0x00, 0x00, 0x00, 0xa0, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x74, 0x65, 0x78, // ...........u_tex
	0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Matrix..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x1a, 0x09, 0x2f, 0xf1, 0x00, // ............./..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x77, // ...............w
	0x09, 0x31, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x14, 0x8e, 0x0e, 0x00, 0x14, 0x6b, 0x0f, // .1............k.
	0x00, 0x01, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x58, // ...L... ...,...X
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x19, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x09, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, // .......t... ..`.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x09, 0x00, 0xf8, // ................
	0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x6e, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x2d, 0xba, 0x2e, 0xf1, 0x01, 0x00, 0x00, 0x00, 0x00, // none...-........
	0x00, 0x00, 0x00, 0x74, 0x09, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, // ...t... ..`.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x74, 0x09, 0x00, 0x00, 0x08, // ...........t....
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, // ................
	0xff, 0xff, 0xff, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, // ...............F
	0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, // :.dev.code.re3-u
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, // pstream.librw.sr
	0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x6d, // c.bgfx.shaders.m
	0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, // atfx_env_vs_bgfx
	0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x00, 0xfe, 0xef, 0xfe, 0xef, 0x01, // .inc.hlsl.......
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0c, 0x00, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x2e, 0x31, 0x01, 0x51, // .............1.Q
	0xd9, 0xbe, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x4d, 0xb2, 0x43, 0x1e, 0xfc, 0x95, 0x8c, 0x42, 0x8e, // ..^....M.C....B.
	0x38, 0xcd, 0xef, 0xc4, 0x22, 0x84, 0x0f, 0x78, 0x00, 0x00, 0x00, 0x2f, 0x4c, 0x69, 0x6e, 0x6b, // 8..."..x.../Link
	0x49, 0x6e, 0x66, 0x6f, 0x00, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x00, 0x2f, 0x73, 0x72, 0x63, // Info./names./src
	0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x2f, 0x73, 0x72, // /headerblock./sr
	0x63, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x66, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, // c/files/f:.dev.c
	0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, // ode.re3-upstream
	0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, // .librw.src.bgfx.
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x74, 0x66, 0x78, 0x5f, 0x65, 0x6e, // shaders.matfx_en
	0x76, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, // v_vs_bgfx.inc.hl
	0x73, 0x6c, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1e, // sl..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, // ..............."
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, // ............Q3..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x5f, 0x01, 0x00, 0x00, 0x68, // ..........._...h
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x14, // ........0.......
	0x30, 0x00, 0x00, 0x08, 0x16, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x28, // 0......X.......(
	0x00, 0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0x03, // .......,........
	0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x48, // ...O.../...N...H
	0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x32, // ...!.......1...2
	0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x36, // ...3...4...5...6
	0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x3a, // ...7...8...9...:
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3e, // ...;...<...=...>
	0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, // ...?...@...A...B
	0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x46, // ...C...D...E...F
	0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, // ...G..."........
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0d, // ................
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x11, // ................
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x15, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x19, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1d, // ................
	0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x23, // ........... ...#
	0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, // ...$...%...&...'
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, // ...(...)...*...+
	0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x07, // ...,...-........
	0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x4b, // ...0...I...J...K
	0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...M...L........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, // ...........P....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x02, // ................
	0x00, 0x01, 0x00, 0x10, 0x00, 0xe0, 0x02,                                                       // .......
};
