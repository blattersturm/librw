static const uint8_t im3d_vs_bgfx[39895] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0xf2, 0xe1, 0x06, 0x00, 0x06, 0x75, // VSH............u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, // _view.........u_
	0x70, 0x72, 0x6f, 0x6a, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, 0x66, // proj..@......u_f
	0x6f, 0x67, 0x45, 0x6e, 0x64, 0x02, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, // ogEnd.........u_
	0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x02, 0x00, 0x90, 0x00, 0x01, 0x00, 0x00, 0x00, // fogRange........
	0x0c, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x02, 0x00, 0xa0, // .u_fogDisable...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x00, 0xb0, // ......u_world...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x54, 0x9b, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x83, 0x18, 0x9c, // .....T...DXBC...
	0x81, 0x88, 0x2d, 0x6c, 0xa4, 0x9e, 0x60, 0x38, 0x6e, 0xce, 0x33, 0x08, 0x46, 0x01, 0x00, 0x00, // ..-l..`8n.3.F...
	0x00, 0x54, 0x9b, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, // .T.......0......
	0x00, 0x14, 0x01, 0x00, 0x00, 0x4c, 0x05, 0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, // .....L...ISGNh..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........P......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, // ................
	0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // .V..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........._......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, // ................
	0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // .COLOR.POSITION.
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x4e, 0x6c, 0x00, 0x00, // TEXCOORD.OSGNl..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........P......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, // ................
	0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .........b......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, // ................
	0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x43, 0x4f, 0x4c, // .SV_POSITION.COL
	0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x53, 0x48, 0x44, // OR.TEXCOORD..SHD
	0x52, 0x30, 0x04, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x59, 0x00, 0x00, // R0...@.......Y..
	0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, // .F. ........._..
	0x03, 0xf2, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, 0x10, // ........._...r..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, // ....._...2......
	0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .g.... .........
	0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, // .e.... ......e..
	0x03, 0x72, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, // .r ......h......
	0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x10, // .8..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, // .....F. ........
	0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x15, 0x10, // .8...........V..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, // .....F. ........
	0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, // .............F..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // .....F.......8..
	0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x1a, 0x10, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .F. ............
	0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, // .........F......
	0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, // .F.......8......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, // .....F. ........
	0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, // ..@.....?...?...
	0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // ?...?...........
	0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, // .F.......F......
	0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, // .8..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....F. ........
	0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, // .8...........V..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .....F. ........
	0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, // .............F..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // .....F.......8..
	0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .F. ............
	0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, // .........F......
	0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, // .F.......8......
	0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, // .............F. 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, // .....F.......F..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // .....8..........
	0x00, 0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .........F. ....
	0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, // .....8..........
	0x00, 0x56, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, // .V.......F. ....
	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, // .F.......F......
	0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, // .8..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // .....F. ........
	0x00, 0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, // .............F..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, // .....F.......8..
	0x08, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .F. ............
	0x07, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, // .........6......
	0x00, 0x36, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, // .6.......6......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....F.......6..
	0x05, 0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, // .2.......F......
	0x00, 0x3a, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, // .:...6..........
	0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, // .........6...B..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....... .A......
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, // .........B......
	0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, // .........*......
	0x00, 0x38, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, // .8...B.......*..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, // ....... ........
	0x00, 0x34, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, // .4...B.......*..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, // ....... ........
	0x00, 0x33, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, // .3...B.......*..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x36, 0x00, 0x00, // ......@.....?6..
	0x05, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, // .B.......*......
	0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x03, 0x10, // .6.... .........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, // .....6.... .....
	0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, // .F.......6...2 .
	0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .....F.......6..
	0x05, 0x42, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, // .B ......*......
	0x00, 0x3e, 0x00, 0x00, 0x01, 0x53, 0x50, 0x44, 0x42, 0x00, 0x96, 0x00, 0x00, 0x4d, 0x69, 0x63, // .>...SPDB....Mic
	0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x43, 0x2f, 0x43, 0x2b, 0x2b, 0x20, 0x4d, 0x53, 0x46, // rosoft C/C++ MSF
	0x20, 0x37, 0x2e, 0x30, 0x30, 0x0d, 0x0a, 0x1a, 0x44, 0x53, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, //  7.00...DS......
	0x00, 0x02, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // .....K...P......
	0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .I..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x00, 0x00, // .............8..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, // . ...<..........
	0xff, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x2e, 0x31, // ...............1
	0x01, 0x51, 0xd9, 0xbe, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x16, 0x01, 0x30, 0xcc, 0xd7, 0x64, 0xea, // .Q..^......0..d.
	0x43, 0xa8, 0x97, 0xd3, 0x24, 0xc7, 0x25, 0xac, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // C...$.%.u.......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......Q3........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x73, 0x54, // .............tsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, // oFloat(uint2 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // t(_x); }.float3 
	0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, // intBitsToFloat(u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // int3 _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // n asfloat(_x); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // .float4 intBitsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, // oFloat(uint4 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, // t(_x); }.float u
	0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, // intBitsToFloat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  asfloat(_x); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // float2 uintBitsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, // oFloat(uint2 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // t(_x); }.float3 
	0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, // uintBitsToFloat(
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // uint3 _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // rn asfloat(_x); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, // }.float4 uintBit
	0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, // sToFloat(uint4 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, // x) { return asfl
	0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, // oat(_x); }.uint 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, // floatBitsToUint(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // rn asuint(_x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, // .uint2 floatBits
	0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, // ToUint(float2 _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, // ) { return asuin
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, // t(_x); }.uint3 f
	0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0xc6, 0x5a, 0x00, // loatBitsToUin.Z.
	0x00, 0x4c, 0xe8, 0x03, 0x00, 0x75, 0x83, 0x01, 0x00, 0x74, 0x0c, 0x03, 0x00, 0x83, 0xf2, 0x02, // .L...u...t......
	0x00, 0xe2, 0x7b, 0x02, 0x00, 0x6d, 0x18, 0x01, 0x00, 0x89, 0x6f, 0x02, 0x00, 0x2a, 0xe5, 0x01, // ..{..m....o..*..
	0x00, 0x92, 0xe6, 0x03, 0x00, 0x22, 0x0c, 0x00, 0x00, 0x67, 0x9f, 0x01, 0x00, 0x99, 0xbd, 0x03, // ....."...g......
	0x00, 0x21, 0xb7, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .!..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x2f, 0x20, // .............// 
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, // shaderc command 
	0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, // line:.// F:.dev.
	0x63, 0x6f, 0x64, 0x65, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, // code.bgfx..build
	0x5c, 0x77, 0x69, 0x6e, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x39, 0x5c, 0x62, 0x69, // .win64_vs2019.bi
	0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, // n.shadercRelease
	0x2e, 0x65, 0x78, 0x65, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, 0x66, 0x20, // .exe --debug -f 
	0x69, 0x6d, 0x33, 0x64, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x2d, 0x6f, 0x20, 0x69, 0x6d, 0x33, // im3d.vert -o im3
	0x64, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x20, 0x2d, 0x2d, // d_vs_bgfx.inc --
	0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, 0x2d, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x20, 0x76, 0x20, 0x2d, // bin2c --type v -
	0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, // -platform window
	0x73, 0x20, 0x2d, 0x2d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x76, 0x73, 0x5f, 0x34, // s --profile vs_4
	0x5f, 0x30, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, // _0..struct Outpu
	0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, // t.{.float4 gl_Po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, // sition : SV_POSI
	0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, // TION;.float4 v_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x3b, 0x0a, 0x66, // olor0 : COLOR;.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // loat3 v_texcoord
	0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x7d, // 0 : TEXCOORD0;.}
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // ;.float intBitsT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // oFloat(int _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, // _x); }.float2 in
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t2 _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat3 intBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint3 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  return asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, // _x); }.float4 in
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // loat uintBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // loat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, // return asfloat(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, // x); }.float2 uin
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, // tBitsToFloat(uin
	0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t2 _x) { return 
	0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // asfloat(_x); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // loat3 uintBitsTo
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, // Float(uint3 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, // { return asfloat
	0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // (_x); }.float4 u
	0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, // intBitsToFloat(u
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // int4 _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // n asfloat(_x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // .uint floatBitsT
	0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // oUint(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, // _x); }.uint2 flo
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, // atBitsToUint(flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at2 _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, //  asuint(_x); }.u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // int3 floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, // Uint(float3 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, // { return asuint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, // _x); }.uint4 flo
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, // atBitsToUint(flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _x) { return
	0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, //  asuint(_x); }.i
	0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, // nt floatBitsToIn
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // turn asint(_x); 
	0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, // }.int2 floatBits
	0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, // ToInt(float2 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, //  { return asint(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _x); }.int3 floa
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // tBitsToInt(float
	0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // 3 _x) { return a
	0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, // sint(_x); }.int4
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, //  floatBitsToInt(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float4 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // urn asint(_x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, // .uint bitfieldRe
	0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // verse(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, //  return reverseb
	0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, // its(_x); }.uint2
	0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, //  bitfieldReverse
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (uint2 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, // urn reversebits(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, // _x); }.uint3 bit
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, // fieldReverse(uin
	0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t3 _x) { return 
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, // reversebits(_x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, //  }.uint4 bitfiel
	0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, // dReverse(uint4 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, // x) { return reve
	0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // rsebits(_x); }.u
	0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, // int packHalf2x16
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // (float2 _x).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, // turn (f32tof16(_
	0x78, 0x2e, 0x79, 0x29, 0x3c, 0x3c, 0x31, 0x36, 0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, // x.y)<<16) | f32t
	0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // of16(_x.x);.}.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, // oat2 unpackHalf2
	0x78, 0x31, 0x36, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // x16(uint _x).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, // eturn float2(f16
	0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, // tof32(_x & 0xfff
	0x66, 0x29, 0x2c, 0x20, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, // f), f16tof32(_x 
	0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, // >> 16) );.}.stru
	0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // ct BgfxSampler2D
	0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, // .{.SamplerState 
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // m_sampler;.Textu
	0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, // re2D m_texture;.
	0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, // };.struct BgfxIS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // ampler2D.{.Textu
	0x72, 0x65, 0x32, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // re2D<int4> m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, // BgfxUSampler2D.{
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, // .Texture2D<uint4
	0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // > m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, // er2DArray.{.Samp
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // lerState m_sampl
	0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // er;.Texture2DArr
	0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // ay m_texture;.};
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // .struct BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, // ler2DShadow.{.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, // mplerComparisonS
	0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, // tate m_sampler;.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // Texture2D m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // gfxSampler2DArra
	0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // yShadow.{.Sample
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, // rComparisonState
	0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, //  m_sampler;.Text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ure2DArray m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, // BgfxSampler3D.{.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // SamplerState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, // ampler;.Texture3
	0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // D m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, // struct BgfxISamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, // ler3D.{.Texture3
	0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // D<int4> m_textur
	0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, // e;.};.struct Bgf
	0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, // xUSampler3D.{.Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, // xture3D<uint4> m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, // _texture;.};.str
	0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, // uct BgfxSamplerC
	0x75, 0x62, 0x65, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, // ube.{.SamplerSta
	0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, // te m_sampler;.Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // xtureCube m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, // gfxSamplerCubeSh
	0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, // adow.{.SamplerCo
	0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, // mparisonState m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sampler;.Texture
	0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, // Cube m_texture;.
	0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // };.struct BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, // mpler2DMS.{.Text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4d, 0x53, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, // ure2DMS<float4> 
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, // m_texture;.};.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // 2D(BgfxSampler2D
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 2 _coord).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, // xture.Sample(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // mpler.m_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  _coord);.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // t4 bgfxTexture2D
	0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // Bias(BgfxSampler
	0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 2D _sampler, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at2 _coord, floa
	0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t _bias).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, // ture.SampleBias(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, // er, _coord, _bia
	0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // s);.}.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, // xTexture2DLod(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, // pler, float2 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, // ord, float _leve
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // l).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ampleLevel(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ler.m_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, // coord, _level);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, // ture2DLodOffset(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, // BgfxSampler2D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // ampler, float2 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, // coord, float _le
	0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, // vel, int2 _offse
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // t).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ampleLevel(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ler.m_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, // coord, _level, _
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // offset);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, // 4 bgfxTexture2DP
	0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // roj(BgfxSampler2
	0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // D _sampler, floa
	0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // t3 _coord).{.flo
	0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // at2 coord = _coo
	0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, // rd.xy * rcp(_coo
	0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // rd.z);.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .Sample(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, // .m_sampler, coor
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // d);.}.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, // xTexture2DProj(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, // mpler, float4 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, // oord).{.float2 c
	0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, // oord = _coord.xy
	0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, //  * rcp(_coord.w)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // le(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, // mpler, coord);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ure2DGrad(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float2 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, //  float2 _dPdx, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // loat2 _dPdy).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, // _texture.SampleG
	0x72, 0x61, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, // rad(_sampler.m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, // ampler, _coord, 
	0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, // _dPdx, _dPdy);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // ure2DArray(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, // ampler2DArray _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // coord).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // re.Sample(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, // bgfxTexture2DArr
	0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ayLod(BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // r2DArray _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float3 _coord
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // , float _lod).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // Level(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // , _lod);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, // 4 bgfxTexture2DA
	0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, // rrayLodOffset(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 3 _coord, float 
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, // _level, int2 _of
	0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // fset).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // , _coord, _level
	0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // , _offset);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, // oat bgfxShadow2D
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, // (BgfxSampler2DSh
	0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // adow _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat3 _coord).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, // CmpLevelZero(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // mpler.m_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, //  _coord.xy, _coo
	0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // rd.z);.}.float b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, // BgfxSampler2DSha
	0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // dow _sampler, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // oat4 _coord).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, // loat3 coord = _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, // oord.xyz * rcp(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // coord.w);.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, // ure.SampleCmpLev
	0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // elZero(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, // m_sampler, coord
	0x2e, 0x78, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, // .xy, coord.z);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, // .float4 bgfxShad
	0x6f, 0x77, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ow2DArray(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, // mpler2DArrayShad
	0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // ow _sampler, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at4 _coord).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, // texture.SampleCm
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // pLevelZero(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ler.m_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // coord.xyz, _coor
	0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // d.w);.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, // gfxTexture3D(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // rd).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // Sample(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // d);.}.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, // xTexture3DLod(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler3D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, // ord, float _leve
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // l).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ampleLevel(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ler.m_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, // coord, _level);.
	0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // }.int4 bgfxTextu
	0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // re3D(BgfxISample
	0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r3D _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, // oat3 _coord).{.u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, // int3 size;._samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, // ler.m_texture.Ge
	0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, // tDimensions(size
	0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, // .x, size.y, size
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // .z);.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, // pler.m_texture.L
	0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, // oad(int4(_coord 
	0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // * size, 0) );.}.
	0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // uint4 bgfxTextur
	0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // e3D(BgfxUSampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 3D _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, // at3 _coord).{.ui
	0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // nt3 size;._sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, // er.m_texture.Get
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, // Dimensions(size.
	0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, // x, size.y, size.
	0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // z);.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, // ler.m_texture.Lo
	0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, // ad(int4(_coord *
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  size, 0) );.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // loat4 bgfxTextur
	0x65, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // eCube(BgfxSample
	0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // rCube _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // e(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, // pler, _coord);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, // ureCubeBias(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, // SamplerCube _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, // ord, float _bias
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // mpleBias(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // ord, _bias);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // loat4 bgfxTextur
	0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // eCubeLod(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // plerCube _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float3 _coord
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, // , float _level).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // leLevel(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // rd, _level);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, // loat bgfxShadowC
	0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, // ube(BgfxSamplerC
	0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ubeShadow _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float4 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, // ampleCmpLevelZer
	0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // o(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, // pler, _coord.xyz
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // , _coord.w);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, // loat4 bgfxTexelF
	0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // etch(BgfxSampler
	0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, // 2D _sampler, int
	0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, // 2 _coord, int _l
	0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // od).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // Load(int3(_coord
	0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _lod) );.}.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, // at4 bgfxTexelFet
	0x63, 0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // chOffset(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler2D _sampler,
	0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, //  int2 _coord, in
	0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, // t _lod, int2 _of
	0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // fset).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, // e.Load(int3(_coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, // rd, _lod), _offs
	0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, // et );.}.float2 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, // gfxTextureSize(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // mpler, int _lod)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, // .{.float2 result
	0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ;._sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, // ture.GetDimensio
	0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, // ns(result.x, res
	0x75, 0x6c, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // ult.y);.return r
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // esult;.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, // bgfxTextureGathe
	0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // r(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // _sampler, float2
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  _coord).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, // ture.GatherRed(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // r, _coord );.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // loat4 bgfxTextur
	0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, // eGatherOffset(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, // pler, float2 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, // ord, int2 _offse
	0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // t).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, // pler.m_texture.G
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // atherRed(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, // ord, _offset );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // tureGather(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, // ampler2DArray _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // coord).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, // re.GatherRed(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // mpler.m_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, //  _coord );.}.int
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, // 4 bgfxTexelFetch
	0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // (BgfxISampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, // _sampler, int2 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // coord, int _lod)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, // er.m_texture.Loa
	0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // d(int3(_coord, _
	0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, // lod) );.}.uint4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, // bgfxTexelFetch(B
	0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, // gfxUSampler2D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, // ampler, int2 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ord, int _lod).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, // int3(_coord, _lo
	0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // d) );.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, // gfxTexelFetch(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, // fxSampler2DMS _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, // ampler, int2 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ord, int _sample
	0x49, 0x64, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // Idx).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, // .Load(_coord, _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // ampleIdx);.}.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, // at4 bgfxTexelFet
	0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // ch(BgfxSampler2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // Array _sampler, 
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int3 _coord, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _lod).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, // re.Load(int4(_co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ord, _lod) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, // float4 bgfxTexel
	0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Fetch(BgfxSample
	0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, // r3D _sampler, in
	0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, // t3 _coord, int _
	0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // lod).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // .Load(int4(_coor
	0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // d, _lod) );.}.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat3 bgfxTexture
	0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // Size(BgfxSampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, // 3D _sampler, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //  _lod).{.float3 
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // result;._sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, // .m_texture.GetDi
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, // mensions(result.
	0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, // x, result.y, res
	0x75, 0x6c, 0x74, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // ult.z);.return r
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // esult;.}.float3 
	0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // instMul(float3 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, // vec, float3x3 _m
	0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, // tx) { return mul
	0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_mtx, _vec); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, // float3 instMul(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, // loat3x3 _mtx, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // oat3 _vec) { ret
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, // urn mul(_vec, _m
	0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, // tx); }.float4 in
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, // stMul(float4 _ve
	0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, // c, float4x4 _mtx
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, // ) { return mul(_
	0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // mtx, _vec); }.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, // oat4 instMul(flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at4x4 _mtx, floa
	0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // t4 _vec) { retur
	0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, // n mul(_vec, _mtx
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, // ); }.bool2 lessT
	0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // han(float2 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat2 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, // rn _a < _b; }.bo
	0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, // ol3 lessThan(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _a, float3 _
	0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, // b) { return _a <
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, //  _b; }.bool4 les
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, // sThan(float4 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float4 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, // turn _a < _b; }.
	0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, // bool2 lessThanEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float2 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat2 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a <= _b; }.b
	0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, // ool3 lessThanEqu
	0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // al(float3 _a, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, // n _a <= _b; }.bo
	0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, // ol4 lessThanEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float4 _a, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a <= _b; }.boo
	0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, // l2 greaterThan(f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // loat2 _a, float2
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, //  > _b; }.bool3 g
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // reaterThan(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, // 3 _a, float3 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, //  { return _a > _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, // b; }.bool4 great
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, // erThan(float4 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float4 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a > _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // .bool2 greaterTh
	0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // anEqual(float2 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float2 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, // return _a >= _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, //  }.bool3 greater
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ThanEqual(float3
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float3 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, // { return _a >= _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, // b; }.bool4 great
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // erThanEqual(floa
	0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // t4 _a, float4 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, // ) { return _a >=
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, //  _b; }.bool2 not
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, // Equal(float2 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float2 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // turn _a != _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, // .bool3 notEqual(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _a, float
	0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 3 _b) { return _
	0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, // a != _b; }.bool4
	0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  notEqual(float4
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float4 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, // { return _a != _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, // b; }.bool2 equal
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (float2 _a, floa
	0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t2 _b) { return 
	0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, // _a == _b; }.bool
	0x33, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // 3 equal(float3 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float3 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, // return _a == _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, //  }.bool4 equal(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _a, float4
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  == _b; }.float 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // mix(float _a, fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, // oat _b, float _t
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, // ) { return lerp(
	0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // _a, _b, _t); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // loat2 mix(float2
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, //  _a, float2 _b, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float2 _t) { ret
	0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, // urn lerp(_a, _b,
	0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, //  _t); }.float3 m
	0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // ix(float3 _a, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // oat3 _b, float3 
	0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, // _t) { return ler
	0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, // p(_a, _b, _t); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, // .float4 mix(floa
	0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // t4 _a, float4 _b
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float4 _t) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, // eturn lerp(_a, _
	0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // b, _t); }.float 
	0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // mod(float _a, fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, //  _a - _b * floor
	0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // (_a / _b); }.flo
	0x61, 0x74, 0x32, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // at2 mod(float2 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float2 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, // return _a - _b *
	0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, //  floor(_a / _b);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, //  }.float3 mod(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // oat3 _a, float3 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, // - _b * floor(_a 
	0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // / _b); }.float4 
	0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // mod(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat4 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // rn _a - _b * flo
	0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // or(_a / _b); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // loat2 vec2_splat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // urn float2(_x, _
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, // x); }.float3 vec
	0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, // 3_splat(float _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ) { return float
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, // .float4 vec4_spl
	0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // at(float _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, // eturn float4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uint2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uint2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uint3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, // { return uint3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, // x, _x, _x); }.ui
	0x6e, 0x74, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // nt4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uint4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _x, _x); }.float
	0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, // 4x4 mtxFromRows(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 _0, float
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, // 4 _1, float4 _2,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  float4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, // turn float4x4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, // , _1, _2, _3);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, // .float4x4 mtxFro
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, // mCols(float4 _0,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  float4 _1, floa
	0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, // t4 _2, float4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, // ).{.return trans
	0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, // pose(float4x4(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, // , _1, _2, _3) );
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, // .}.float3x3 mtxF
	0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // romRows(float3 _
	0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, // 0, float3 _1, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _2).{.retur
	0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // n float3x3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 1, _2);.}.float3
	0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, // x3 mtxFromCols(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // loat3 _0, float3
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, //  _1, float3 _2).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, // se(float3x3(_0, 
	0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, // _1, _2) );.}.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // tic float4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // wRect;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, // oat4 u_viewTexel
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, // x4 u_view;.stati
	0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // c float4x4 u_inv
	0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, // View;.uniform fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, // oat4x4 u_proj;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // tatic float4x4 u
	0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // _invProj;.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, //  float4x4 u_view
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, // Proj;.static flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, // at4x4 u_invViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // roj;.static floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, // t4x4 u_model[32]
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // ;.static float4x
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, // 4 u_modelView;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // tatic float4x4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // _modelViewProj;.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // static float4 u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, // alphaRef4;.stati
	0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, // c float2 u_alpha
	0x52, 0x65, 0x66, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // Ref;.static floa
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x75, // t4 u_fogStart;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // niform float4 u_
	0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // fogEnd;.uniform 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, // float4 u_fogRang
	0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // e;.uniform float
	0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x0a, // 4 u_fogDisable;.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // static float4 u_
	0x66, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // fogColor;.unifor
	0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, // m float4x4 u_wor
	0x6c, 0x64, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ld;.static float
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6d, 0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x73, 0x74, // 4 u_ambLight;.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, // atic float4 u_li
	0x67, 0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, // ghtParams[8];.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, // atic float4 u_li
	0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, // ghtPosition[8];.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // static float4 u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, // lightDirection[8
	0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ];.static float4
	0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x38, 0x5d, //  u_lightColor[8]
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // ;.static float4 
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // u_matColor;.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, // ic float4 u_surf
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x44, 0x6f, // Props;.float3 Do
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x66, 0x6c, 0x6f, // DynamicLight(flo
	0x61, 0x74, 0x33, 0x20, 0x56, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x29, // at3 V, float3 N)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .{.float3 color 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // = float3(0.0, 0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, // 0, 0.0);.for(int
	0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x38, 0x3b, 0x20, 0x69, //  i = 0; i < 8; i
	0x2b, 0x2b, 0x29, 0x7b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, // ++){.if(u_lightP
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, // arams[i].x == 0.
	0x30, 0x29, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, // 0).break;.if(u_l
	0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, // ightParams[i].x 
	0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, // == 1.0){.float l
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x64, 0x6f, 0x74, 0x28, //  = max(0.0, dot(
	0x4e, 0x2c, 0x20, 0x2d, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, // N, -u_lightDirec
	0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, // tion[i].xyz));.c
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, 0x3d, 0x20, 0x6c, 0x2a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // olor += l*u_ligh
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x69, 0x5d, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, // tColor[i].rgb;.}
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x3b, 0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // else.;.}.return 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x44, // color;.}.float D
	0x6f, 0x46, 0x6f, 0x67, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x29, 0x0a, 0x7b, 0x0a, // oFog(float w).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x77, 0x20, // return clamp((w 
	0x2d, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, 0x2e, 0x78, 0x29, 0x2a, 0x75, 0x5f, // - u_fogEnd.x)*u_
	0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x75, 0x5f, 0x66, 0x6f, // fogRange.x, u_fo
	0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // gDisable.x, 1.0)
	0x3b, 0x0a, 0x7d, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, // ;.}.Output main(
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, //  float4 a_color0
	0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  : COLOR0 , floa
	0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, // t3 a_position : 
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // POSITION , float
	0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, // 2 a_texcoord0 : 
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x29, 0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, // TEXCOORD0) { Out
	0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, // put _varying_; _
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // varying_.v_color
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, // 0 = float4(1.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, // 0.0, 0.0, 1.0);;
	0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, //  _varying_.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // coord0 = float3(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, // 0.0, 0.0, 0.0);;
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x75, // .{.float4 V = mu
	0x6c, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l(u_world, float
	0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, // 4(a_position, 1.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x56, 0x20, 0x3d, // 0));.float4 cV =
	0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2c, 0x20, 0x56, 0x29, 0x3b, //  mul(u_view, V);
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, // ._varying_.gl_Po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x70, // sition = mul(u_p
	0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x63, 0x56, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // roj, cV);._varyi
	0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, // ng_.v_color0 = a
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // _color0;._varyin
	0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, // g_.v_texcoord0.x
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, // y = a_texcoord0;
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // ._varying_.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x46, 0x6f, 0x67, // coord0.z = DoFog
	0x28, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, // (_varying_.gl_Po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, // sition.w);.} ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, // urn _varying_;.}
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xef, 0xfe, // ................
	0xef, 0x01, 0x00, 0x00, 0x00, 0xa3, 0x2e, 0x00, 0x00, 0x00, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, // ..........F:.dev
	0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, // .code.re3-upstre
	0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, // am.librw.src.bgf
	0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x69, 0x6d, 0x33, 0x64, 0x5f, 0x76, // x.shaders.im3d_v
	0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, // s_bgfx.inc.hlsl.
	0x00, 0x66, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, // .f:.dev.code.re3
	0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, // -upstream.librw.
	0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, // src.bgfx.shaders
	0x5c, 0x69, 0x6d, 0x33, 0x64, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, // .im3d_vs_bgfx.in
	0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x2f, 0x2f, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, // c.hlsl.// shader
	0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, // c command line:.
	0x2f, 0x2f, 0x20, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x62, // // F:.dev.code.b
	0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5c, 0x77, 0x69, 0x6e, 0x36, 0x34, // gfx..build.win64
	0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x39, 0x5c, 0x62, 0x69, 0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, // _vs2019.bin.shad
	0x65, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x20, 0x2d, // ercRelease.exe -
	0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, 0x66, 0x20, 0x69, 0x6d, 0x33, 0x64, 0x2e, 0x76, // -debug -f im3d.v
	0x65, 0x72, 0x74, 0x20, 0x2d, 0x6f, 0x20, 0x69, 0x6d, 0x33, 0x64, 0x5f, 0x76, 0x73, 0x5f, 0x62, // ert -o im3d_vs_b
	0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, // gfx.inc --bin2c 
	0x2d, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x20, 0x76, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, // --type v --platf
	0x6f, 0x72, 0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x2d, 0x70, 0x72, // orm windows --pr
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x0a, 0x0a, 0x73, 0x74, // ofile vs_4_0..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // ruct Output.{.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // oat4 gl_Position
	0x20, 0x3a, 0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, //  : SV_POSITION;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, // float4 v_color0 
	0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // : COLOR;.float3 
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, // v_texcoord0 : TE
	0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // XCOORD0;.};.floa
	0x74, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, // t intBitsToFloat
	0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // (int _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // n asfloat(_x); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x1b, 0xe2, 0x30, // .float2 intBi..0
	0x01, 0x80, 0x00, 0x00, 0x00, 0x03, 0xd0, 0x22, 0x10, 0xe3, 0x2a, 0xd6, 0x01, 0x01, 0x00, 0x00, // ......."..*.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x48, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x1b, 0xe2, 0x30, 0x01, 0x3e, 0x04, 0x86, // .H...(.....0.>..
	0x58, 0x14, 0x2e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, // X........G...H..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x42, 0x00, 0x3c, 0x11, 0x10, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x01, 0x00, 0x01, // .B.<............
	0x00, 0xac, 0x4c, 0x0a, 0x00, 0x01, 0x00, 0x01, 0x00, 0xac, 0x4c, 0x4d, 0x69, 0x63, 0x72, 0x6f, // ..L.......LMicro
	0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, // soft (R) HLSL Sh
	0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x31, 0x30, // ader Compiler 10
	0x2e, 0x31, 0x00, 0x00, 0x00, 0x36, 0x00, 0x3d, 0x11, 0x01, 0x68, 0x6c, 0x73, 0x6c, 0x46, 0x6c, // .1...6.=..hlslFl
	0x61, 0x67, 0x73, 0x00, 0x30, 0x78, 0x31, 0x30, 0x30, 0x35, 0x00, 0x68, 0x6c, 0x73, 0x6c, 0x54, // ags.0x1005.hlslT
	0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x76, 0x73, 0x5f, 0x34, 0x5f, 0x30, 0x00, 0x68, 0x6c, 0x73, // arget.vs_4_0.hls
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x2a, 0x00, 0x10, // lEntry.main..*..
	0x11, 0x00, 0x00, 0x00, 0x00, 0x88, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x03, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x6c, 0x00, 0x00, // .............l..
	0x00, 0x01, 0x00, 0xa0, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, // ....main...>....
	0x00, 0x09, 0x00, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, // ...a_color0.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, // ...........P....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x00, 0x00, 0x00, // .....l..........
	0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, // ...P.........l..
	0x00, 0x01, 0x00, 0xc4, 0x03, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, // ...........P....
	0x00, 0x08, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x08, 0x00, 0x00, // .....l..........
	0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, // ...P.........l..
	0x00, 0x01, 0x00, 0xc4, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, // .........2.>....
	0x00, 0x09, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, // ...a_position...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // ...............P
	0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .........l......
	0x03, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, // .......P........
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .l.............P
	0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .........l......
	0x03, 0x18, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x02, 0x10, 0x00, 0x00, 0x09, 0x00, 0x61, // .....2.>.......a
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _texcoord0......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, // ...........P....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x20, 0x00, 0x00, // .....l....... ..
	0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, // ...P.........l..
	0x00, 0x01, 0x00, 0xc4, 0x03, 0x24, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x06, 0x10, 0x00, // .....$...:.>....
	0x00, 0x88, 0x00, 0x3c, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // ...<main return 
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // value>..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, // .......P..... ..
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .l....... .....P
	0x11, 0x02, 0x00, 0x05, 0x00, 0x24, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .....$...l......
	0x03, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x28, 0x00, 0x04, // .$.....P.....(..
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x28, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .l.......(.....P
	0x11, 0x02, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .........l......
	0x03, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, // .......P........
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .l.............P
	0x11, 0x02, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .........l......
	0x03, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, // .......P........
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x1c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .l.............P
	0x11, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .........l......
	0x03, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, // .......P........
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .l.............P
	0x11, 0x02, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, // .........l......
	0x03, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, // .......P........
	0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc4, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, // .l...........2.>
	0x11, 0x05, 0x10, 0x00, 0x00, 0x08, 0x00, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, // ......._varying_
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0xf4, 0x02, 0x00, // ...P............
	0x00, 0x01, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ...<.......P....
	0x00, 0x00, 0x00, 0x04, 0x00, 0xf4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x3c, 0x01, 0x04, 0x00, 0x00, // ...........<....
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xf4, 0x02, 0x00, // ...P............
	0x00, 0x01, 0x00, 0x3c, 0x01, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ...<.......P....
	0x00, 0x08, 0x00, 0x04, 0x00, 0xf4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x3c, 0x01, 0x0c, 0x00, 0x00, // ...........<....
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x08, 0x03, 0x00, // ...P............
	0x00, 0x01, 0x00, 0x28, 0x01, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ...(.......P....
	0x00, 0x14, 0x00, 0x04, 0x00, 0x08, 0x03, 0x00, 0x00, 0x01, 0x00, 0x28, 0x01, 0x14, 0x00, 0x00, // ...........(....
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0x08, 0x03, 0x00, // ...P............
	0x00, 0x01, 0x00, 0x28, 0x01, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ...(.......P....
	0x00, 0x1c, 0x00, 0x04, 0x00, 0x08, 0x03, 0x00, 0x00, 0x01, 0x00, 0x28, 0x01, 0x1c, 0x00, 0x00, // ...........(....
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0x1c, 0x03, 0x00, // ...P..... ......
	0x00, 0x01, 0x00, 0x14, 0x01, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ..... .....P....
	0x00, 0x24, 0x00, 0x04, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x01, 0x00, 0x14, 0x01, 0x24, 0x00, 0x00, // .$...........$..
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x28, 0x00, 0x04, 0x00, 0xdc, 0x03, 0x00, // ...P.....(......
	0x00, 0x01, 0x00, 0x54, 0x00, 0x28, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, // ...T.(...*.>....
	0x00, 0x08, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...V............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, // .......P........
	0x00, 0x4c, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .L.............P
	0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, // .........L......
	0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, // .......P........
	0x00, 0x4c, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, // .L.............P
	0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, // .........L......
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x08, 0x00, 0x63, // .....*.>.......c
	0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // V...............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x20, 0x02, 0x00, // ...P......... ..
	0x00, 0x01, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ...........P....
	0x00, 0x04, 0x00, 0x04, 0x00, 0x20, 0x02, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x04, 0x00, 0x00, // ..... ..........
	0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x20, 0x02, 0x00, // ...P......... ..
	0x00, 0x01, 0x00, 0xb8, 0x00, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, // ...........P....
	0x00, 0x0c, 0x00, 0x04, 0x00, 0x20, 0x02, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x00, 0x0c, 0x00, 0x00, // ..... ..........
	0x00, 0x36, 0x00, 0x4d, 0x11, 0x80, 0x00, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, // .6.M............
	0x00, 0x07, 0x00, 0x09, 0x01, 0x0d, 0x41, 0x06, 0x02, 0x0c, 0x80, 0x94, 0x82, 0xc8, 0x08, 0x00, // ......A.........
	0x09, 0x0f, 0x0d, 0x1c, 0x01, 0x83, 0x34, 0x03, 0x00, 0x09, 0x0e, 0x0d, 0x2a, 0x03, 0x38, 0x09, // ......4.....*.8.
	0x08, 0x0d, 0x40, 0x0c, 0x3c, 0x20, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x09, 0x10, 0x00, // ..@.< ...:.>....
	0x00, 0x80, 0x00, 0x3c, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ...<DoFog return
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  value>.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, // .......P........
	0x00, 0xc8, 0x03, 0x00, 0x00, 0x01, 0x00, 0x14, 0x00, 0x28, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x3e, // .........(...*.>
	0x11, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .@.....w........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x01, // ...........P....
	0x00, 0x00, 0x00, 0x04, 0x00, 0x34, 0x03, 0x00, 0x00, 0x01, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, // .....4..........
	0x00, 0x02, 0x00, 0x4e, 0x11, 0x02, 0x00, 0x06, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, // ...N............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x01, 0x49, 0x17, 0x7e, 0x68, 0xa4, 0x6b, 0xea, 0x5b, 0xd5, // .......I.~h.k.[.
	0xb4, 0x58, 0x4a, 0x92, 0xd4, 0x7a, 0x9f, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x78, 0x03, 0x00, // .XJ..z.......x..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x30, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // .........0......
	0x00, 0x48, 0x00, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, // .H...l...l...N..
	0x80, 0x6c, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, // .l...N.......N..
	0x80, 0x8c, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, // .....N.......N..
	0x80, 0xac, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, // .....N.......N..
	0x80, 0xc8, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, // .....N.......N..
	0x80, 0xe8, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, // .....N.......N..
	0x80, 0x04, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, // .....N...0...N..
	0x80, 0x30, 0x01, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, // .0...N...L...O..
	0x80, 0x4c, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, // .L...O...l...O..
	0x80, 0x6c, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, // .l...O.......O..
	0x80, 0x8c, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, // .....O.......O..
	0x80, 0xa8, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, // .....O.......O..
	0x80, 0xc8, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0xe4, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, // .....O.......O..
	0x80, 0xe4, 0x01, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, // .....O.......O..
	0x80, 0x04, 0x02, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // .....O... ...P..
	0x80, 0x20, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // . ...P...@...P..
	0x80, 0x40, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // .@...P...`...P..
	0x80, 0x60, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x7c, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // .`...P...|...P..
	0x80, 0x7c, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0x9c, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // .|...P.......P..
	0x80, 0x9c, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // .....P.......P..
	0x80, 0xb8, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, // .....P.......P..
	0x80, 0xd8, 0x02, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, // .....P.......Q..
	0x80, 0xf4, 0x02, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, // .....Q.......R..
	0x80, 0x08, 0x03, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .....R.......S..
	0x80, 0x1c, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .....S... ...S..
	0x80, 0x20, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // . ...S...4...S..
	0x80, 0x34, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .4...S...P...S..
	0x80, 0x50, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .P...S...l...S..
	0x80, 0x6c, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .l...S.......S..
	0x80, 0x8c, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0xac, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .....S.......S..
	0x80, 0xac, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0xc8, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, // .....S.......S..
	0x80, 0xc8, 0x03, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0x54, 0x01, 0x00, // .....S.......T..
	0x80, 0xdc, 0x03, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x54, 0x01, 0x00, // .....T.......T..
	0x80, 0xf0, 0x03, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, // .....T.......T..
	0x80, 0x04, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, // .....T.......T..
	0x80, 0x18, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, // .....T...,...T..
	0x80, 0x2c, 0x04, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, // .,...T.....1...0
	0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, // ...1...0...1...0
	0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, // ...1...0...1...0
	0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x01, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x30, // ...1...0...1...0
	0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, 0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, // ................
	0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, 0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, // ................
	0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, 0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, // ................
	0x00, 0x01, 0x00, 0x1b, 0x00, 0x0d, 0x00, 0x1a, 0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, // ...........(...'
	0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, // ...(...'...(...'
	0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, // ...(...'...(...'
	0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, 0x00, 0x01, 0x00, 0x28, 0x00, 0x19, 0x00, 0x27, // ...(...'...(...'
	0x00, 0x01, 0x00, 0x1e, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x01, 0x00, 0x27, 0x00, 0x01, 0x00, 0x26, // ...........'...&
	0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, // ...9...8...9...8
	0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, // ...9...8...9...8
	0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, // ...9...8...9...8
	0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x01, 0x00, 0x38, // ...9...8...9...8
	0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, // ................
	0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, // ................
	0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x01, 0x00, // .............I..
	0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, // .............0..
	0x00, 0x4c, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, // .L...l..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xca, 0x31, // ...............1
	0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0e, 0x10, 0x00, 0x00, 0x40, 0x01, 0x00, // .8...........@..
	0x00, 0x0a, 0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, // .8...8.......@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .........@......
	0x00, 0x10, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x00, 0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x1b, // ...float4.......
	0x15, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .@.........float
	0x33, 0x00, 0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // 3........@......
	0x00, 0x08, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x00, 0xf3, 0xf2, 0xf1, 0x12, 0x00, 0x01, // ...float2.......
	0x12, 0x03, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x02, 0x10, 0x00, // ................
	0x00, 0x46, 0x00, 0x03, 0x12, 0x0d, 0x15, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x67, // .F.............g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0xf2, 0xf1, 0x0d, 0x15, 0x03, // l_Position......
	0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, // .......v_color0.
	0xf1, 0x0d, 0x15, 0x03, 0x00, 0x01, 0x10, 0x00, 0x00, 0x20, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, // ......... .v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0xf2, 0xf1, 0x1e, 0x00, 0x05, 0x15, 0x03, 0x00, 0x00, // coord0..........
	0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x4f, // .............,.O
	0x75, 0x74, 0x70, 0x75, 0x74, 0x00, 0xf3, 0xf2, 0xf1, 0x0a, 0x00, 0x18, 0x15, 0x05, 0x10, 0x00, // utput...........
	0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, 0x00, 0x08, 0x10, 0x06, 0x10, 0x00, 0x00, 0x17, 0x00, 0x03, // ................
	0x00, 0x03, 0x10, 0x00, 0x00, 0x0a, 0x00, 0x01, 0x12, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, // .............@..
	0x00, 0x0a, 0x00, 0x18, 0x15, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, 0x00, 0x08, // .....@..........
	0x10, 0x09, 0x10, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00, 0x08, 0x10, 0x00, 0x00, 0x1e, 0x00, 0x1c, // ................
	0x15, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, // .@..............
	0x00, 0x00, 0x40, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x00, 0x0a, 0x00, 0x18, // ..@.float4x4....
	0x15, 0x0b, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x0a, 0x00, 0x18, 0x15, 0x00, 0x10, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcb, 0x38, 0x01, // ..............8.
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x28, 0x66, // .............t(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat3 _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // rn asuint(_x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, // .uint4 floatBits
	0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, // ToUint(float4 _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, // ) { return asuin
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, // t(_x); }.int flo
	0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // atBitsToInt(floa
	0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // t _x) { return a
	0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x32, // sint(_x); }.int2
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, //  floatBitsToInt(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float2 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // urn asint(_x); }
	0x0a, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // .int3 floatBitsT
	0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, // oInt(float3 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, // { return asint(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // x); }.int4 float
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // BitsToInt(float4
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, //  _x) { return as
	0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, // int(_x); }.uint 
	0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, // bitfieldReverse(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, // n reversebits(_x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, // ); }.uint2 bitfi
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, // eldReverse(uint2
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, //  _x) { return re
	0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // versebits(_x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, // .uint3 bitfieldR
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, // everse(uint3 _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, //  { return revers
	0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // ebits(_x); }.uin
	0x74, 0x34, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, // t4 bitfieldRever
	0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // se(uint4 _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, // eturn reversebit
	0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, // s(_x); }.uint pa
	0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ckHalf2x16(float
	0x32, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, // 2 _x).{.return (
	0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x79, 0x29, 0x3c, 0x3c, // f32tof16(_x.y)<<
	0x31, 0x36, 0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, // 16) | f32tof16(_
	0x78, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, // x.x);.}.float2 u
	0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x75, 0x69, // npackHalf2x16(ui
	0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // nt _x).{.return 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, // float2(f16tof32(
	0x5f, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, 0x29, 0x2c, 0x20, 0x66, 0x31, // _x & 0xffff), f1
	0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, // 6tof32(_x >> 16)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, //  );.}.struct Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, // xSampler2D.{.Sam
	0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // plerState m_samp
	0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, // ler;.Texture2D m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, // _texture;.};.str
	0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // uct BgfxISampler
	0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x69, // 2D.{.Texture2D<i
	0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, // nt4> m_texture;.
	0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, // };.struct BgfxUS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // ampler2D.{.Textu
	0x72, 0x65, 0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, // re2D<uint4> m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // xture;.};.struct
	0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, //  BgfxSampler2DAr
	0x72, 0x61, 0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, // ray.{.SamplerSta
	0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, // te m_sampler;.Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, // xture2DArray m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, // t BgfxSampler2DS
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, // hadow.{.SamplerC
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, // omparisonState m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // _sampler;.Textur
	0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, // e2D m_texture;.}
	0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // ;.struct BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, // pler2DArrayShado
	0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, // w.{.SamplerCompa
	0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // risonState m_sam
	0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, // pler;.Texture2DA
	0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, // rray m_texture;.
	0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // };.struct BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // mpler3D.{.Sample
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rState m_sampler
	0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, // ;.Texture3D m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // xture;.};.struct
	0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, //  BgfxISampler3D.
	0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, // {.Texture3D<int4
	0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // > m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, // struct BgfxUSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, // ler3D.{.Texture3
	0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // D<uint4> m_textu
	0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, // re;.};.struct Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x0a, 0x7b, 0x0a, // fxSamplerCube.{.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // SamplerState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, // ampler;.TextureC
	0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, // ube m_texture;.}
	0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // ;.struct BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, // plerCubeShadow.{
	0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, // .SamplerComparis
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // onState m_sample
	0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, // r;.TextureCube m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, // _texture;.};.str
	0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uct BgfxSampler2
	0x44, 0x4d, 0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4d, // DMS.{.Texture2DM
	0x53, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // S<float4> m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // ure;.};.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, // gfxTexture2D(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // rd).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // Sample(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // d);.}.float4 bgf
	0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, // xTexture2DBias(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, // mpler, float2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, // oord, float _bia
	0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // s).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ampleBias(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // oord, _bias);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // re2DLod(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float2 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // loat _level).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, // _texture.SampleL
	0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // evel(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // sampler, _coord,
	0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  _level);.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // t4 bgfxTexture2D
	0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // LodOffset(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float2 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, //  float _level, i
	0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nt2 _offset).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, // _texture.SampleL
	0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // evel(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // sampler, _coord,
	0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, //  _level, _offset
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, // Texture2DProj(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, // ord).{.float2 co
	0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, // ord = _coord.xy 
	0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, // * rcp(_coord.z);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // e(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // pler, coord);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // re2DProj(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler2D _sampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, //  float4 _coord).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, // {.float2 coord =
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, //  _coord.xy * rcp
	0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // (_coord.w);.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, // xture.Sample(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // mpler.m_sampler,
	0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  coord);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, // 4 bgfxTexture2DG
	0x72, 0x61, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // rad(BgfxSampler2
	0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // D _sampler, floa
	0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t2 _coord, float
	0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // 2 _dPdx, float2 
	0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // _dPdy).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x28, 0x5f, 0x73, // re.SampleGrad(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, // , _coord, _dPdx,
	0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _dPdy);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, // 4 bgfxTexture2DA
	0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // rray(BgfxSampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // 2DArray _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // , float3 _coord)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, // ple(_sampler.m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, // ampler, _coord);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, // xture2DArrayLod(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, // BgfxSampler2DArr
	0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // ay _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at3 _coord, floa
	0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t _lod).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, // ure.SampleLevel(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // er, _coord, _lod
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, // Texture2DArrayLo
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // dOffset(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ler2DArray _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // rd, float _level
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, // , int2 _offset).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // leLevel(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, // rd, _level, _off
	0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, // set);.}.float bg
	0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // fxShadow2D(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, // ampler2DShadow _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // sampler, float3 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _coord).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, // ure.SampleCmpLev
	0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // elZero(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, // d.xy, _coord.z);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, // .}.float bgfxSha
	0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // dow2DProj(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, // mpler2DShadow _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // ampler, float4 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // coord).{.float3 
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, // coord = _coord.x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // yz * rcp(_coord.
	0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // w);.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, // mpleCmpLevelZero
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x63, // ler, coord.xy, c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oord.z);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x41, 0x72, // 4 bgfxShadow2DAr
	0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // ray(BgfxSampler2
	0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, // DArrayShadow _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, // mpler, float4 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, // e.SampleCmpLevel
	0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // Zero(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // sampler, _coord.
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // xyz, _coord.w);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ture3D(BgfxSampl
	0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // er3D _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat3 _coord).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ler, _coord);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // re3DLod(BgfxSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler3D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float3 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // loat _level).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, // _texture.SampleL
	0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // evel(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // sampler, _coord,
	0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, //  _level);.}.int4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, //  bgfxTexture3D(B
	0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, // gfxISampler3D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, // coord).{.uint3 s
	0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // ize;._sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, // texture.GetDimen
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, // sions(size.x, si
	0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // ze.y, size.z);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, // _texture.Load(in
	0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, // t4(_coord * size
	0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, // , 0) );.}.uint4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, // bgfxTexture3D(Bg
	0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, // fxUSampler3D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, // oord).{.uint3 si
	0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // ze;._sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, // exture.GetDimens
	0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, // ions(size.x, siz
	0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, // e.y, size.z);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, // texture.Load(int
	0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, // 4(_coord * size,
	0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, //  0) );.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x28, // bgfxTextureCube(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, // BgfxSamplerCube 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _sampler, float3
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  _coord).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, // ture.Sample(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _coord);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, // 4 bgfxTextureCub
	0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // eBias(BgfxSample
	0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // rCube _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float3 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat _bias).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, // texture.SampleBi
	0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // as(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // bias);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, // bgfxTextureCubeL
	0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, // od(BgfxSamplerCu
	0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // be _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at3 _coord, floa
	0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t _level).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, // xture.SampleLeve
	0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // l(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, // pler, _coord, _l
	0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // evel);.}.float b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, // gfxShadowCube(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, // fxSamplerCubeSha
	0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // dow _sampler, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat4 _coord).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, // _texture.SampleC
	0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, // mpLevelZero(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // _coord.xyz, _coo
	0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // rd.w);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, // bgfxTexelFetch(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // mpler, int2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // rd, int _lod).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, // m_texture.Load(i
	0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // nt3(_coord, _lod
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // ) );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x73, // fxTexelFetchOffs
	0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // et(BgfxSampler2D
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, //  _sampler, int2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // _coord, int _lod
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, // , int2 _offset).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, // r.m_texture.Load
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, // (int3(_coord, _l
	0x6f, 0x64, 0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, // od), _offset );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float2 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // tureSize(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler2D _sampler,
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, //  int _lod).{.flo
	0x61, 0x74, 0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, // at2 result;._sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, // pler.m_texture.G
	0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, // etDimensions(res
	0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x29, // ult.x, result.y)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, // ;.return result;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, // xtureGather(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float2 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, // pler.m_texture.G
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // atherRed(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // ord );.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, // bgfxTextureGathe
	0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // rOffset(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, // float2 _coord, i
	0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // nt2 _offset).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, // _texture.GatherR
	0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // ed(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // offset );.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, // t4 bgfxTextureGa
	0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ther(BgfxSampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // 2DArray _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // , float3 _coord)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, // er.m_texture.Gat
	0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // herRed(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // d );.}.int4 bgfx
	0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, // TexelFetch(BgfxI
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // er, int2 _coord,
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, //  int _lod).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, // exture.Load(int3
	0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, // (_coord, _lod) )
	0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // ;.}.uint4 bgfxTe
	0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, // xelFetch(BgfxUSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, // , int2 _coord, i
	0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // nt _lod).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, // ture.Load(int3(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, // coord, _lod) );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // elFetch(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ler2DMS _sampler
	0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, // , int2 _coord, i
	0x6e, 0x74, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x0a, 0x7b, // nt _sampleIdx).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, // _coord, _sampleI
	0x64, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // dx);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, // fxTexelFetch(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, // xSampler2DArray 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, // _sampler, int3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // coord, int _lod)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, // er.m_texture.Loa
	0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // d(int4(_coord, _
	0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // lod) );.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, //  bgfxTexelFetch(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, // BgfxSampler3D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // ampler, int3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, // ord, int _lod).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, // .m_texture.Load(
	0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, // int4(_coord, _lo
	0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, // d) );.}.float3 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, // gfxTextureSize(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler3D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // mpler, int _lod)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, // .{.float3 result
	0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // ;._sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, // ture.GetDimensio
	0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, // ns(result.x, res
	0x75, 0x6c, 0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x7a, 0x29, // ult.y, result.z)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, // ;.return result;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, // .}.float3 instMu
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, // l(float3 _vec, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, // loat3x3 _mtx) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, // return mul(_mtx,
	0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  _vec); }.float3
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, //  instMul(float3x
	0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // 3 _mtx, float3 _
	0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, // vec) { return mu
	0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, // l(_vec, _mtx); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // .float4 instMul(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // float4 _vec, flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at4x4 _mtx) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, // turn mul(_mtx, _
	0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, // vec); }.float4 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // nstMul(float4x4 
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, // _mtx, float4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, // c) { return mul(
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // _vec, _mtx); }.b
	0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, // ool2 lessThan(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 _a, float2 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, // < _b; }.bool3 le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, // ssThan(float3 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float3 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a < _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, // .bool4 lessThan(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 _a, float
	0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 4 _b) { return _
	0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, // a < _b; }.bool2 
	0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, // lessThanEqual(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 _a, float2 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, // <= _b; }.bool3 l
	0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, // essThanEqual(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _a, float3 _
	0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, // b) { return _a <
	0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, // = _b; }.bool4 le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ssThanEqual(floa
	0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // t4 _a, float4 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, // ) { return _a <=
	0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, //  _b; }.bool2 gre
	0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // aterThan(float2 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float2 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, //  return _a > _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, //  }.bool3 greater
	0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, // Than(float3 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float3 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // urn _a > _b; }.b
	0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, // ool4 greaterThan
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (float4 _a, floa
	0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _b) { return 
	0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, // _a > _b; }.bool2
	0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, //  greaterThanEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at2 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a >= _b; }.boo
	0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, // l3 greaterThanEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float3 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat3 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a >= _b; }.b
	0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, // ool4 greaterThan
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, // Equal(float4 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float4 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // turn _a >= _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, // .bool2 notEqual(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // a != _b; }.bool3
	0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  notEqual(float3
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float3 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, // { return _a != _
	0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, // b; }.bool4 notEq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float4 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat4 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a != _b; }.b
	0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ool2 equal(float
	0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, // 2 _a, float2 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, //  { return _a == 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x65, 0x71, 0x75, 0x61, // _b; }.bool3 equa
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float3 _a, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a == _b; }.boo
	0x6c, 0x34, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // l4 equal(float4 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float4 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, //  return _a == _b
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, // ; }.float mix(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, // oat _a, float _b
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // , float _t) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, // turn lerp(_a, _b
	0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // , _t); }.float2 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // mix(float2 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // loat2 _b, float2
	0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, //  _t) { return le
	0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, // rp(_a, _b, _t); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, // }.float3 mix(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _a, float3 _
	0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, // b, float3 _t) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, // return lerp(_a, 
	0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _b, _t); }.float
	0x34, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, // 4 mix(float4 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  float4 _b, floa
	0x74, 0x34, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _t) { return 
	0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, // lerp(_a, _b, _t)
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, // ; }.float mod(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, // oat _a, float _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, // ) { return _a - 
	0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, // _b * floor(_a / 
	0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x6f, // _b); }.float2 mo
	0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // d(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at2 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, //  _a - _b * floor
	0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // (_a / _b); }.flo
	0x61, 0x74, 0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 mod(float3 _
	0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, // a, float3 _b) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, // return _a - _b *
	0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, //  floor(_a / _b);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, //  }.float4 mod(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _a, float4 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, // - _b * floor(_a 
	0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // / _b); }.float2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x) { return fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // oat2(_x, _x); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // float3 vec3_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, // turn float3(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _x, _x); }.float
	0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // 4 vec4_splat(flo
	0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _x) { return 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // float4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, // x, _x); }.uint2 
	0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // uvec2_splat(uint
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, //  _x) { return ui
	0x6e, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // nt2(_x, _x); }.u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // int3 uvec3_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, // rn uint3(_x, _x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x75, 0x76, //  _x); }.uint4 uv
	0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec4_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, // x) { return uint
	0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // 4(_x, _x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, // ); }.float4x4 mt
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // xFromRows(float4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, //  _0, float4 _1, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 _2, float
	0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, // 4 _3).{.return f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // loat4x4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _2, _3);.}.float
	0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, // 4x4 mtxFromCols(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 _0, float
	0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, // 4 _1, float4 _2,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  float4 _3).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, // turn transpose(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // loat4x4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // _2, _3) );.}.flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, // at3x3 mtxFromRow
	0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // s(float3 _0, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _1, float3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 2).{.return floa
	0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, // t3x3(_0, _1, _2)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, // ;.}.float3x3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // FromCols(float3 
	0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, // _0, float3 _1, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // loat3 _2).{.retu
	0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, // rn transpose(flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, // at3x3(_0, _1, _2
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // ) );.}.static fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, // oat4 u_viewRect;
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // .static float4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _viewTexel;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, // orm float4x4 u_v
	0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // iew;.static floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, // t4x4 u_invView;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // uniform float4x4
	0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, //  u_proj;.static 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, // float4x4 u_invPr
	0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oj;.static float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // 4x4 u_viewProj;.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // static float4x4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, // u_invViewProj;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // tatic float4x4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // _model[32];.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // ic float4x4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, // delView;.static 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // float4x4 u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ViewProj;.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, //  float4 u_alphaR
	0x65, 0x66, 0x34, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ef4;.static floa
	0x74, 0x32, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x3b, 0x0a, 0x73, // t2 u_alphaRef;.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, // tatic float4 u_f
	0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ogStart;.uniform
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x45, 0x6e, 0x64, //  float4 u_fogEnd
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.uniform float4
	0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  u_fogRange;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, // form float4 u_fo
	0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // gDisable;.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x43, 0x6f, 0x6c, //  float4 u_fogCol
	0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // or;.uniform floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x73, 0x74, // t4x4 u_world;.st
	0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6d, // atic float4 u_am
	0x62, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // bLight;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, // loat4 u_lightPar
	0x61, 0x6d, 0x73, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // ams[8];.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, // loat4 u_lightPos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ition[8];.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, //  float4 u_lightD
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, // irection[8];.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, // tic float4 u_lig
	0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5b, 0x38, 0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // htColor[8];.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x43, // ic float4 u_matC
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, // olor;.static flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x3b, // at4 u_surfProps;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x44, 0x6f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, // .float3 DoDynami
	0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x56, 0x2c, // cLight(float3 V,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x4e, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, //  float3 N).{.flo
	0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at3 color = floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // t3(0.0, 0.0, 0.0
	0x29, 0x3b, 0x0a, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, // );.for(int i = 0
	0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x38, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x7b, 0x0a, 0x69, // ; i < 8; i++){.i
	0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, // f(u_lightParams[
	0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x62, 0x72, 0x65, // i].x == 0.0).bre
	0x61, 0x6b, 0x3b, 0x0a, 0x69, 0x66, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, // ak;.if(u_lightPa
	0x72, 0x61, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x2e, 0x30, // rams[i].x == 1.0
	0x29, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, // ){.float l = max
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x4e, 0x2c, 0x20, 0x2d, 0x75, 0x5f, // (0.0, dot(N, -u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5b, 0x69, // lightDirection[i
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x2b, // ].xyz));.color +
	0x3d, 0x20, 0x6c, 0x2a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // = l*u_lightColor
	0x5b, 0x69, 0x5d, 0x2e, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x3b, // [i].rgb;.}else.;
	0x0a, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, // .}.return color;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x28, 0x66, // .}.float DoFog(f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x77, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // loat w).{.return
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x77, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x66, 0x6f, //  clamp((w - u_fo
	0x67, 0x45, 0x6e, 0x64, 0x2e, 0x78, 0x29, 0x2a, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x52, 0x61, 0x6e, // gEnd.x)*u_fogRan
	0x67, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x75, 0x5f, 0x66, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, // ge.x, u_fogDisab
	0x6c, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x4f, 0x75, // le.x, 1.0);.}.Ou
	0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // tput main( float
	0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, // 4 a_color0 : COL
	0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, // OR0 , float3 a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, // osition : POSITI
	0x4f, 0x4e, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, // ON , float2 a_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, // xcoord0 : TEXCOO
	0x52, 0x44, 0x30, 0x29, 0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, // RD0) { Output _v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // arying_; _varyin
	0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, // g_.v_color0 = fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // oat4(1.0, 0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, // .0, 1.0);; _vary
	0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // ing_.v_texcoord0
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, //  = float3(0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // .0, 0.0);;.{.flo
	0x61, 0x74, 0x34, 0x20, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x77, 0x6f, // at4 V = mul(u_wo
	0x72, 0x6c, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, // rld, float4(a_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x66, // sition, 1.0));.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x56, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, // loat4 cV = mul(u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x2c, 0x20, 0x56, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, // _view, V);._vary
	0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // ing_.gl_Position
	0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x63, //  = mul(u_proj, c
	0x56, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, // V);._varying_.v_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // color0 = a_color
	0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, // 0;._varying_.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, // excoord0.xy = a_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, // texcoord0;._vary
	0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // ing_.v_texcoord0
	0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x28, 0x5f, 0x76, 0x61, 0x72, 0x79, // .z = DoFog(_vary
	0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // ing_.gl_Position
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, // .w);.} return _v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, 0x07, 0x00, 0x00, 0x00, // arying_;.}......
	0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, // ....G.......H...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xca, 0x31, // ...............1
	0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x14, 0x00, 0x00, // .8..............
	0x00, 0x0b, 0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x00, // ................
	0x00, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x00, 0xf2, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .DoFog..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x33, 0x44, // .............D3D
	0x53, 0x48, 0x44, 0x52, 0x00, 0x30, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // SHDR.0..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, // . ..`...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x10, 0x00, // ................
	0x00, 0x44, 0x6f, 0x46, 0x6f, 0x67, 0x00, 0xf2, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .DoFog..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, // ................
	0xff, 0x1a, 0x09, 0x2f, 0xf1, 0x38, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .../.8... ......
	0x00, 0x01, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, // .............M..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, // .....1..........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, // .....m..........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......... ......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......@.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, // ................
	0x00, 0x18, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, // .....$...0...<..
	0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .H..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x25, // ...............%
	0x11, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x1a, 0x00, 0x51, 0x11, 0x0c, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, // ...Q............
	0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x00, 0x00, 0x1a, 0x00, 0x51, // .....u_view....Q
	0x11, 0x0c, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, // .........@......
	0xff, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x0d, 0x10, 0x00, // .u_proj....Q....
	0x00, 0x08, 0x00, 0x00, 0x00, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x66, // .............u_f
	0x6f, 0x67, 0x45, 0x6e, 0x64, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x51, 0x11, 0x0d, 0x10, 0x00, // ogEnd......Q....
	0x00, 0x08, 0x00, 0x00, 0x00, 0x90, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x66, // .............u_f
	0x6f, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x00, 0x22, 0x00, 0x51, 0x11, 0x0d, 0x10, 0x00, // ogRange..".Q....
	0x00, 0x08, 0x00, 0x00, 0x00, 0xa0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x66, // .............u_f
	0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x51, // ogDisable......Q
	0x11, 0x0c, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .u_world........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x1a, 0x09, 0x2f, // .............../
	0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, // ................
	0xff, 0x77, 0x09, 0x31, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x14, 0x8e, 0x0e, 0x00, 0x14, // .w.1............
	0x6b, 0x0f, 0x00, 0x01, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, // k....L... ...,..
	0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, // .T..............
	0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x20, 0x00, 0x00, // .........0... ..
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x09, // `...............
	0x00, 0x8c, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, // .............mai
	0x6e, 0x00, 0x6e, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x2d, 0xba, 0x2e, 0xf1, 0x01, 0x00, 0x00, // n.none...-......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, // .....0... ..`...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, // .............0..
	0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, // ................
	0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x46, 0x3a, 0x5c, 0x64, 0x65, 0x76, 0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, // .F:.dev.code.re3
	0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, // -upstream.librw.
	0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, // src.bgfx.shaders
	0x5c, 0x69, 0x6d, 0x33, 0x64, 0x5f, 0x76, 0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, // .im3d_vs_bgfx.in
	0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x00, 0x00, 0xfe, 0xef, 0xfe, 0xef, 0x01, 0x00, 0x00, // c.hlsl..........
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0c, 0x00, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x2e, 0x31, // ...............1
	0x01, 0x51, 0xd9, 0xbe, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x16, 0x01, 0x30, 0xcc, 0xd7, 0x64, 0xea, // .Q..^......0..d.
	0x43, 0xa8, 0x97, 0xd3, 0x24, 0xc7, 0x25, 0xac, 0x75, 0x73, 0x00, 0x00, 0x00, 0x2f, 0x4c, 0x69, // C...$.%.us.../Li
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x00, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x00, 0x2f, 0x73, // nkInfo./names./s
	0x72, 0x63, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x2f, // rc/headerblock./
	0x73, 0x72, 0x63, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x66, 0x3a, 0x5c, 0x64, 0x65, 0x76, // src/files/f:.dev
	0x5c, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x72, 0x65, 0x33, 0x2d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, // .code.re3-upstre
	0x61, 0x6d, 0x5c, 0x6c, 0x69, 0x62, 0x72, 0x77, 0x5c, 0x73, 0x72, 0x63, 0x5c, 0x62, 0x67, 0x66, // am.librw.src.bgf
	0x78, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x69, 0x6d, 0x33, 0x64, 0x5f, 0x76, // x.shaders.im3d_v
	0x73, 0x5f, 0x62, 0x67, 0x66, 0x78, 0x2e, 0x69, 0x6e, 0x63, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, // s_bgfx.inc.hlsl.
	0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, // ............:...
	0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, // ................
	0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, // ............"...
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, // .........Q3.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, // . .......x...[..
	0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd3, 0x2e, 0x00, 0x00, 0x80, 0x00, 0x00, // .L..............
	0x00, 0x14, 0x2e, 0x00, 0x00, 0x64, 0x0a, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, // .....d...@......
	0x00, 0x28, 0x00, 0x00, 0x00, 0x68, 0x02, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, // .(...h...,......
	0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, // .....G...(...F..
	0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, // .@... .......*..
	0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, // .+...,...-......
	0x00, 0x2f, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, // ./...0...1...2..
	0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, // .3...4...5...6..
	0x00, 0x37, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, // .7...8...9...:..
	0x00, 0x3b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, // .;...<...=...>..
	0x00, 0x3f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, // .?...!..........
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // ................
	0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, // ................
	0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, // ................
	0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, // ................
	0x00, 0x1a, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, // ................
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, // ........."...#..
	0x00, 0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, // .$...%...&...'..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, // .....)...A...B..
	0x00, 0x43, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .C...E...D......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, // .............H..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x05, // ................
	0x00, 0x01, 0x00, 0x10, 0x00, 0xf0, 0x00,                                                       // .......
};
